====================================
FILE: aamain2.c-
-rwxrwx--- 1 root vboxsf 101 Apr 30 16:20 aamain2.c-
-rwxrwx--- 1 root vboxsf  60 May  2 10:26 aamain2.expected
-rwxrwx--- 1 root vboxsf  20 Dec  1  2014 aamain2.in
-rwxrwx--- 1 root vboxsf 620 May  4  2021 aamain2.mem
-rwxrwx--- 1 root vboxsf 657 May  4  2021 aamain2.out
aamain2.out ztmp4778.txt differ: byte 1, line 1
aamain2 (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: aamain2.tm
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 2]					   |	666 T
.   .   Child: 1 Call: output of type void [line: 3]						   |	entered: 496
.   .   .   Child: 0 Const 666 of type int [line: 3]						   |	entered: T
.   .   Sibling: 1 Call: outputb of type void [line: 4]						   |	Bye.
.   .   .   Child: 0 Const true of type bool [line: 4]						   <
.   .   Sibling: 2 Call: outnl of type void [line: 5]						   <
.   .   Sibling: 3 Call: input of type int [line: 6]						   <
.   .   Sibling: 4 Call: inputb of type bool [line: 7]						   <
.   .   Sibling: 5 Return [line: 9]								   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: array.c-
-rwxrwx--- 1 root vboxsf 703 Apr 30 16:20 array.c-
-rwxrwx--- 1 root vboxsf  64 May  2 10:26 array.expected
-rwxrwx--- 1 root vboxsf   0 May  4  2021 array.mem
-rwxrwx--- 1 root vboxsf  37 May  4  2021 array.out
array.out ztmp4778.txt differ: byte 1, line 1
array (Output DIFF)
------------------------------------								   |	Loading file: array.tm
												   >	3 3 4 496
												   >	3 3 314 496
												   >	3
												   >	314 3
												   >	314 3
												   >	Bye.
====================================
FILE: array0.c-
-rwxrwx--- 1 root vboxsf  525 Apr 30 16:20 array0.c-
-rwxrwx--- 1 root vboxsf   77 May  2 10:26 array0.expected
-rwxrwx--- 1 root vboxsf 5410 May  4  2021 array0.mem
-rwxrwx--- 1 root vboxsf 5447 May  4  2021 array0.out
array0.out ztmp4778.txt differ: byte 1, line 1
array0 (Output DIFF)
Var: g of array of type int [mem: Global loc: -1 size: 5] [line: 1]				   |	Loading file: array0.tm
Sibling: 1 Func: show returns type int [mem: Global loc: 0 size: -4] [line: 2]			   |	777 666
.   Child: 0 Parm: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 2]		   |	777 666
.   Sibling: 1 Parm: n of type int [mem: Parameter loc: -3 size: 1] [line: 2]			   |	777 777 666 666
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 3]					   |	780 670
.   .   Child: 1 Call: output of type void [line: 4]						   |	880 770
.   .   .   Child: 0 Op: [ of type int [line: 4]						   |	Bye.
.   .   .   .   Child: 0 Id: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 4]	   <
.   .   .   .   Child: 1 Id: n of type int [mem: Parameter loc: -3 size: 1] [line: 4]		   <
.   .   Sibling: 1 Return [line: 5]								   <
.   .   .   Child: 0 Op: [ of type int [line: 5]						   <
.   .   .   .   Child: 0 Id: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 5]	   <
.   .   .   .   Child: 1 Id: n of type int [mem: Parameter loc: -3 size: 1] [line: 5]		   <
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 8]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -7] [line: 9]					   <
.   .   Child: 0 Var: a of array of type int [mem: Local loc: -3 size: 5] [line: 10]		   <
.   .   Child: 1 Assign: = of type int [line: 12]						   <
.   .   .   Child: 0 Op: [ of type int [line: 12]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 5] [line: 12]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 12]						   <
.   .   .   Child: 1 Const 666 of type int [line: 12]						   <
.   .   Sibling: 1 Assign: = of type int [line: 13]						   <
.   .   .   Child: 0 Op: [ of type int [line: 13]						   <
.   .   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -3 size: 5] [line: 13]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 13]						   <
.   .   .   Child: 1 Const 777 of type int [line: 13]						   <
.   .   Sibling: 2 Call: output of type void [line: 15]						   <
.   .   .   Child: 0 Op: [ of type int [line: 15]						   <
.   .   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -3 size: 5] [line: 15]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 15]						   <
.   .   Sibling: 3 Call: output of type void [line: 16]						   <
.   .   .   Child: 0 Op: [ of type int [line: 16]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 5] [line: 16]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 16]						   <
.   .   Sibling: 4 Call: outnl of type void [line: 17]						   <
.   .   Sibling: 5 Call: show of type int [line: 19]						   <
.   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -3 size: 5] [line: 19]		   <
.   .   .   Sibling: 1 Const 1 of type int [line: 19]						   <
.   .   Sibling: 6 Call: show of type int [line: 20]						   <
.   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 5] [line: 20]	   <
.   .   .   Sibling: 1 Const 1 of type int [line: 20]						   <
.   .   Sibling: 7 Call: outnl of type void [line: 21]						   <
.   .   Sibling: 8 Call: output of type void [line: 23]						   <
.   .   .   Child: 0 Call: show of type int [line: 23]						   <
.   .   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -3 size: 5] [line: 23]	   <
.   .   .   .   Sibling: 1 Const 1 of type int [line: 23]					   <
.   .   Sibling: 9 Call: output of type void [line: 24]						   <
.   .   .   Child: 0 Call: show of type int [line: 24]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 5] [line: 24]	   <
.   .   .   .   Sibling: 1 Const 1 of type int [line: 24]					   <
.   .   Sibling: 10 Call: outnl of type void [line: 25]						   <
.   .   Sibling: 11 Assign: += of type int [line: 27]						   <
.   .   .   Child: 0 Op: [ of type int [line: 27]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 5] [line: 27]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 27]						   <
.   .   .   Child: 1 Const 4 of type int [line: 27]						   <
.   .   Sibling: 12 Assign: += of type int [line: 28]						   <
.   .   .   Child: 0 Op: [ of type int [line: 28]						   <
.   .   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -3 size: 5] [line: 28]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 28]						   <
.   .   .   Child: 1 Const 3 of type int [line: 28]						   <
.   .   Sibling: 13 Call: output of type void [line: 30]					   <
.   .   .   Child: 0 Op: [ of type int [line: 30]						   <
.   .   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -3 size: 5] [line: 30]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 30]						   <
.   .   Sibling: 14 Call: output of type void [line: 31]					   <
.   .   .   Child: 0 Op: [ of type int [line: 31]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 5] [line: 31]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 31]						   <
.   .   Sibling: 15 Call: outnl of type void [line: 32]						   <
.   .   Sibling: 16 Call: output of type void [line: 34]					   <
.   .   .   Child: 0 Assign: += of type int [line: 34]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 34]						   <
.   .   .   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -3 size: 5] [line: 34]	   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 34]					   <
.   .   .   .   Child: 1 Const 100 of type int [line: 34]					   <
.   .   Sibling: 17 Call: output of type void [line: 35]					   <
.   .   .   Child: 0 Assign: += of type int [line: 35]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 35]						   <
.   .   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 5] [line: 35]   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 35]					   <
.   .   .   .   Child: 1 Const 100 of type int [line: 35]					   <
.   .   Sibling: 18 Call: outnl of type void [line: 36]						   <
Offset for end of global space: -5								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: array1.c-
-rwxrwx--- 1 root vboxsf  209 Apr 30 16:20 array1.c-
-rwxrwx--- 1 root vboxsf   85 May  2 10:26 array1.expected
-rwxrwx--- 1 root vboxsf 2482 May  4  2021 array1.mem
-rwxrwx--- 1 root vboxsf 2519 May  4  2021 array1.out
array1.out ztmp4778.txt differ: byte 53, line 2
array1 (Output DIFF)
WARNING(1): The parameter 'y' seems not to be used.							WARNING(1): The parameter 'y' seems not to be used.
Func: ford returns type void [mem: Global loc: 0 size: -4] [line: 1]				   |	Loading file: array1.tm
.   Child: 0 Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 1]		   |	777
.   Sibling: 1 Parm: y of array of type int [mem: Parameter loc: -3 size: 1] [line: 1]		   |	Bye.
.   Child: 1 Compound [mem: None loc: 0 size: -27] [line: 2]					   <
.   .   Child: 0 Var: z of array of type int [mem: Local loc: -5 size: 23] [line: 3]		   <
.   .   Child: 1 Op: sizeof of type int [line: 5]						   <
.   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 5]	   <
.   .   Sibling: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Op: [ of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: z of array of type int [mem: Local loc: -5 size: 23] [line: 6]	   <
.   .   .   .   Child: 1 Const 11 of type int [line: 6]						   <
.   .   .   Child: 1 Op: [ of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 6]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 6]						   <
.   .   Sibling: 2 Assign: = of type int [line: 7]						   <
.   .   .   Child: 0 Op: [ of type int [line: 7]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 7]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 7]						   <
.   .   .   Child: 1 Const 777 of type int [line: 7]						   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 10]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -36] [line: 11]					   <
.   .   Child: 0 Var: y of array of type int [mem: Local loc: -3 size: 34] [line: 12]		   <
.   .   Child: 1 Assign: = of type int [line: 14]						   <
.   .   .   Child: 0 Op: [ of type int [line: 14]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -3 size: 34] [line: 14]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 14]						   <
.   .   .   Child: 1 Const 666 of type int [line: 14]						   <
.   .   Sibling: 1 Call: ford of type void [line: 15]						   <
.   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -3 size: 34] [line: 15]	   <
.   .   .   Sibling: 1 Id: y of array of type int [mem: Local loc: -3 size: 34] [line: 15]	   <
.   .   Sibling: 2 Call: output of type void [line: 16]						   <
.   .   .   Child: 0 Op: [ of type int [line: 16]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -3 size: 34] [line: 16]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 16]						   <
.   .   Sibling: 3 Call: outnl of type void [line: 17]						   <
Offset for end of global space: 0								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: array2.c-
-rwxrwx--- 1 root vboxsf  195 Apr 30 16:20 array2.c-
-rwxrwx--- 1 root vboxsf   37 May  2 10:26 array2.expected
-rwxrwx--- 1 root vboxsf 2239 May  4  2021 array2.mem
-rwxrwx--- 1 root vboxsf 2276 May  4  2021 array2.out
array2.out ztmp4778.txt differ: byte 1, line 1
array2 (Output DIFF)
Func: ford returns type void [mem: Global loc: 0 size: -3] [line: 1]				   |	Loading file: array2.tm
.   Child: 0 Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 1]		   |	666 777
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 2]					   |	Bye.
.   .   Child: 0 Var: y of type int [mem: Local loc: -3 size: 1] [line: 3]			   <
.   .   Child: 1 Assign: = of type int [line: 4]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 4]			   <
.   .   .   Child: 1 Op: [ of type int [line: 4]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 4]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 4]						   <
.   .   Sibling: 1 Call: output of type void [line: 5]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 5]			   <
.   .   Sibling: 2 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Op: [ of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 6]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 6]						   <
.   .   .   Child: 1 Const 777 of type int [line: 6]						   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 9]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 10]					   <
.   .   Child: 0 Var: y of array of type int [mem: Local loc: -3 size: 6] [line: 11]		   <
.   .   Child: 1 Assign: = of type int [line: 13]						   <
.   .   .   Child: 0 Op: [ of type int [line: 13]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -3 size: 6] [line: 13]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 13]						   <
.   .   .   Child: 1 Const 666 of type int [line: 13]						   <
.   .   Sibling: 1 Call: ford of type void [line: 14]						   <
.   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -3 size: 6] [line: 14]		   <
.   .   Sibling: 2 Op: [ of type int [line: 15]							   <
.   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -3 size: 6] [line: 15]		   <
.   .   .   Child: 1 Const 3 of type int [line: 15]						   <
.   .   Sibling: 3 Call: output of type void [line: 16]						   <
.   .   .   Child: 0 Op: [ of type int [line: 16]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -3 size: 6] [line: 16]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 16]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: arraysize.c-
-rwxrwx--- 1 root vboxsf  487 Apr 30 16:20 arraysize.c-
-rwxrwx--- 1 root vboxsf  194 May  2 10:26 arraysize.expected
-rwxrwx--- 1 root vboxsf 5213 May  4  2021 arraysize.mem
-rwxrwx--- 1 root vboxsf 5250 May  4  2021 arraysize.out
arraysize.out ztmp4778.txt differ: byte 105, line 3
arraysize (Output DIFF)
WARNING(12): The variable 'i' seems not to be used.							WARNING(12): The variable 'i' seems not to be used.
WARNING(25): The variable 'h' seems not to be used.							WARNING(25): The variable 'h' seems not to be used.
Var: g of array of type int [mem: Global loc: -1 size: 13] [line: 1]				   |	Loading file: arraysize.tm
Sibling: 1 Func: ford returns type void [mem: Global loc: 0 size: -3] [line: 10]		   |	777 11 0 12
.   Child: 0 Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 10]		   |	777 11 888 12
.   Child: 1 Compound [mem: None loc: 0 size: -18] [line: 11]					   |	666 13
.   .   Child: 0 Var: i of type int [mem: Local loc: -3 size: 1] [line: 12]			   |	888 12 888 12
.   .   Sibling: 1 Var: y of array of type int [mem: Local loc: -5 size: 14] [line: 12]		   |	666 13
.   .   Child: 1 Assign: = of type int [line: 13]						   |	132
.   .   .   Child: 0 Op: [ of type int [line: 13]						   |	Bye.
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -5 size: 14] [line: 13]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 13]						   <
.   .   .   Child: 1 Const 666 of type int [line: 13]						   <
.   .   Sibling: 1 Assign: = of type int [line: 14]						   <
.   .   .   Child: 0 Op: [ of type int [line: 14]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 14]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 14]						   <
.   .   .   Child: 1 Const 888 of type int [line: 14]						   <
.   .   Sibling: 2 Call: output of type void [line: 15]						   <
.   .   .   Child: 0 Op: [ of type int [line: 15]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 15]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 15]						   <
.   .   Sibling: 3 Call: output of type void [line: 16]						   <
.   .   .   Child: 0 Op: sizeof of type int [line: 16]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 16]	   <
.   .   Sibling: 4 Call: output of type void [line: 17]						   <
.   .   .   Child: 0 Op: [ of type int [line: 17]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 17]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 17]						   <
.   .   Sibling: 5 Call: output of type void [line: 18]						   <
.   .   .   Child: 0 Op: [ of type int [line: 18]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 18]	   <
.   .   .   .   Child: 1 Op: chsign of type int [line: 18]					   <
.   .   .   .   .   Child: 0 Const 1 of type int [line: 18]					   <
.   .   Sibling: 6 Call: outnl of type void [line: 19]						   <
.   .   Sibling: 7 Call: output of type void [line: 20]						   <
.   .   .   Child: 0 Op: [ of type int [line: 20]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -5 size: 14] [line: 20]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 20]						   <
.   .   Sibling: 8 Call: output of type void [line: 21]						   <
.   .   .   Child: 0 Op: sizeof of type int [line: 21]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -5 size: 14] [line: 21]	   <
.   .   Sibling: 9 Call: outnl of type void [line: 22]						   <
Sibling: 2 Var: h of array of type bool [mem: Global loc: -14 size: 24] [line: 25]		   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 27]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -14] [line: 28]					   <
.   .   Child: 0 Var: m of array of type int [mem: Local loc: -3 size: 12] [line: 29]		   <
.   .   Child: 1 Assign: = of type int [line: 31]						   <
.   .   .   Child: 0 Op: [ of type int [line: 31]						   <
.   .   .   .   Child: 0 Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 31]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 31]						   <
.   .   .   Child: 1 Const 777 of type int [line: 31]						   <
.   .   Sibling: 1 Call: output of type void [line: 32]						   <
.   .   .   Child: 0 Op: [ of type int [line: 32]						   <
.   .   .   .   Child: 0 Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 32]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 32]						   <
.   .   Sibling: 2 Call: output of type void [line: 33]						   <
.   .   .   Child: 0 Op: sizeof of type int [line: 33]						   <
.   .   .   .   Child: 0 Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 33]	   <
.   .   Sibling: 3 Call: output of type void [line: 34]						   <
.   .   .   Child: 0 Op: [ of type int [line: 34]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 34]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 34]						   <
.   .   Sibling: 4 Call: output of type void [line: 35]						   <
.   .   .   Child: 0 Op: sizeof of type int [line: 35]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 35]	   <
.   .   Sibling: 5 Call: outnl of type void [line: 36]						   <
.   .   Sibling: 6 Call: ford of type void [line: 38]						   <
.   .   .   Child: 0 Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 38]	   <
.   .   Sibling: 7 Call: ford of type void [line: 39]						   <
.   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 39]	   <
.   .   Sibling: 8 Call: output of type void [line: 41]						   <
.   .   .   Child: 0 Op: * of type int [line: 41]						   <
.   .   .   .   Child: 0 Op: sizeof of type int [line: 41]					   <
.   .   .   .   .   Child: 0 Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 41]   <
.   .   .   .   Child: 1 Op: sizeof of type int [line: 41]					   <
.   .   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 41   <
.   .   Sibling: 9 Call: outnl of type void [line: 42]						   <
Offset for end of global space: -37								   <
Number of warnings: 2										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: assign1.c-
-rwxrwx--- 1 root vboxsf  499 Apr 30 16:20 assign1.c-
-rwxrwx--- 1 root vboxsf   66 May  2 10:26 assign1.expected
-rwxrwx--- 1 root vboxsf 5070 May  4  2021 assign1.mem
-rwxrwx--- 1 root vboxsf 5107 May  4  2021 assign1.out
assign1.out ztmp4778.txt differ: byte 1, line 1
assign1 (Output DIFF)
Var: gx of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: assign1.tm
Sibling: 1 Var: gy of type int [mem: Global loc: -1 size: 1] [line: 1]				   |	111 222 T F
Sibling: 2 Var: ga of type bool [mem: Global loc: -2 size: 1] [line: 2]				   |	333 444 F T
Sibling: 3 Var: gb of type bool [mem: Global loc: -3 size: 1] [line: 2]				   |	222 F
Sibling: 4 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]			   |	444 T
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 5]					   |	Bye.
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 6]			   <
.   .   Sibling: 1 Var: y of type int [mem: Local loc: -3 size: 1] [line: 6]			   <
.   .   Sibling: 2 Var: a of type bool [mem: Local loc: -4 size: 1] [line: 7]			   <
.   .   Sibling: 3 Var: b of type bool [mem: Local loc: -5 size: 1] [line: 7]			   <
.   .   Child: 1 Assign: = of type int [line: 9]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 9]			   <
.   .   .   Child: 1 Const 111 of type int [line: 9]						   <
.   .   Sibling: 1 Call: output of type void [line: 10]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 10]			   <
.   .   Sibling: 2 Assign: = of type int [line: 11]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 11]			   <
.   .   .   Child: 1 Const 222 of type int [line: 11]						   <
.   .   Sibling: 3 Call: output of type void [line: 12]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 12]			   <
.   .   Sibling: 4 Assign: = of type bool [line: 13]						   <
.   .   .   Child: 0 Id: a of type bool [mem: Local loc: -4 size: 1] [line: 13]			   <
.   .   .   Child: 1 Const true of type bool [line: 13]						   <
.   .   Sibling: 5 Call: outputb of type void [line: 14]					   <
.   .   .   Child: 0 Id: a of type bool [mem: Local loc: -4 size: 1] [line: 14]			   <
.   .   Sibling: 6 Assign: = of type bool [line: 15]						   <
.   .   .   Child: 0 Id: b of type bool [mem: Local loc: -5 size: 1] [line: 15]			   <
.   .   .   Child: 1 Const false of type bool [line: 15]					   <
.   .   Sibling: 7 Call: outputb of type void [line: 16]					   <
.   .   .   Child: 0 Id: b of type bool [mem: Local loc: -5 size: 1] [line: 16]			   <
.   .   Sibling: 8 Call: outnl of type void [line: 17]						   <
.   .   Sibling: 9 Assign: = of type int [line: 19]						   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 19]			   <
.   .   .   Child: 1 Const 333 of type int [line: 19]						   <
.   .   Sibling: 10 Call: output of type void [line: 20]					   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 20]			   <
.   .   Sibling: 11 Assign: = of type int [line: 21]						   <
.   .   .   Child: 0 Id: gy of type int [mem: Global loc: -1 size: 1] [line: 21]		   <
.   .   .   Child: 1 Const 444 of type int [line: 21]						   <
.   .   Sibling: 12 Call: output of type void [line: 22]					   <
.   .   .   Child: 0 Id: gy of type int [mem: Global loc: -1 size: 1] [line: 22]		   <
.   .   Sibling: 13 Assign: = of type bool [line: 23]						   <
.   .   .   Child: 0 Id: ga of type bool [mem: Global loc: -2 size: 1] [line: 23]		   <
.   .   .   Child: 1 Const false of type bool [line: 23]					   <
.   .   Sibling: 14 Call: outputb of type void [line: 24]					   <
.   .   .   Child: 0 Id: ga of type bool [mem: Global loc: -2 size: 1] [line: 24]		   <
.   .   Sibling: 15 Assign: = of type bool [line: 25]						   <
.   .   .   Child: 0 Id: gb of type bool [mem: Global loc: -3 size: 1] [line: 25]		   <
.   .   .   Child: 1 Const true of type bool [line: 25]						   <
.   .   Sibling: 16 Call: outputb of type void [line: 26]					   <
.   .   .   Child: 0 Id: gb of type bool [mem: Global loc: -3 size: 1] [line: 26]		   <
.   .   Sibling: 17 Call: outnl of type void [line: 27]						   <
.   .   Sibling: 18 Assign: = of type int [line: 29]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 29]			   <
.   .   .   Child: 1 Id: y of type int [mem: Local loc: -3 size: 1] [line: 29]			   <
.   .   Sibling: 19 Call: output of type void [line: 30]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 30]			   <
.   .   Sibling: 20 Assign: = of type bool [line: 31]						   <
.   .   .   Child: 0 Id: a of type bool [mem: Local loc: -4 size: 1] [line: 31]			   <
.   .   .   Child: 1 Id: b of type bool [mem: Local loc: -5 size: 1] [line: 31]			   <
.   .   Sibling: 21 Call: outputb of type void [line: 32]					   <
.   .   .   Child: 0 Id: a of type bool [mem: Local loc: -4 size: 1] [line: 32]			   <
.   .   Sibling: 22 Call: outnl of type void [line: 33]						   <
.   .   Sibling: 23 Assign: = of type int [line: 35]						   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 35]			   <
.   .   .   Child: 1 Id: gy of type int [mem: Global loc: -1 size: 1] [line: 35]		   <
.   .   Sibling: 24 Call: output of type void [line: 36]					   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 36]			   <
.   .   Sibling: 25 Assign: = of type bool [line: 37]						   <
.   .   .   Child: 0 Id: ga of type bool [mem: Global loc: -2 size: 1] [line: 37]		   <
.   .   .   Child: 1 Id: gb of type bool [mem: Global loc: -3 size: 1] [line: 37]		   <
.   .   Sibling: 26 Call: outputb of type void [line: 38]					   <
.   .   .   Child: 0 Id: ga of type bool [mem: Global loc: -2 size: 1] [line: 38]		   <
.   .   Sibling: 27 Call: outnl of type void [line: 39]						   <
.   .   Sibling: 28 Return [line: 41]								   <
Offset for end of global space: -4								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: assign2.c-
-rwxrwx--- 1 root vboxsf  607 Apr 30 16:20 assign2.c-
-rwxrwx--- 1 root vboxsf   66 May  2 10:26 assign2.expected
-rwxrwx--- 1 root vboxsf 8515 May  4  2021 assign2.mem
-rwxrwx--- 1 root vboxsf 8552 May  4  2021 assign2.out
assign2.out ztmp4778.txt differ: byte 1, line 1
assign2 (Output DIFF)
Var: gx of array of type int [mem: Global loc: -1 size: 8] [line: 1]				   |	Loading file: assign2.tm
Sibling: 1 Var: gy of array of type int [mem: Global loc: -9 size: 7] [line: 1]			   |	111 222 T F
Sibling: 2 Var: ga of array of type bool [mem: Global loc: -16 size: 6] [line: 2]		   |	333 444 F T
Sibling: 3 Var: gb of array of type bool [mem: Global loc: -22 size: 5] [line: 2]		   |	222 F
Sibling: 4 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]			   |	444 T
.   Child: 1 Compound [mem: None loc: 0 size: -32] [line: 5]					   |	Bye.
.   .   Child: 0 Var: x of array of type int [mem: Local loc: -3 size: 9] [line: 6]		   <
.   .   Sibling: 1 Var: y of array of type int [mem: Local loc: -12 size: 8] [line: 6]		   <
.   .   Sibling: 2 Var: a of array of type bool [mem: Local loc: -20 size: 7] [line: 7]		   <
.   .   Sibling: 3 Var: b of array of type bool [mem: Local loc: -27 size: 6] [line: 7]		   <
.   .   Child: 1 Assign: = of type int [line: 9]						   <
.   .   .   Child: 0 Op: [ of type int [line: 9]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 9]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 9]						   <
.   .   .   Child: 1 Const 111 of type int [line: 9]						   <
.   .   Sibling: 1 Call: output of type void [line: 10]						   <
.   .   .   Child: 0 Op: [ of type int [line: 10]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 10]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 10]						   <
.   .   Sibling: 2 Assign: = of type int [line: 11]						   <
.   .   .   Child: 0 Op: [ of type int [line: 11]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -12 size: 8] [line: 11]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 11]						   <
.   .   .   Child: 1 Const 222 of type int [line: 11]						   <
.   .   Sibling: 3 Call: output of type void [line: 12]						   <
.   .   .   Child: 0 Op: [ of type int [line: 12]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -12 size: 8] [line: 12]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 12]						   <
.   .   Sibling: 4 Assign: = of type bool [line: 13]						   <
.   .   .   Child: 0 Op: [ of type bool [line: 13]						   <
.   .   .   .   Child: 0 Id: a of array of type bool [mem: Local loc: -20 size: 7] [line: 13]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 13]						   <
.   .   .   Child: 1 Const true of type bool [line: 13]						   <
.   .   Sibling: 5 Call: outputb of type void [line: 14]					   <
.   .   .   Child: 0 Op: [ of type bool [line: 14]						   <
.   .   .   .   Child: 0 Id: a of array of type bool [mem: Local loc: -20 size: 7] [line: 14]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 14]						   <
.   .   Sibling: 6 Assign: = of type bool [line: 15]						   <
.   .   .   Child: 0 Op: [ of type bool [line: 15]						   <
.   .   .   .   Child: 0 Id: b of array of type bool [mem: Local loc: -27 size: 6] [line: 15]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 15]						   <
.   .   .   Child: 1 Const false of type bool [line: 15]					   <
.   .   Sibling: 7 Call: outputb of type void [line: 16]					   <
.   .   .   Child: 0 Op: [ of type bool [line: 16]						   <
.   .   .   .   Child: 0 Id: b of array of type bool [mem: Local loc: -27 size: 6] [line: 16]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 16]						   <
.   .   Sibling: 8 Call: outnl of type void [line: 17]						   <
.   .   Sibling: 9 Assign: = of type int [line: 19]						   <
.   .   .   Child: 0 Op: [ of type int [line: 19]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 19]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 19]						   <
.   .   .   Child: 1 Const 333 of type int [line: 19]						   <
.   .   Sibling: 10 Call: output of type void [line: 20]					   <
.   .   .   Child: 0 Op: [ of type int [line: 20]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 20]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 20]						   <
.   .   Sibling: 11 Assign: = of type int [line: 21]						   <
.   .   .   Child: 0 Op: [ of type int [line: 21]						   <
.   .   .   .   Child: 0 Id: gy of array of type int [mem: Global loc: -9 size: 7] [line: 21]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 21]						   <
.   .   .   Child: 1 Const 444 of type int [line: 21]						   <
.   .   Sibling: 12 Call: output of type void [line: 22]					   <
.   .   .   Child: 0 Op: [ of type int [line: 22]						   <
.   .   .   .   Child: 0 Id: gy of array of type int [mem: Global loc: -9 size: 7] [line: 22]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 22]						   <
.   .   Sibling: 13 Assign: = of type bool [line: 23]						   <
.   .   .   Child: 0 Op: [ of type bool [line: 23]						   <
.   .   .   .   Child: 0 Id: ga of array of type bool [mem: Global loc: -16 size: 6] [line: 23]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 23]						   <
.   .   .   Child: 1 Const false of type bool [line: 23]					   <
.   .   Sibling: 14 Call: outputb of type void [line: 24]					   <
.   .   .   Child: 0 Op: [ of type bool [line: 24]						   <
.   .   .   .   Child: 0 Id: ga of array of type bool [mem: Global loc: -16 size: 6] [line: 24]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 24]						   <
.   .   Sibling: 15 Assign: = of type bool [line: 25]						   <
.   .   .   Child: 0 Op: [ of type bool [line: 25]						   <
.   .   .   .   Child: 0 Id: gb of array of type bool [mem: Global loc: -22 size: 5] [line: 25]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 25]						   <
.   .   .   Child: 1 Const true of type bool [line: 25]						   <
.   .   Sibling: 16 Call: outputb of type void [line: 26]					   <
.   .   .   Child: 0 Op: [ of type bool [line: 26]						   <
.   .   .   .   Child: 0 Id: gb of array of type bool [mem: Global loc: -22 size: 5] [line: 26]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 26]						   <
.   .   Sibling: 17 Call: outnl of type void [line: 27]						   <
.   .   Sibling: 18 Assign: = of type int [line: 29]						   <
.   .   .   Child: 0 Op: [ of type int [line: 29]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 29]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 29]						   <
.   .   .   Child: 1 Op: [ of type int [line: 29]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -12 size: 8] [line: 29]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 29]						   <
.   .   Sibling: 19 Call: output of type void [line: 30]					   <
.   .   .   Child: 0 Op: [ of type int [line: 30]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 30]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 30]						   <
.   .   Sibling: 20 Assign: = of type bool [line: 31]						   <
.   .   .   Child: 0 Op: [ of type bool [line: 31]						   <
.   .   .   .   Child: 0 Id: a of array of type bool [mem: Local loc: -20 size: 7] [line: 31]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 31]						   <
.   .   .   Child: 1 Op: [ of type bool [line: 31]						   <
.   .   .   .   Child: 0 Id: b of array of type bool [mem: Local loc: -27 size: 6] [line: 31]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 31]						   <
.   .   Sibling: 21 Call: outputb of type void [line: 32]					   <
.   .   .   Child: 0 Op: [ of type bool [line: 32]						   <
.   .   .   .   Child: 0 Id: a of array of type bool [mem: Local loc: -20 size: 7] [line: 32]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 32]						   <
.   .   Sibling: 22 Call: outnl of type void [line: 33]						   <
.   .   Sibling: 23 Assign: = of type int [line: 35]						   <
.   .   .   Child: 0 Op: [ of type int [line: 35]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 35]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 35]						   <
.   .   .   Child: 1 Op: [ of type int [line: 35]						   <
.   .   .   .   Child: 0 Id: gy of array of type int [mem: Global loc: -9 size: 7] [line: 35]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 35]						   <
.   .   Sibling: 24 Call: output of type void [line: 36]					   <
.   .   .   Child: 0 Op: [ of type int [line: 36]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 36]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 36]						   <
.   .   Sibling: 25 Assign: = of type bool [line: 37]						   <
.   .   .   Child: 0 Op: [ of type bool [line: 37]						   <
.   .   .   .   Child: 0 Id: ga of array of type bool [mem: Global loc: -16 size: 6] [line: 37]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 37]						   <
.   .   .   Child: 1 Op: [ of type bool [line: 37]						   <
.   .   .   .   Child: 0 Id: gb of array of type bool [mem: Global loc: -22 size: 5] [line: 37]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 37]						   <
.   .   Sibling: 26 Call: outputb of type void [line: 38]					   <
.   .   .   Child: 0 Op: [ of type bool [line: 38]						   <
.   .   .   .   Child: 0 Id: ga of array of type bool [mem: Global loc: -16 size: 6] [line: 38]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 38]						   <
.   .   Sibling: 27 Call: outnl of type void [line: 39]						   <
.   .   Sibling: 28 Return [line: 41]								   <
Offset for end of global space: -26								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: assign3.c-
-rwxrwx--- 1 root vboxsf  628 Apr 30 16:20 assign3.c-
-rwxrwx--- 1 root vboxsf   74 May  2 10:26 assign3.expected
-rwxrwx--- 1 root vboxsf 8341 May  4  2021 assign3.mem
-rwxrwx--- 1 root vboxsf 8378 May  4  2021 assign3.out
assign3.out ztmp4778.txt differ: byte 1, line 1
assign3 (Output DIFF)
Var: gx of array of type int [mem: Global loc: -1 size: 8] [line: 1]				   |	Loading file: assign3.tm
Sibling: 1 Var: gy of array of type int [mem: Global loc: -9 size: 7] [line: 1]			   |	111 222
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 3]			   |	333 444
.   Child: 1 Compound [mem: None loc: 0 size: -19] [line: 4]					   |	333
.   .   Child: 0 Var: x of array of type int [mem: Local loc: -3 size: 9] [line: 5]		   |	777
.   .   Sibling: 1 Var: y of array of type int [mem: Local loc: -12 size: 8] [line: 5]		   |	222 0
.   .   Child: 1 Assign: += of type int [line: 7]						   |	444 0
.   .   .   Child: 0 Op: [ of type int [line: 7]						   |	222
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 7]	   |	444
.   .   .   .   Child: 1 Const 5 of type int [line: 7]						   |	Bye.
.   .   .   Child: 1 Const 111 of type int [line: 7]						   <
.   .   Sibling: 1 Call: output of type void [line: 8]						   <
.   .   .   Child: 0 Op: [ of type int [line: 8]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 8]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 8]						   <
.   .   Sibling: 2 Assign: += of type int [line: 9]						   <
.   .   .   Child: 0 Op: [ of type int [line: 9]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -12 size: 8] [line: 9]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 9]						   <
.   .   .   Child: 1 Const 222 of type int [line: 9]						   <
.   .   Sibling: 3 Call: output of type void [line: 10]						   <
.   .   .   Child: 0 Op: [ of type int [line: 10]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -12 size: 8] [line: 10]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 10]						   <
.   .   Sibling: 4 Call: outnl of type void [line: 11]						   <
.   .   Sibling: 5 Assign: += of type int [line: 13]						   <
.   .   .   Child: 0 Op: [ of type int [line: 13]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 13]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 13]						   <
.   .   .   Child: 1 Const 333 of type int [line: 13]						   <
.   .   Sibling: 6 Call: output of type void [line: 14]						   <
.   .   .   Child: 0 Op: [ of type int [line: 14]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 14]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 14]						   <
.   .   Sibling: 7 Assign: += of type int [line: 15]						   <
.   .   .   Child: 0 Op: [ of type int [line: 15]						   <
.   .   .   .   Child: 0 Id: gy of array of type int [mem: Global loc: -9 size: 7] [line: 15]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 15]						   <
.   .   .   Child: 1 Const 444 of type int [line: 15]						   <
.   .   Sibling: 8 Call: output of type void [line: 16]						   <
.   .   .   Child: 0 Op: [ of type int [line: 16]						   <
.   .   .   .   Child: 0 Id: gy of array of type int [mem: Global loc: -9 size: 7] [line: 16]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 16]						   <
.   .   Sibling: 9 Call: outnl of type void [line: 17]						   <
.   .   Sibling: 10 Assign: += of type int [line: 19]						   <
.   .   .   Child: 0 Op: [ of type int [line: 19]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 19]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 19]						   <
.   .   .   Child: 1 Op: [ of type int [line: 19]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -12 size: 8] [line: 19]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 19]						   <
.   .   Sibling: 11 Call: output of type void [line: 20]					   <
.   .   .   Child: 0 Op: [ of type int [line: 20]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 20]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 20]						   <
.   .   Sibling: 12 Call: outnl of type void [line: 21]						   <
.   .   Sibling: 13 Assign: += of type int [line: 23]						   <
.   .   .   Child: 0 Op: [ of type int [line: 23]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 23]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 23]						   <
.   .   .   Child: 1 Op: [ of type int [line: 23]						   <
.   .   .   .   Child: 0 Id: gy of array of type int [mem: Global loc: -9 size: 7] [line: 23]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 23]						   <
.   .   Sibling: 14 Call: output of type void [line: 24]					   <
.   .   .   Child: 0 Op: [ of type int [line: 24]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 24]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 24]						   <
.   .   Sibling: 15 Call: outnl of type void [line: 25]						   <
.   .   Sibling: 16 Assign: -= of type int [line: 27]						   <
.   .   .   Child: 0 Op: [ of type int [line: 27]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 27]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 27]						   <
.   .   .   Child: 1 Const 111 of type int [line: 27]						   <
.   .   Sibling: 17 Call: output of type void [line: 28]					   <
.   .   .   Child: 0 Op: [ of type int [line: 28]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 28]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 28]						   <
.   .   Sibling: 18 Assign: -= of type int [line: 29]						   <
.   .   .   Child: 0 Op: [ of type int [line: 29]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -12 size: 8] [line: 29]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 29]						   <
.   .   .   Child: 1 Const 222 of type int [line: 29]						   <
.   .   Sibling: 19 Call: output of type void [line: 30]					   <
.   .   .   Child: 0 Op: [ of type int [line: 30]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -12 size: 8] [line: 30]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 30]						   <
.   .   Sibling: 20 Call: outnl of type void [line: 31]						   <
.   .   Sibling: 21 Assign: -= of type int [line: 33]						   <
.   .   .   Child: 0 Op: [ of type int [line: 33]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 33]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 33]						   <
.   .   .   Child: 1 Const 333 of type int [line: 33]						   <
.   .   Sibling: 22 Call: output of type void [line: 34]					   <
.   .   .   Child: 0 Op: [ of type int [line: 34]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 34]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 34]						   <
.   .   Sibling: 23 Assign: -= of type int [line: 35]						   <
.   .   .   Child: 0 Op: [ of type int [line: 35]						   <
.   .   .   .   Child: 0 Id: gy of array of type int [mem: Global loc: -9 size: 7] [line: 35]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 35]						   <
.   .   .   Child: 1 Const 444 of type int [line: 35]						   <
.   .   Sibling: 24 Call: output of type void [line: 36]					   <
.   .   .   Child: 0 Op: [ of type int [line: 36]						   <
.   .   .   .   Child: 0 Id: gy of array of type int [mem: Global loc: -9 size: 7] [line: 36]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 36]						   <
.   .   Sibling: 25 Call: outnl of type void [line: 37]						   <
.   .   Sibling: 26 Assign: -= of type int [line: 39]						   <
.   .   .   Child: 0 Op: [ of type int [line: 39]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 39]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 39]						   <
.   .   .   Child: 1 Op: [ of type int [line: 39]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -12 size: 8] [line: 39]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 39]						   <
.   .   Sibling: 27 Call: output of type void [line: 40]					   <
.   .   .   Child: 0 Op: [ of type int [line: 40]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 9] [line: 40]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 40]						   <
.   .   Sibling: 28 Call: outnl of type void [line: 41]						   <
.   .   Sibling: 29 Assign: -= of type int [line: 43]						   <
.   .   .   Child: 0 Op: [ of type int [line: 43]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 43]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 43]						   <
.   .   .   Child: 1 Op: [ of type int [line: 43]						   <
.   .   .   .   Child: 0 Id: gy of array of type int [mem: Global loc: -9 size: 7] [line: 43]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 43]						   <
.   .   Sibling: 30 Call: output of type void [line: 44]					   <
.   .   .   Child: 0 Op: [ of type int [line: 44]						   <
.   .   .   .   Child: 0 Id: gx of array of type int [mem: Global loc: -1 size: 8] [line: 44]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 44]						   <
.   .   Sibling: 31 Call: outnl of type void [line: 45]						   <
.   .   Sibling: 32 Return [line: 47]								   <
Offset for end of global space: -15								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: assign4.c-
-rwxrwx--- 1 root vboxsf  532 Apr 30 16:20 assign4.c-
-rwxrwx--- 1 root vboxsf   74 May  2 10:26 assign4.expected
-rwxrwx--- 1 root vboxsf 4961 May  4  2021 assign4.mem
-rwxrwx--- 1 root vboxsf 4998 May  4  2021 assign4.out
assign4.out ztmp4778.txt differ: byte 1, line 1
assign4 (Output DIFF)
Var: gx of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: assign4.tm
Sibling: 1 Var: gy of type int [mem: Global loc: -1 size: 1] [line: 1]				   |	111 222
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 3]			   |	333 444
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 4]					   |	333
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 5]			   |	777
.   .   Sibling: 1 Var: y of type int [mem: Local loc: -3 size: 1] [line: 5]			   |	222 0
.   .   Child: 1 Assign: += of type int [line: 7]						   |	444 0
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]			   |	222
.   .   .   Child: 1 Const 111 of type int [line: 7]						   |	444
.   .   Sibling: 1 Call: output of type void [line: 8]						   |	Bye.
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 8]			   <
.   .   Sibling: 2 Assign: += of type int [line: 9]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 9]			   <
.   .   .   Child: 1 Const 222 of type int [line: 9]						   <
.   .   Sibling: 3 Call: output of type void [line: 10]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 10]			   <
.   .   Sibling: 4 Call: outnl of type void [line: 11]						   <
.   .   Sibling: 5 Assign: += of type int [line: 13]						   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 13]			   <
.   .   .   Child: 1 Const 333 of type int [line: 13]						   <
.   .   Sibling: 6 Call: output of type void [line: 14]						   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 14]			   <
.   .   Sibling: 7 Assign: += of type int [line: 15]						   <
.   .   .   Child: 0 Id: gy of type int [mem: Global loc: -1 size: 1] [line: 15]		   <
.   .   .   Child: 1 Const 444 of type int [line: 15]						   <
.   .   Sibling: 8 Call: output of type void [line: 16]						   <
.   .   .   Child: 0 Id: gy of type int [mem: Global loc: -1 size: 1] [line: 16]		   <
.   .   Sibling: 9 Call: outnl of type void [line: 17]						   <
.   .   Sibling: 10 Assign: += of type int [line: 19]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 19]			   <
.   .   .   Child: 1 Id: y of type int [mem: Local loc: -3 size: 1] [line: 19]			   <
.   .   Sibling: 11 Call: output of type void [line: 20]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 20]			   <
.   .   Sibling: 12 Call: outnl of type void [line: 21]						   <
.   .   Sibling: 13 Assign: += of type int [line: 23]						   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 23]			   <
.   .   .   Child: 1 Id: gy of type int [mem: Global loc: -1 size: 1] [line: 23]		   <
.   .   Sibling: 14 Call: output of type void [line: 24]					   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 24]			   <
.   .   Sibling: 15 Call: outnl of type void [line: 25]						   <
.   .   Sibling: 16 Assign: -= of type int [line: 27]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 27]			   <
.   .   .   Child: 1 Const 111 of type int [line: 27]						   <
.   .   Sibling: 17 Call: output of type void [line: 28]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 28]			   <
.   .   Sibling: 18 Assign: -= of type int [line: 29]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 29]			   <
.   .   .   Child: 1 Const 222 of type int [line: 29]						   <
.   .   Sibling: 19 Call: output of type void [line: 30]					   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 30]			   <
.   .   Sibling: 20 Call: outnl of type void [line: 31]						   <
.   .   Sibling: 21 Assign: -= of type int [line: 33]						   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 33]			   <
.   .   .   Child: 1 Const 333 of type int [line: 33]						   <
.   .   Sibling: 22 Call: output of type void [line: 34]					   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 34]			   <
.   .   Sibling: 23 Assign: -= of type int [line: 35]						   <
.   .   .   Child: 0 Id: gy of type int [mem: Global loc: -1 size: 1] [line: 35]		   <
.   .   .   Child: 1 Const 444 of type int [line: 35]						   <
.   .   Sibling: 24 Call: output of type void [line: 36]					   <
.   .   .   Child: 0 Id: gy of type int [mem: Global loc: -1 size: 1] [line: 36]		   <
.   .   Sibling: 25 Call: outnl of type void [line: 37]						   <
.   .   Sibling: 26 Assign: -= of type int [line: 39]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 39]			   <
.   .   .   Child: 1 Id: y of type int [mem: Local loc: -3 size: 1] [line: 39]			   <
.   .   Sibling: 27 Call: output of type void [line: 40]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 40]			   <
.   .   Sibling: 28 Call: outnl of type void [line: 41]						   <
.   .   Sibling: 29 Assign: -= of type int [line: 43]						   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 43]			   <
.   .   .   Child: 1 Id: gy of type int [mem: Global loc: -1 size: 1] [line: 43]		   <
.   .   Sibling: 30 Call: output of type void [line: 44]					   <
.   .   .   Child: 0 Id: gx of type int [mem: Global loc: 0 size: 1] [line: 44]			   <
.   .   Sibling: 31 Call: outnl of type void [line: 45]						   <
.   .   Sibling: 32 Return [line: 47]								   <
Offset for end of global space: -2								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: assign5.c-
-rwxrwx--- 1 root vboxsf  578 Apr 30 16:20 assign5.c-
-rwxrwx--- 1 root vboxsf  126 May  2 10:26 assign5.expected
-rwxrwx--- 1 root vboxsf 7533 May  4  2021 assign5.mem
-rwxrwx--- 1 root vboxsf 7570 May  4  2021 assign5.out
assign5.out ztmp4778.txt differ: byte 1, line 1
assign5 (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: assign5.tm
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 2]					   |	666 666 666
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 3]			   |	1332 666 666
.   .   Sibling: 1 Var: y of type int [mem: Local loc: -3 size: 1] [line: 3]			   |	1332 1332 666
.   .   Sibling: 2 Var: z of type int [mem: Local loc: -4 size: 1] [line: 3]			   |	3330 1998 666
.   .   Child: 1 Assign: = of type int [line: 4]						   |	666 666 666
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 4]			   |	0 666 666
.   .   .   Child: 1 Const 333 of type int [line: 4]						   |	0 0 666
.   .   Sibling: 1 Assign: = of type int [line: 5]						   |	666 -666 666
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 5]			   |	Bye.
.   .   .   Child: 1 Const 444 of type int [line: 5]						   <
.   .   Sibling: 2 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 6]			   <
.   .   .   Child: 1 Const 666 of type int [line: 6]						   <
.   .   Sibling: 3 Assign: = of type int [line: 8]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 8]			   <
.   .   .   Child: 1 Assign: = of type int [line: 8]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 8]		   <
.   .   .   .   Child: 1 Id: z of type int [mem: Local loc: -4 size: 1] [line: 8]		   <
.   .   Sibling: 4 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 9]			   <
.   .   Sibling: 5 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 9]			   <
.   .   Sibling: 6 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 9]			   <
.   .   Sibling: 7 Call: outnl of type void [line: 9]						   <
.   .   Sibling: 8 Assign: += of type int [line: 10]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 10]			   <
.   .   .   Child: 1 Assign: = of type int [line: 10]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 10]		   <
.   .   .   .   Child: 1 Id: z of type int [mem: Local loc: -4 size: 1] [line: 10]		   <
.   .   Sibling: 9 Call: output of type void [line: 11]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 11]			   <
.   .   Sibling: 10 Call: output of type void [line: 11]					   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 11]			   <
.   .   Sibling: 11 Call: output of type void [line: 11]					   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 11]			   <
.   .   Sibling: 12 Call: outnl of type void [line: 11]						   <
.   .   Sibling: 13 Assign: = of type int [line: 12]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 12]			   <
.   .   .   Child: 1 Assign: += of type int [line: 12]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 12]		   <
.   .   .   .   Child: 1 Id: z of type int [mem: Local loc: -4 size: 1] [line: 12]		   <
.   .   Sibling: 14 Call: output of type void [line: 13]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 13]			   <
.   .   Sibling: 15 Call: output of type void [line: 13]					   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 13]			   <
.   .   Sibling: 16 Call: output of type void [line: 13]					   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 13]			   <
.   .   Sibling: 17 Call: outnl of type void [line: 13]						   <
.   .   Sibling: 18 Assign: += of type int [line: 14]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 14]			   <
.   .   .   Child: 1 Assign: += of type int [line: 14]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 14]		   <
.   .   .   .   Child: 1 Id: z of type int [mem: Local loc: -4 size: 1] [line: 14]		   <
.   .   Sibling: 19 Call: output of type void [line: 15]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 15]			   <
.   .   Sibling: 20 Call: output of type void [line: 15]					   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 15]			   <
.   .   Sibling: 21 Call: output of type void [line: 15]					   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 15]			   <
.   .   Sibling: 22 Call: outnl of type void [line: 15]						   <
.   .   Sibling: 23 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 17]			   <
.   .   .   Child: 1 Assign: = of type int [line: 17]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 17]		   <
.   .   .   .   Child: 1 Id: z of type int [mem: Local loc: -4 size: 1] [line: 17]		   <
.   .   Sibling: 24 Call: output of type void [line: 18]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]			   <
.   .   Sibling: 25 Call: output of type void [line: 18]					   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 18]			   <
.   .   Sibling: 26 Call: output of type void [line: 18]					   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 18]			   <
.   .   Sibling: 27 Call: outnl of type void [line: 18]						   <
.   .   Sibling: 28 Assign: -= of type int [line: 19]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 19]			   <
.   .   .   Child: 1 Assign: = of type int [line: 19]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 19]		   <
.   .   .   .   Child: 1 Id: z of type int [mem: Local loc: -4 size: 1] [line: 19]		   <
.   .   Sibling: 29 Call: output of type void [line: 20]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 20]			   <
.   .   Sibling: 30 Call: output of type void [line: 20]					   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 20]			   <
.   .   Sibling: 31 Call: output of type void [line: 20]					   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 20]			   <
.   .   Sibling: 32 Call: outnl of type void [line: 20]						   <
.   .   Sibling: 33 Assign: = of type int [line: 21]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 21]			   <
.   .   .   Child: 1 Assign: -= of type int [line: 21]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 21]		   <
.   .   .   .   Child: 1 Id: z of type int [mem: Local loc: -4 size: 1] [line: 21]		   <
.   .   Sibling: 34 Call: output of type void [line: 22]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 22]			   <
.   .   Sibling: 35 Call: output of type void [line: 22]					   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 22]			   <
.   .   Sibling: 36 Call: output of type void [line: 22]					   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 22]			   <
.   .   Sibling: 37 Call: outnl of type void [line: 22]						   <
.   .   Sibling: 38 Assign: -= of type int [line: 23]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 23]			   <
.   .   .   Child: 1 Assign: -= of type int [line: 23]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 23]		   <
.   .   .   .   Child: 1 Id: z of type int [mem: Local loc: -4 size: 1] [line: 23]		   <
.   .   Sibling: 39 Call: output of type void [line: 24]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 24]			   <
.   .   Sibling: 40 Call: output of type void [line: 24]					   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 24]			   <
.   .   Sibling: 41 Call: output of type void [line: 24]					   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 24]			   <
.   .   Sibling: 42 Call: outnl of type void [line: 24]						   <
.   .   Sibling: 43 Return [line: 26]								   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: assign6.c-
-rwxrwx--- 1 root vboxsf  1609 Apr 30 16:20 assign6.c-
-rwxrwx--- 1 root vboxsf   162 May  2 10:26 assign6.expected
-rwxrwx--- 1 root vboxsf 18863 May  4  2021 assign6.mem
-rwxrwx--- 1 root vboxsf 18900 May  4  2021 assign6.out
assign6.out ztmp4778.txt differ: byte 1, line 1
assign6 (Output DIFF)
Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: assign6.tm
Sibling: 1 Var: h of array of type int [mem: Global loc: -2 size: 11] [line: 2]			   |	777 1443 777
Sibling: 2 Func: dog returns type void [mem: Global loc: 0 size: -4] [line: 3]			   |	777 1443 777
.   Child: 0 Parm: p of type int [mem: Parameter loc: -2 size: 1] [line: 3]			   |	777 1443 777
.   Sibling: 1 Parm: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 3]		   |	777 1443 777
.   Child: 1 Compound [mem: None loc: 0 size: -17] [line: 4]					   |	777 1443 777
.   .   Child: 0 Var: a of type int [mem: Local loc: -4 size: 1] [line: 5]			   |	777 1443 777
.   .   Sibling: 1 Var: b of array of type int [mem: Local loc: -6 size: 11] [line: 5]		   |	777 1443 777
.   .   Sibling: 2 Var: x of type int [mem: Local loc: -16 size: 1] [line: 6]			   |	777 1443 777
.   .   Child: 1 Assign: = of type int [line: 8]						   |	777 1443 777
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 8]			   |	604506
.   .   .   Child: 1 Const 777 of type int [line: 8]						   |	888 777
.   .   Sibling: 1 Call: output of type void [line: 9]						   |	Bye.
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 9]			   <
.   .   Sibling: 2 Assign: += of type int [line: 10]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 10]			   <
.   .   .   Child: 1 Const 666 of type int [line: 10]						   <
.   .   Sibling: 3 Call: output of type void [line: 11]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 11]			   <
.   .   Sibling: 4 Assign: -= of type int [line: 12]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 12]			   <
.   .   .   Child: 1 Const 666 of type int [line: 12]						   <
.   .   Sibling: 5 Call: output of type void [line: 13]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 13]			   <
.   .   Sibling: 6 Call: outnl of type void [line: 14]						   <
.   .   Sibling: 7 Assign: = of type int [line: 16]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 16]			   <
.   .   .   Child: 1 Const 777 of type int [line: 16]						   <
.   .   Sibling: 8 Call: output of type void [line: 17]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 17]			   <
.   .   Sibling: 9 Assign: += of type int [line: 18]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 18]			   <
.   .   .   Child: 1 Const 666 of type int [line: 18]						   <
.   .   Sibling: 10 Call: output of type void [line: 19]					   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 19]			   <
.   .   Sibling: 11 Assign: -= of type int [line: 20]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 20]			   <
.   .   .   Child: 1 Const 666 of type int [line: 20]						   <
.   .   Sibling: 12 Call: output of type void [line: 21]					   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 21]			   <
.   .   Sibling: 13 Call: outnl of type void [line: 22]						   <
.   .   Sibling: 14 Assign: = of type int [line: 24]						   <
.   .   .   Child: 0 Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 24]		   <
.   .   .   Child: 1 Const 777 of type int [line: 24]						   <
.   .   Sibling: 15 Call: output of type void [line: 25]					   <
.   .   .   Child: 0 Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 25]		   <
.   .   Sibling: 16 Assign: += of type int [line: 26]						   <
.   .   .   Child: 0 Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 26]		   <
.   .   .   Child: 1 Const 666 of type int [line: 26]						   <
.   .   Sibling: 17 Call: output of type void [line: 27]					   <
.   .   .   Child: 0 Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 27]		   <
.   .   Sibling: 18 Assign: -= of type int [line: 28]						   <
.   .   .   Child: 0 Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 28]		   <
.   .   .   Child: 1 Const 666 of type int [line: 28]						   <
.   .   Sibling: 19 Call: output of type void [line: 29]					   <
.   .   .   Child: 0 Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 29]		   <
.   .   Sibling: 20 Call: outnl of type void [line: 30]						   <
.   .   Sibling: 21 Assign: = of type int [line: 32]						   <
.   .   .   Child: 0 Op: [ of type int [line: 32]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 32]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 32]						   <
.   .   .   Child: 1 Const 777 of type int [line: 32]						   <
.   .   Sibling: 22 Call: output of type void [line: 33]					   <
.   .   .   Child: 0 Op: [ of type int [line: 33]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 33]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 33]						   <
.   .   Sibling: 23 Assign: += of type int [line: 34]						   <
.   .   .   Child: 0 Op: [ of type int [line: 34]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 34]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 34]						   <
.   .   .   Child: 1 Const 666 of type int [line: 34]						   <
.   .   Sibling: 24 Call: output of type void [line: 35]					   <
.   .   .   Child: 0 Op: [ of type int [line: 35]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 35]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 35]						   <
.   .   Sibling: 25 Assign: -= of type int [line: 36]						   <
.   .   .   Child: 0 Op: [ of type int [line: 36]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 36]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 36]						   <
.   .   .   Child: 1 Const 666 of type int [line: 36]						   <
.   .   Sibling: 26 Call: output of type void [line: 37]					   <
.   .   .   Child: 0 Op: [ of type int [line: 37]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 37]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 37]						   <
.   .   Sibling: 27 Call: outnl of type void [line: 38]						   <
.   .   Sibling: 28 Assign: = of type int [line: 40]						   <
.   .   .   Child: 0 Op: [ of type int [line: 40]						   <
.   .   .   .   Child: 0 Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 40]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 40]						   <
.   .   .   Child: 1 Const 777 of type int [line: 40]						   <
.   .   Sibling: 29 Call: output of type void [line: 41]					   <
.   .   .   Child: 0 Op: [ of type int [line: 41]						   <
.   .   .   .   Child: 0 Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 41]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 41]						   <
.   .   Sibling: 30 Assign: += of type int [line: 42]						   <
.   .   .   Child: 0 Op: [ of type int [line: 42]						   <
.   .   .   .   Child: 0 Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 42]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 42]						   <
.   .   .   Child: 1 Const 666 of type int [line: 42]						   <
.   .   Sibling: 31 Call: output of type void [line: 43]					   <
.   .   .   Child: 0 Op: [ of type int [line: 43]						   <
.   .   .   .   Child: 0 Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 43]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 43]						   <
.   .   Sibling: 32 Assign: -= of type int [line: 44]						   <
.   .   .   Child: 0 Op: [ of type int [line: 44]						   <
.   .   .   .   Child: 0 Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 44]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 44]						   <
.   .   .   Child: 1 Const 666 of type int [line: 44]						   <
.   .   Sibling: 33 Call: output of type void [line: 45]					   <
.   .   .   Child: 0 Op: [ of type int [line: 45]						   <
.   .   .   .   Child: 0 Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 45]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 45]						   <
.   .   Sibling: 34 Call: outnl of type void [line: 46]						   <
.   .   Sibling: 35 Assign: = of type int [line: 48]						   <
.   .   .   Child: 0 Op: [ of type int [line: 48]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 48]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 48]						   <
.   .   .   Child: 1 Const 777 of type int [line: 48]						   <
.   .   Sibling: 36 Call: output of type void [line: 49]					   <
.   .   .   Child: 0 Op: [ of type int [line: 49]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 49]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 49]						   <
.   .   Sibling: 37 Assign: += of type int [line: 50]						   <
.   .   .   Child: 0 Op: [ of type int [line: 50]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 50]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 50]						   <
.   .   .   Child: 1 Const 666 of type int [line: 50]						   <
.   .   Sibling: 38 Call: output of type void [line: 51]					   <
.   .   .   Child: 0 Op: [ of type int [line: 51]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 51]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 51]						   <
.   .   Sibling: 39 Assign: -= of type int [line: 52]						   <
.   .   .   Child: 0 Op: [ of type int [line: 52]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 52]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 52]						   <
.   .   .   Child: 1 Const 666 of type int [line: 52]						   <
.   .   Sibling: 40 Call: output of type void [line: 53]					   <
.   .   .   Child: 0 Op: [ of type int [line: 53]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 53]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 53]						   <
.   .   Sibling: 41 Call: outnl of type void [line: 54]						   <
.   .   Sibling: 42 Assign: = of type int [line: 56]						   <
.   .   .   Child: 0 Op: [ of type int [line: 56]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 56]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 56]						   <
.   .   .   Child: 1 Const 3 of type int [line: 56]						   <
.   .   Sibling: 43 Assign: = of type int [line: 57]						   <
.   .   .   Child: 0 Op: [ of type int [line: 57]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 57]	   <
.   .   .   .   Child: 1 Op: + of type int [line: 57]						   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 57]					   <
.   .   .   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 57]					   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 57]					   <
.   .   .   Child: 1 Const 777 of type int [line: 57]						   <
.   .   Sibling: 44 Call: output of type void [line: 58]					   <
.   .   .   Child: 0 Op: [ of type int [line: 58]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 58]	   <
.   .   .   .   Child: 1 Op: + of type int [line: 58]						   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 58]					   <
.   .   .   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 58]					   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 58]					   <
.   .   Sibling: 45 Assign: += of type int [line: 59]						   <
.   .   .   Child: 0 Op: [ of type int [line: 59]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 59]	   <
.   .   .   .   Child: 1 Op: + of type int [line: 59]						   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 59]					   <
.   .   .   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 59]					   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 59]					   <
.   .   .   Child: 1 Const 666 of type int [line: 59]						   <
.   .   Sibling: 46 Call: output of type void [line: 60]					   <
.   .   .   Child: 0 Op: [ of type int [line: 60]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 60]	   <
.   .   .   .   Child: 1 Op: + of type int [line: 60]						   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 60]					   <
.   .   .   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 60]					   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 60]					   <
.   .   Sibling: 47 Assign: -= of type int [line: 61]						   <
.   .   .   Child: 0 Op: [ of type int [line: 61]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 61]	   <
.   .   .   .   Child: 1 Op: + of type int [line: 61]						   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 61]					   <
.   .   .   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 61]					   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 61]					   <
.   .   .   Child: 1 Const 666 of type int [line: 61]						   <
.   .   Sibling: 48 Call: output of type void [line: 62]					   <
.   .   .   Child: 0 Op: [ of type int [line: 62]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 62]	   <
.   .   .   .   Child: 1 Op: + of type int [line: 62]						   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 62]					   <
.   .   .   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 62]					   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 62]					   <
.   .   Sibling: 49 Call: outnl of type void [line: 63]						   <
.   .   Sibling: 50 Assign: = of type int [line: 65]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -16 size: 1] [line: 65]			   <
.   .   .   Child: 1 Assign: = of type int [line: 65]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 65]		   <
.   .   .   .   Child: 1 Const 777 of type int [line: 65]					   <
.   .   Sibling: 51 Call: output of type void [line: 66]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -16 size: 1] [line: 66]			   <
.   .   Sibling: 52 Assign: = of type int [line: 67]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -16 size: 1] [line: 67]			   <
.   .   .   Child: 1 Assign: += of type int [line: 67]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 67]		   <
.   .   .   .   Child: 1 Const 666 of type int [line: 67]					   <
.   .   Sibling: 53 Call: output of type void [line: 68]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -16 size: 1] [line: 68]			   <
.   .   Sibling: 54 Assign: = of type int [line: 69]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -16 size: 1] [line: 69]			   <
.   .   .   Child: 1 Assign: -= of type int [line: 69]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 69]		   <
.   .   .   .   Child: 1 Const 666 of type int [line: 69]					   <
.   .   Sibling: 55 Call: output of type void [line: 70]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -16 size: 1] [line: 70]			   <
.   .   Sibling: 56 Call: outnl of type void [line: 71]						   <
.   .   Sibling: 57 Assign: = of type int [line: 73]						   <
.   .   .   Child: 0 Op: [ of type int [line: 73]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 73]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 73]						   <
.   .   .   Child: 1 Assign: = of type int [line: 73]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 73]						   <
.   .   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 73]   <
.   .   .   .   .   Child: 1 Const 2 of type int [line: 73]					   <
.   .   .   .   Child: 1 Const 777 of type int [line: 73]					   <
.   .   Sibling: 58 Call: output of type void [line: 74]					   <
.   .   .   Child: 0 Op: [ of type int [line: 74]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 74]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 74]						   <
.   .   Sibling: 59 Assign: = of type int [line: 75]						   <
.   .   .   Child: 0 Op: [ of type int [line: 75]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 75]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 75]						   <
.   .   .   Child: 1 Assign: += of type int [line: 75]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 75]						   <
.   .   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 75]   <
.   .   .   .   .   Child: 1 Const 2 of type int [line: 75]					   <
.   .   .   .   Child: 1 Const 666 of type int [line: 75]					   <
.   .   Sibling: 60 Call: output of type void [line: 76]					   <
.   .   .   Child: 0 Op: [ of type int [line: 76]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 76]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 76]						   <
.   .   Sibling: 61 Assign: = of type int [line: 77]						   <
.   .   .   Child: 0 Op: [ of type int [line: 77]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 77]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 77]						   <
.   .   .   Child: 1 Assign: -= of type int [line: 77]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 77]						   <
.   .   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 77]   <
.   .   .   .   .   Child: 1 Const 2 of type int [line: 77]					   <
.   .   .   .   Child: 1 Const 666 of type int [line: 77]					   <
.   .   Sibling: 62 Call: output of type void [line: 78]					   <
.   .   .   Child: 0 Op: [ of type int [line: 78]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 78]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 78]						   <
.   .   Sibling: 63 Call: outnl of type void [line: 79]						   <
.   .   Sibling: 64 Assign: += of type int [line: 81]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 81]			   <
.   .   .   Child: 1 Op: * of type int [line: 81]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 81]		   <
.   .   .   .   Child: 1 Id: x of type int [mem: Local loc: -16 size: 1] [line: 81]		   <
.   .   Sibling: 65 Call: output of type void [line: 82]					   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -4 size: 1] [line: 82]			   <
.   .   Sibling: 66 Call: outnl of type void [line: 83]						   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 86]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -24] [line: 87]					   <
.   .   Child: 0 Var: pp of type int [mem: Local loc: -2 size: 1] [line: 88]			   <
.   .   Sibling: 1 Var: qq of array of type int [mem: Local loc: -4 size: 21] [line: 88]	   <
.   .   Child: 1 Assign: = of type int [line: 89]						   <
.   .   .   Child: 0 Id: pp of type int [mem: Local loc: -2 size: 1] [line: 89]			   <
.   .   .   Child: 1 Const 888 of type int [line: 89]						   <
.   .   Sibling: 1 Assign: = of type int [line: 90]						   <
.   .   .   Child: 0 Op: [ of type int [line: 90]						   <
.   .   .   .   Child: 0 Id: qq of array of type int [mem: Local loc: -4 size: 21] [line: 90]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 90]						   <
.   .   .   Child: 1 Const 999 of type int [line: 90]						   <
.   .   Sibling: 2 Call: dog of type void [line: 91]						   <
.   .   .   Child: 0 Id: pp of type int [mem: Local loc: -2 size: 1] [line: 91]			   <
.   .   .   Sibling: 1 Id: qq of array of type int [mem: Local loc: -4 size: 21] [line: 91]	   <
.   .   Sibling: 3 Call: output of type void [line: 92]						   <
.   .   .   Child: 0 Id: pp of type int [mem: Local loc: -2 size: 1] [line: 92]			   <
.   .   Sibling: 4 Call: output of type void [line: 93]						   <
.   .   .   Child: 0 Op: [ of type int [line: 93]						   <
.   .   .   .   Child: 0 Id: qq of array of type int [mem: Local loc: -4 size: 21] [line: 93]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 93]						   <
.   .   Sibling: 5 Call: outnl of type void [line: 94]						   <
Offset for end of global space: -12								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: break2.c-
-rwxrwx--- 1 root vboxsf  318 Apr 30 16:20 break2.c-
-rwxrwx--- 1 root vboxsf   53 May  2 10:26 break2.expected
-rwxrwx--- 1 root vboxsf 2815 May  4  2021 break2.mem
-rwxrwx--- 1 root vboxsf 2852 May  4  2021 break2.out
break2.out ztmp4778.txt differ: byte 1, line 1
break2 (Output DIFF)
Func: main returns type int [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: break2.tm
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 2]					   |	0 0
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 3]			   |	0 1
.   .   Child: 1 Assign: = of type int [line: 5]						   |	0 2
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 5]			   |	0 3
.   .   .   Child: 1 Const 0 of type int [line: 5]						   |	0 4
.   .   Sibling: 1 While [line: 6]								   |	0 5
.   .   .   Child: 0 Op: < of type bool [line: 6]						   |	Bye.
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 6]		   <
.   .   .   .   Child: 1 Const 10 of type int [line: 6]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 6]				   <
.   .   .   .   Child: 0 Var: j of type int [mem: Local loc: -3 size: 1] [line: 7]		   <
.   .   .   .   Child: 1 Assign: = of type int [line: 9]					   <
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 9]		   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 9]					   <
.   .   .   .   Sibling: 1 While [line: 10]							   <
.   .   .   .   .   Child: 0 Op: <= of type bool [line: 10]					   <
.   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 10]	   <
.   .   .   .   .   .   Child: 1 Const 5 of type int [line: 10]					   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 10]			   <
.   .   .   .   .   .   Child: 1 Call: output of type void [line: 11]				   <
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 11]	   <
.   .   .   .   .   .   Sibling: 1 Call: output of type void [line: 12]				   <
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 12]	   <
.   .   .   .   .   .   Sibling: 2 Call: outnl of type void [line: 13]				   <
.   .   .   .   .   .   Sibling: 3 If [line: 14]						   <
.   .   .   .   .   .   .   Child: 0 Op: > of type bool [line: 14]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 1   <
.   .   .   .   .   .   .   .   Child: 1 Const 4 of type int [line: 14]				   <
.   .   .   .   .   .   .   Child: 1 Break [line: 14]						   <
.   .   .   .   .   .   Sibling: 4 Assign: ++ of type int [line: 15]				   <
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 15]	   <
.   .   .   .   Sibling: 2 If [line: 17]							   <
.   .   .   .   .   Child: 0 Op: > of type bool [line: 17]					   <
.   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 17]	   <
.   .   .   .   .   .   Child: 1 Const 3 of type int [line: 17]					   <
.   .   .   .   .   Child: 1 Break [line: 17]							   <
.   .   .   .   Sibling: 3 Assign: ++ of type int [line: 18]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 18]		   <
.   .   Sibling: 2 Return [line: 21]								   <
.   .   .   Child: 0 Const 0 of type int [line: 21]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: call.c-
-rwxrwx--- 1 root vboxsf  1267 Apr 30 16:20 call.c-
-rwxrwx--- 1 root vboxsf   104 May  2 10:26 call.expected
-rwxrwx--- 1 root vboxsf 15675 May  4  2021 call.mem
-rwxrwx--- 1 root vboxsf 15712 May  4  2021 call.out
call.out ztmp4778.txt differ: byte 1, line 1
call (Output DIFF)
Func: showInt returns type void [mem: Global loc: 0 size: -3] [line: 1]				   |	Loading file: call.tm
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]			   |	111
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 2]					   |	0 1 2 3 4 5 6 333 8 9
.   .   Child: 1 Call: output of type void [line: 3]						   |	T
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 3]		   |	12321
.   .   Sibling: 1 Call: outnl of type void [line: 4]						   |	110889
Sibling: 1 Func: showIntArray returns type void [mem: Global loc: 0 size: -4] [line: 7]		   |	443556
.   Child: 0 Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 7]		   |	603729
.   Sibling: 1 Parm: size of type int [mem: Parameter loc: -3 size: 1] [line: 7]		   |	24975
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 8]					   |	333
.   .   Child: 0 Var: i of type int [mem: Local loc: -4 size: 1] [line: 9]			   |	6360
.   .   Child: 1 Assign: = of type int [line: 10]						   |	443556
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 10]			   |	Bye.
.   .   .   Child: 1 Const 0 of type int [line: 10]						   <
.   .   Sibling: 1 While [line: 11]								   <
.   .   .   Child: 0 Op: < of type bool [line: 11]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 11]		   <
.   .   .   .   Child: 1 Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 11]	   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 11]				   <
.   .   .   .   Child: 1 Call: output of type void [line: 12]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 12]					   <
.   .   .   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 12]	   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 13]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 13]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 13]					   <
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 13]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 13]					   <
.   .   Sibling: 2 Call: outnl of type void [line: 15]						   <
Sibling: 2 Func: showBool returns type void [mem: Global loc: 0 size: -3] [line: 18]		   <
.   Child: 0 Parm: x of type bool [mem: Parameter loc: -2 size: 1] [line: 18]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 19]					   <
.   .   Child: 1 Call: outputb of type void [line: 20]						   <
.   .   .   Child: 0 Id: x of type bool [mem: Parameter loc: -2 size: 1] [line: 20]		   <
.   .   Sibling: 1 Call: outnl of type void [line: 21]						   <
Sibling: 3 Func: truth returns type bool [mem: Global loc: 0 size: -2] [line: 24]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 25]					   <
.   .   Child: 1 Return [line: 26]								   <
.   .   .   Child: 0 Const true of type bool [line: 26]						   <
Sibling: 4 Func: magic returns type int [mem: Global loc: 0 size: -2] [line: 29]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 30]					   <
.   .   Child: 1 Return [line: 31]								   <
.   .   .   Child: 0 Const 666 of type int [line: 31]						   <
Sibling: 5 Func: sqr returns type int [mem: Global loc: 0 size: -3] [line: 34]			   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 34]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 35]					   <
.   .   Child: 1 Return [line: 36]								   <
.   .   .   Child: 0 Op: * of type int [line: 36]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 36]		   <
.   .   .   .   Child: 1 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 36]		   <
Sibling: 6 Func: add returns type int [mem: Global loc: 0 size: -4] [line: 39]			   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 39]			   <
.   Sibling: 1 Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 39]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 40]					   <
.   .   Child: 1 Return [line: 41]								   <
.   .   .   Child: 0 Op: + of type int [line: 41]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 41]		   <
.   .   .   .   Child: 1 Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 41]		   <
Sibling: 7 Func: mul returns type int [mem: Global loc: 0 size: -4] [line: 44]			   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 44]			   <
.   Sibling: 1 Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 44]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 45]					   <
.   .   Child: 1 Return [line: 46]								   <
.   .   .   Child: 0 Op: * of type int [line: 46]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 46]		   <
.   .   .   .   Child: 1 Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 46]		   <
Sibling: 8 Var: g of type int [mem: Global loc: 0 size: 1] [line: 49]				   <
Sibling: 9 Func: caller returns type void [mem: Global loc: 0 size: -4] [line: 51]		   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 51]			   <
.   Sibling: 1 Parm: y of array of type int [mem: Parameter loc: -3 size: 1] [line: 51]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 52]					   <
.   .   Child: 0 Var: z of type int [mem: Local loc: -4 size: 1] [line: 53]			   <
.   .   Sibling: 1 Var: a of type int [mem: Local loc: -5 size: 1] [line: 54]			   <
.   .   Child: 1 Assign: = of type int [line: 56]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 56]			   <
.   .   .   Child: 1 Const 666 of type int [line: 56]						   <
.   .   Sibling: 1 Assign: = of type int [line: 57]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 57]			   <
.   .   .   Child: 1 Const 777 of type int [line: 57]						   <
.   .   Sibling: 2 Assign: = of type int [line: 59]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 59]			   <
.   .   .   Child: 1 Call: sqr of type int [line: 59]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 59]		   <
.   .   Sibling: 3 Call: output of type void [line: 60]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 60]			   <
.   .   Sibling: 4 Call: outnl of type void [line: 61]						   <
.   .   Sibling: 5 Assign: = of type int [line: 63]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 63]			   <
.   .   .   Child: 1 Call: sqr of type int [line: 63]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 63]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Parameter loc: -3 size: 1] [line:    <
.   .   .   .   .   Child: 1 Const 7 of type int [line: 63]					   <
.   .   Sibling: 6 Call: output of type void [line: 64]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 64]			   <
.   .   Sibling: 7 Call: outnl of type void [line: 65]						   <
.   .   Sibling: 8 Assign: = of type int [line: 67]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 67]			   <
.   .   .   Child: 1 Call: sqr of type int [line: 67]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 67]		   <
.   .   Sibling: 9 Call: output of type void [line: 68]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 68]			   <
.   .   Sibling: 10 Call: outnl of type void [line: 69]						   <
.   .   Sibling: 11 Assign: = of type int [line: 71]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 71]			   <
.   .   .   Child: 1 Call: sqr of type int [line: 71]						   <
.   .   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 71]		   <
.   .   Sibling: 12 Call: output of type void [line: 72]					   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 72]			   <
.   .   Sibling: 13 Call: outnl of type void [line: 73]						   <
Sibling: 10 Func: swap returns type void [mem: Global loc: 0 size: -5] [line: 76]		   <
.   Child: 0 Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 76]		   <
.   Sibling: 1 Parm: z1 of type int [mem: Parameter loc: -3 size: 1] [line: 76]			   <
.   Sibling: 2 Parm: z2 of type int [mem: Parameter loc: -4 size: 1] [line: 76]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 77]					   <
.   .   Child: 0 Var: tmp of type int [mem: Local loc: -5 size: 1] [line: 78]			   <
.   .   Child: 1 Assign: = of type int [line: 79]						   <
.   .   .   Child: 0 Id: tmp of type int [mem: Local loc: -5 size: 1] [line: 79]		   <
.   .   .   Child: 1 Op: [ of type int [line: 79]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 79]	   <
.   .   .   .   Child: 1 Id: z1 of type int [mem: Parameter loc: -3 size: 1] [line: 79]		   <
.   .   Sibling: 1 Assign: = of type int [line: 80]						   <
.   .   .   Child: 0 Op: [ of type int [line: 80]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 80]	   <
.   .   .   .   Child: 1 Id: z1 of type int [mem: Parameter loc: -3 size: 1] [line: 80]		   <
.   .   .   Child: 1 Op: [ of type int [line: 80]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 80]	   <
.   .   .   .   Child: 1 Id: z2 of type int [mem: Parameter loc: -4 size: 1] [line: 80]		   <
.   .   Sibling: 2 Assign: = of type int [line: 81]						   <
.   .   .   Child: 0 Op: [ of type int [line: 81]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 81]	   <
.   .   .   .   Child: 1 Id: z2 of type int [mem: Parameter loc: -4 size: 1] [line: 81]		   <
.   .   .   Child: 1 Id: tmp of type int [mem: Local loc: -5 size: 1] [line: 81]		   <
Sibling: 11 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 84]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -26] [line: 85]					   <
.   .   Child: 0 Var: p of type int [mem: Local loc: -2 size: 1] [line: 86]			   <
.   .   Sibling: 1 Var: q of type int [mem: Local loc: -3 size: 1] [line: 86]			   <
.   .   Sibling: 2 Var: r of array of type int [mem: Local loc: -5 size: 11] [line: 86]		   <
.   .   Sibling: 3 Var: s of array of type int [mem: Local loc: -16 size: 11] [line: 86]	   <
.   .   Child: 1 Assign: = of type int [line: 88]						   <
.   .   .   Child: 0 Id: p of type int [mem: Local loc: -2 size: 1] [line: 88]			   <
.   .   .   Child: 1 Const 0 of type int [line: 88]						   <
.   .   Sibling: 1 While [line: 89]								   <
.   .   .   Child: 0 Op: < of type bool [line: 89]						   <
.   .   .   .   Child: 0 Id: p of type int [mem: Local loc: -2 size: 1] [line: 89]		   <
.   .   .   .   Child: 1 Const 10 of type int [line: 89]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -26] [line: 89]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 90]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 90]					   <
.   .   .   .   .   .   Child: 0 Id: r of array of type int [mem: Local loc: -5 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Id: p of type int [mem: Local loc: -2 size: 1] [line: 90]	   <
.   .   .   .   .   Child: 1 Id: p of type int [mem: Local loc: -2 size: 1] [line: 90]		   <
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 91]					   <
.   .   .   .   .   Child: 0 Id: p of type int [mem: Local loc: -2 size: 1] [line: 91]		   <
.   .   Sibling: 2 Assign: = of type int [line: 94]						   <
.   .   .   Child: 0 Id: p of type int [mem: Local loc: -2 size: 1] [line: 94]			   <
.   .   .   Child: 1 Const 111 of type int [line: 94]						   <
.   .   Sibling: 3 Assign: = of type int [line: 95]						   <
.   .   .   Child: 0 Id: q of type int [mem: Local loc: -3 size: 1] [line: 95]			   <
.   .   .   Child: 1 Const 222 of type int [line: 95]						   <
.   .   Sibling: 4 Assign: = of type int [line: 96]						   <
.   .   .   Child: 0 Op: [ of type int [line: 96]						   <
.   .   .   .   Child: 0 Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 96]	   <
.   .   .   .   Child: 1 Const 7 of type int [line: 96]						   <
.   .   .   Child: 1 Const 333 of type int [line: 96]						   <
.   .   Sibling: 5 Assign: = of type int [line: 97]						   <
.   .   .   Child: 0 Op: [ of type int [line: 97]						   <
.   .   .   .   Child: 0 Id: s of array of type int [mem: Local loc: -16 size: 11] [line: 97]	   <
.   .   .   .   Child: 1 Const 7 of type int [line: 97]						   <
.   .   .   Child: 1 Const 444 of type int [line: 97]						   <
.   .   Sibling: 6 Call: showInt of type void [line: 99]					   <
.   .   .   Child: 0 Id: p of type int [mem: Local loc: -2 size: 1] [line: 99]			   <
.   .   Sibling: 7 Call: showIntArray of type void [line: 101]					   <
.   .   .   Child: 0 Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 101]	   <
.   .   .   Sibling: 1 Const 10 of type int [line: 101]						   <
.   .   Sibling: 8 Call: showBool of type void [line: 103]					   <
.   .   .   Child: 0 Call: truth of type bool [line: 103]					   <
.   .   Sibling: 9 Call: caller of type void [line: 105]					   <
.   .   .   Child: 0 Id: p of type int [mem: Local loc: -2 size: 1] [line: 105]			   <
.   .   .   Sibling: 1 Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 105]	   <
.   .   Sibling: 10 Call: output of type void [line: 107]					   <
.   .   .   Child: 0 Call: add of type int [line: 107]						   <
.   .   .   .   Child: 0 Call: add of type int [line: 107]					   <
.   .   .   .   .   Child: 0 Id: p of type int [mem: Local loc: -2 size: 1] [line: 107]		   <
.   .   .   .   .   Sibling: 1 Id: q of type int [mem: Local loc: -3 size: 1] [line: 107]	   <
.   .   .   .   Sibling: 1 Call: mul of type int [line: 107]					   <
.   .   .   .   .   Child: 0 Id: p of type int [mem: Local loc: -2 size: 1] [line: 107]		   <
.   .   .   .   .   Sibling: 1 Id: q of type int [mem: Local loc: -3 size: 1] [line: 107]	   <
.   .   Sibling: 11 Call: outnl of type void [line: 108]					   <
.   .   Sibling: 12 Assign: = of type int [line: 109]						   <
.   .   .   Child: 0 Op: [ of type int [line: 109]						   <
.   .   .   .   Child: 0 Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 109]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 109]					   <
.   .   .   Child: 1 Const 555 of type int [line: 109]						   <
.   .   Sibling: 13 Call: swap of type void [line: 110]						   <
.   .   .   Child: 0 Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 110]	   <
.   .   .   Sibling: 1 Const 7 of type int [line: 110]						   <
.   .   .   Sibling: 2 Const 9 of type int [line: 110]						   <
.   .   Sibling: 14 Call: output of type void [line: 111]					   <
.   .   .   Child: 0 Op: [ of type int [line: 111]						   <
.   .   .   .   Child: 0 Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 111]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 111]					   <
.   .   Sibling: 15 Call: outnl of type void [line: 112]					   <
.   .   Sibling: 16 Call: output of type void [line: 113]					   <
.   .   .   Child: 0 Op: * of type int [line: 113]						   <
.   .   .   .   Child: 0 Const 2 of type int [line: 113]					   <
.   .   .   .   Child: 1 Call: add of type int [line: 113]					   <
.   .   .   .   .   Child: 0 Op: * of type int [line: 113]					   <
.   .   .   .   .   .   Child: 0 Call: add of type int [line: 113]				   <
.   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 113]				   <
.   .   .   .   .   .   .   .   Child: 0 Const 3 of type int [line: 113]			   <
.   .   .   .   .   .   .   .   Child: 1 Const 4 of type int [line: 113]			   <
.   .   .   .   .   .   .   Sibling: 1 Op: * of type int [line: 113]				   <
.   .   .   .   .   .   .   .   Child: 0 Const 5 of type int [line: 113]			   <
.   .   .   .   .   .   .   .   Child: 1 Const 6 of type int [line: 113]			   <
.   .   .   .   .   .   Child: 1 Const 7 of type int [line: 113]				   <
.   .   .   .   .   Sibling: 1 Op: * of type int [line: 113]					   <
.   .   .   .   .   .   Child: 0 Call: add of type int [line: 113]				   <
.   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 113]				   <
.   .   .   .   .   .   .   .   Child: 0 Const 9 of type int [line: 113]			   <
.   .   .   .   .   .   .   .   Child: 1 Const 10 of type int [line: 113]			   <
.   .   .   .   .   .   .   Sibling: 1 Op: * of type int [line: 113]				   <
.   .   .   .   .   .   .   .   Child: 0 Const 11 of type int [line: 113]			   <
.   .   .   .   .   .   .   .   Child: 1 Const 12 of type int [line: 113]			   <
.   .   .   .   .   .   Child: 1 Const 13 of type int [line: 113]				   <
.   .   Sibling: 17 Call: outnl of type void [line: 114]					   <
.   .   Sibling: 18 Call: output of type void [line: 115]					   <
.   .   .   Child: 0 Op: * of type int [line: 115]						   <
.   .   .   .   Child: 0 Call: magic of type int [line: 115]					   <
.   .   .   .   Child: 1 Call: magic of type int [line: 115]					   <
.   .   Sibling: 19 Call: outnl of type void [line: 116]					   <
Offset for end of global space: -1								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: call2.c-
-rwxrwx--- 1 root vboxsf  227 Apr 30 16:20 call2.c-
-rwxrwx--- 1 root vboxsf   32 May  2 10:26 call2.expected
-rwxrwx--- 1 root vboxsf 2895 May  4  2021 call2.mem
-rwxrwx--- 1 root vboxsf 2932 May  4  2021 call2.out
call2.out ztmp4778.txt differ: byte 1, line 1
call2 (Output DIFF)
Var: g of type bool [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: call2.tm
Sibling: 1 Var: h of array of type bool [mem: Global loc: -2 size: 11] [line: 1]		   |	343
Sibling: 2 Func: dog returns type int [mem: Global loc: 0 size: -4] [line: 3]			   |	Bye.
.   Child: 0 Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 3]			   <
.   Sibling: 1 Parm: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 3]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 4]					   <
.   .   Child: 1 Assign: = of type int [line: 5]						   <
.   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 5]		   <
.   .   .   Child: 1 Const 444 of type int [line: 5]						   <
.   .   Sibling: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Op: [ of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 6]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 6]						   <
.   .   .   Child: 1 Const 555 of type int [line: 6]						   <
.   .   Sibling: 2 Return [line: 8]								   <
.   .   .   Child: 0 Op: sizeof of type int [line: 8]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 8]	   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 11]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -14] [line: 12]					   <
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 13]			   <
.   .   Sibling: 1 Var: y of array of type int [mem: Local loc: -4 size: 11] [line: 13]		   <
.   .   Child: 1 Assign: = of type bool [line: 15]						   <
.   .   .   Child: 0 Id: g of type bool [mem: Global loc: 0 size: 1] [line: 15]			   <
.   .   .   Child: 1 Const true of type bool [line: 15]						   <
.   .   Sibling: 1 Assign: = of type bool [line: 16]						   <
.   .   .   Child: 0 Op: [ of type bool [line: 16]						   <
.   .   .   .   Child: 0 Id: h of array of type bool [mem: Global loc: -2 size: 11] [line: 16]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 16]						   <
.   .   .   Child: 1 Const false of type bool [line: 16]					   <
.   .   Sibling: 2 Assign: = of type int [line: 18]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]			   <
.   .   .   Child: 1 Const 111 of type int [line: 18]						   <
.   .   Sibling: 3 Assign: = of type int [line: 19]						   <
.   .   .   Child: 0 Op: [ of type int [line: 19]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -4 size: 11] [line: 19]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 19]						   <
.   .   .   Child: 1 Const 222 of type int [line: 19]						   <
.   .   Sibling: 4 Call: output of type void [line: 21]						   <
.   .   .   Child: 0 Op: + of type int [line: 21]						   <
.   .   .   .   Child: 0 Const 333 of type int [line: 21]					   <
.   .   .   .   Child: 1 Call: dog of type int [line: 21]					   <
.   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 21]		   <
.   .   .   .   .   Sibling: 1 Id: y of array of type int [mem: Local loc: -4 size: 11] [line: 2   <
Offset for end of global space: -12								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: call5.c-
-rwxrwx--- 1 root vboxsf   370 May  2 10:20 call5.c-
-rwxrwx--- 1 root vboxsf    60 May  2 10:26 call5.expected
-rwxrwx--- 1 root vboxsf  4264 May  4  2021 call5.mem
-rwxrwx--- 1 root vboxsf  4301 May  4  2021 call5.out
-rwxrwx--- 1 root vboxsf 11339 May  3 15:43 call5.tm-exp
call5.out ztmp4778.txt differ: byte 1, line 1
call5 (Output DIFF)
Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: call5.tm
Sibling: 1 Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 2]			   |	1279 111 222 666 1332 2221 2220
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]			   |	Bye.
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 2]					   <
.   .   Child: 1 Assign: = of type int [line: 3]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 3]			   <
.   .   .   Child: 1 Op: * of type int [line: 3]						   <
.   .   .   .   Child: 0 Const 2 of type int [line: 3]						   <
.   .   .   .   Child: 1 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 3]		   <
.   .   Sibling: 1 Return [line: 4]								   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 4]		   <
Sibling: 2 Func: cat returns type void [mem: Global loc: 0 size: -3] [line: 7]			   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 7]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 7]					   <
.   .   Child: 1 Assign: = of type int [line: 8]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 8]			   <
.   .   .   Child: 1 Op: * of type int [line: 8]						   <
.   .   .   .   Child: 0 Const 3 of type int [line: 8]						   <
.   .   .   .   Child: 1 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 8]		   <
.   .   Sibling: 1 Return [line: 9]								   <
Sibling: 3 Func: elk returns type void [mem: Global loc: 0 size: -3] [line: 12]			   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 12]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 12]					   <
.   .   Child: 1 Assign: = of type int [line: 13]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 13]			   <
.   .   .   Child: 1 Op: * of type int [line: 13]						   <
.   .   .   .   Child: 0 Const 4 of type int [line: 13]						   <
.   .   .   .   Child: 1 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 13]		   <
Sibling: 4 Func: fox returns type int [mem: Global loc: 0 size: -3] [line: 16]			   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 16]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 16]					   <
.   .   Child: 1 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 17]			   <
.   .   .   Child: 1 Op: * of type int [line: 17]						   <
.   .   .   .   Child: 0 Const 5 of type int [line: 17]						   <
.   .   .   .   Child: 1 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 17]		   <
.   .   Sibling: 1 Return [line: 18]								   <
.   .   .   Child: 0 Op: + of type int [line: 18]						   <
.   .   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 18]		   <
.   .   .   .   Child: 1 Const 1 of type int [line: 18]						   <
Sibling: 5 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 21]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 22]					   <
.   .   Child: 1 Assign: = of type int [line: 23]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 23]			   <
.   .   .   Child: 1 Const 1279 of type int [line: 23]						   <
.   .   Sibling: 1 Call: output of type void [line: 24]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 24]			   <
.   .   Sibling: 2 Call: output of type void [line: 25]						   <
.   .   .   Child: 0 Call: dog of type int [line: 25]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 25]					   <
.   .   Sibling: 3 Call: output of type void [line: 26]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 26]			   <
.   .   Sibling: 4 Call: cat of type void [line: 27]						   <
.   .   .   Child: 0 Const 222 of type int [line: 27]						   <
.   .   Sibling: 5 Call: output of type void [line: 28]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 28]			   <
.   .   Sibling: 6 Call: elk of type void [line: 29]						   <
.   .   .   Child: 0 Const 333 of type int [line: 29]						   <
.   .   Sibling: 7 Call: output of type void [line: 30]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 30]			   <
.   .   Sibling: 8 Call: output of type void [line: 31]						   <
.   .   .   Child: 0 Call: fox of type int [line: 31]						   <
.   .   .   .   Child: 0 Const 444 of type int [line: 31]					   <
.   .   Sibling: 9 Call: output of type void [line: 32]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 32]			   <
.   .   Sibling: 10 Call: outnl of type void [line: 33]						   <
Offset for end of global space: -1								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: charout.c-
-rwxrwx--- 1 root vboxsf  267 Apr 30 16:20 charout.c-
-rwxrwx--- 1 root vboxsf  829 May  2 10:26 charout.expected
-rwxrwx--- 1 root vboxsf   15 Dec  1  2014 charout.in
-rwxrwx--- 1 root vboxsf 2878 May  4  2021 charout.mem
-rwxrwx--- 1 root vboxsf 2915 May  4  2021 charout.out
charout.out ztmp4778.txt differ: byte 52, line 2
charout (Output DIFF)
WARNING(2): The variable 'c' seems not to be used.							WARNING(2): The variable 'c' seems not to be used.
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: charout.tm
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 1]					   |	XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
.   .   Child: 0 Var: c of type char [mem: Local loc: -2 size: 1] [line: 2]			   |	X X X X X X X X X X X X X X X
.   .   Sibling: 1 Var: i of type int [mem: Local loc: -3 size: 1] [line: 3]			   |	X  X  X  X  X  X  X  X  X  X
.   .   Sibling: 2 Var: k of type int [mem: Local loc: -4 size: 1] [line: 3]			   |	X   X   X   X   X   X   X   X
.   .   Sibling: 3 Var: max of type int [mem: Local loc: -5 size: 1] [line: 4]			   |	X    X    X    X    X    X
.   .   .   Child: 0 Const 30 of type int [line: 4]						   |	X     X     X     X     X
.   .   Child: 1 Assign: = of type int [line: 6]						   |	X      X      X      X      X
.   .   .   Child: 0 Id: k of type int [mem: Local loc: -4 size: 1] [line: 6]			   |	X       X       X       X
.   .   .   Child: 1 Const 1 of type int [line: 6]						   |	X        X        X        X
.   .   Sibling: 1 While [line: 7]								   |	X         X         X
.   .   .   Child: 0 Op: < of type bool [line: 7]						   |	X          X          X
.   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -4 size: 1] [line: 7]		   |	X           X           X
.   .   .   .   Child: 1 Id: max of type int [mem: Local loc: -5 size: 1] [line: 7]		   |	X            X            X
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 7]				   |	X             X             X
.   .   .   .   Child: 1 Assign: = of type int [line: 8]					   |	X              X
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 8]		   |	X               X
.   .   .   .   .   Child: 1 Const 0 of type int [line: 8]					   |	X                X
.   .   .   .   Sibling: 1 While [line: 9]							   |	X                 X
.   .   .   .   .   Child: 0 Op: < of type bool [line: 9]					   |	X                  X
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 9]	   |	X                   X
.   .   .   .   .   .   Child: 1 Id: max of type int [mem: Local loc: -5 size: 1] [line: 9]	   |	X                    X
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 9]			   |	X                     X
.   .   .   .   .   .   Child: 1 If [line: 10]							   |	X                      X
.   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 10]				   |	X                       X
.   .   .   .   .   .   .   .   Child: 0 Op: % of type int [line: 10]				   |	X                        X
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [lin   |	X                         X
.   .   .   .   .   .   .   .   .   Child: 1 Id: k of type int [mem: Local loc: -4 size: 1] [lin   |	X                          X
.   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 10]				   |	X                           X
.   .   .   .   .   .   .   Child: 1 Call: outputc of type void [line: 10]			   |	X                            X
.   .   .   .   .   .   .   .   Child: 0 Const 'X' of type char [line: 10]			   |	Bye.
.   .   .   .   .   .   .   Child: 2 Call: outputc of type void [line: 11]			   <
.   .   .   .   .   .   .   .   Child: 0 Const ' ' of type char [line: 11]			   <
.   .   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 12]				   <
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 12]	   <
.   .   .   .   Sibling: 2 Call: outputc of type void [line: 14]				   <
.   .   .   .   .   Child: 0 Const '								   <
' of type char [line: 14]									   <
.   .   .   .   Sibling: 3 Assign: ++ of type int [line: 15]					   <
.   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -4 size: 1] [line: 15]		   <
Offset for end of global space: 0								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: comb.c-
-rwxrwx--- 1 root vboxsf  503 Apr 30 16:20 comb.c-
-rwxrwx--- 1 root vboxsf  439 May  2 10:26 comb.expected
-rwxrwx--- 1 root vboxsf   17 Dec  1  2014 comb.in
-rwxrwx--- 1 root vboxsf 5938 May  4  2021 comb.mem
-rwxrwx--- 1 root vboxsf 5975 May  4  2021 comb.out
comb.out ztmp4778.txt differ: byte 54, line 2
comb (Output DIFF)
WARNING(20): The variable 'xx' seems not to be used.							WARNING(20): The variable 'xx' seems not to be used.
Func: comb returns type int [mem: Global loc: 0 size: -4] [line: 2]				   |	Loading file: comb.tm
.   Child: 0 Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 2]			   |	4 2 6
.   Sibling: 1 Parm: r of type int [mem: Parameter loc: -3 size: 1] [line: 2]			   |	5 2 10
.   Child: 1 Compound [mem: None loc: 0 size: -7] [line: 3]					   |	6 2 15
.   .   Child: 0 Var: i of type int [mem: Local loc: -4 size: 1] [line: 4]			   |	6 3 20
.   .   Sibling: 1 Var: j of type int [mem: Local loc: -5 size: 1] [line: 4]			   |	7 2 21
.   .   Sibling: 2 Var: c of type int [mem: Local loc: -6 size: 1] [line: 4]			   |	7 3 35
.   .   Child: 1 Assign: = of type int [line: 6]						   |	8 2 28
.   .   .   Child: 0 Id: c of type int [mem: Local loc: -6 size: 1] [line: 6]			   |	8 3 56
.   .   .   Child: 1 Op: + of type int [line: 6]						   |	8 4 70
.   .   .   .   Child: 0 Op: - of type int [line: 6]						   |	9 2 36
.   .   .   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 6]	   |	9 3 84
.   .   .   .   .   Child: 1 Id: r of type int [mem: Parameter loc: -3 size: 1] [line: 6]	   |	9 4 126
.   .   .   .   Child: 1 Const 1 of type int [line: 6]						   |	10 2 45
.   .   Sibling: 1 Assign: = of type int [line: 7]						   |	10 3 120
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 7]			   |	10 4 210
.   .   .   Child: 1 Op: + of type int [line: 7]						   |	10 5 252
.   .   .   .   Child: 0 Op: - of type int [line: 7]						   |	11 2 55
.   .   .   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 7]	   |	11 3 165
.   .   .   .   .   Child: 1 Id: r of type int [mem: Parameter loc: -3 size: 1] [line: 7]	   |	11 4 330
.   .   .   .   Child: 1 Const 2 of type int [line: 7]						   |	11 5 462
.   .   Sibling: 2 Assign: = of type int [line: 8]						   |	12 2 66
.   .   .   Child: 0 Id: j of type int [mem: Local loc: -5 size: 1] [line: 8]			   |	12 3 220
.   .   .   Child: 1 Const 2 of type int [line: 8]						   |	12 4 495
.   .   Sibling: 3 While [line: 9]								   |	12 5 792
.   .   .   Child: 0 Op: <= of type bool [line: 9]						   |	12 6 924
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 9]		   |	13 2 78
.   .   .   .   Child: 1 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 9]		   |	13 3 286
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -7] [line: 9]				   |	13 4 715
.   .   .   .   Child: 1 Assign: = of type int [line: 10]					   |	13 5 1287
.   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -6 size: 1] [line: 10]		   |	13 6 1716
.   .   .   .   .   Child: 1 Op: / of type int [line: 10]					   |	14 2 91
.   .   .   .   .   .   Child: 0 Op: * of type int [line: 10]					   |	14 3 364
.   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -6 size: 1] [line: 10]	   |	14 4 1001
.   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 10]	   |	14 5 2002
.   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -5 size: 1] [line: 10]	   |	14 6 3003
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 11]					   |	14 7 3432
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 11]		   |	15 2 105
.   .   .   .   Sibling: 2 Assign: ++ of type int [line: 12]					   |	15 3 455
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -5 size: 1] [line: 12]		   |	15 4 1365
.   .   Sibling: 4 Return [line: 14]								   |	15 5 3003
.   .   .   Child: 0 Id: c of type int [mem: Local loc: -6 size: 1] [line: 14]			   |	15 6 5005
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 17]		   |	15 7 6435
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 18]					   |	Bye.
.   .   Child: 0 Var: max of type int [mem: Local loc: -2 size: 1] [line: 19]			   <
.   .   Sibling: 1 Var: n of type int [mem: Local loc: -3 size: 1] [line: 19]			   <
.   .   Sibling: 2 Var: xx of type bool [mem: Local loc: -4 size: 1] [line: 20]			   <
.   .   Sibling: 3 Var: r of type int [mem: Local loc: -5 size: 1] [line: 21]			   <
.   .   Child: 1 Assign: = of type int [line: 23]						   <
.   .   .   Child: 0 Id: max of type int [mem: Local loc: -2 size: 1] [line: 23]		   <
.   .   .   Child: 1 Const 15 of type int [line: 23]						   <
.   .   Sibling: 1 Assign: = of type int [line: 25]						   <
.   .   .   Child: 0 Id: n of type int [mem: Local loc: -3 size: 1] [line: 25]			   <
.   .   .   Child: 1 Const 2 of type int [line: 25]						   <
.   .   Sibling: 2 While [line: 26]								   <
.   .   .   Child: 0 Op: <= of type bool [line: 26]						   <
.   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -3 size: 1] [line: 26]		   <
.   .   .   .   Child: 1 Id: max of type int [mem: Local loc: -2 size: 1] [line: 26]		   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 26]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 27]					   <
.   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -5 size: 1] [line: 27]		   <
.   .   .   .   .   Child: 1 Const 2 of type int [line: 27]					   <
.   .   .   .   Sibling: 1 While [line: 28]							   <
.   .   .   .   .   Child: 0 Op: <= of type bool [line: 28]					   <
.   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -5 size: 1] [line: 28]	   <
.   .   .   .   .   .   Child: 1 Op: / of type int [line: 28]					   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -3 size: 1] [line: 28]	   <
.   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 28]				   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 28]			   <
.   .   .   .   .   .   Child: 1 Call: output of type void [line: 29]				   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -3 size: 1] [line: 29]	   <
.   .   .   .   .   .   Sibling: 1 Call: output of type void [line: 30]				   <
.   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -5 size: 1] [line: 30]	   <
.   .   .   .   .   .   Sibling: 2 Call: output of type void [line: 31]				   <
.   .   .   .   .   .   .   Child: 0 Call: comb of type int [line: 31]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -3 size: 1] [line: 3   <
.   .   .   .   .   .   .   .   Sibling: 1 Id: r of type int [mem: Local loc: -5 size: 1] [line:   <
.   .   .   .   .   .   Sibling: 3 Call: outnl of type void [line: 32]				   <
.   .   .   .   .   .   Sibling: 4 Assign: ++ of type int [line: 33]				   <
.   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -5 size: 1] [line: 33]	   <
.   .   .   .   Sibling: 2 Assign: ++ of type int [line: 35]					   <
.   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -3 size: 1] [line: 35]		   <
Offset for end of global space: 0								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: combslow.c-
-rwxrwx--- 1 root vboxsf  632 Apr 30 16:26 combslow.c-
-rwxrwx--- 1 root vboxsf  361 May  2 10:26 combslow.expected
-rwxrwx--- 1 root vboxsf   24 Dec  1  2014 combslow.in
-rwxrwx--- 1 root vboxsf 5297 May  4  2021 combslow.mem
-rwxrwx--- 1 root vboxsf 5334 May  4  2021 combslow.out
combslow.out ztmp4778.txt differ: byte 1, line 1
combslow (Output DIFF)
Func: comb returns type int [mem: Global loc: 0 size: -4] [line: 6]				   |	Loading file: combslow.tm
.   Child: 0 Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 6]			   |	entered: 12
.   Sibling: 1 Parm: b of type int [mem: Parameter loc: -3 size: 1] [line: 6]			   |	1
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 7]					   |	1 1
.   .   Child: 1 If [line: 8]									   |	1 2 1
.   .   .   Child: 0 Op: == of type bool [line: 8]						   |	1 3 3 1
.   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 8]		   |	1 4 6 4 1
.   .   .   .   Child: 1 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 8]		   |	1 5 10 10 5 1
.   .   .   Child: 1 Return [line: 9]								   |	1 6 15 20 15 6 1
.   .   .   .   Child: 0 Const 1 of type int [line: 9]						   |	1 7 21 35 35 21 7 1
.   .   Sibling: 1 If [line: 10]								   |	1 8 28 56 70 56 28 8 1
.   .   .   Child: 0 Op: == of type bool [line: 10]						   |	1 9 36 84 126 126 84 36 9 1
.   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 10]		   |	1 10 45 120 210 252 210 120 45 10 1
.   .   .   .   Child: 1 Const 0 of type int [line: 10]						   |	1 11 55 165 330 462 462 330 165 55 11 1
.   .   .   Child: 1 Return [line: 11]								   |	1 12 66 220 495 792 924 792 495 220 66 12 1
.   .   .   .   Child: 0 Const 1 of type int [line: 11]						   |	entered: 5
.   .   Sibling: 2 If [line: 12]								   |	1
.   .   .   Child: 0 Op: == of type bool [line: 12]						   |	1 1
.   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 12]		   |	1 2 1
.   .   .   .   Child: 1 Const 1 of type int [line: 12]						   |	1 3 3 1
.   .   .   Child: 1 Return [line: 13]								   |	1 4 6 4 1
.   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 13]		   |	1 5 10 10 5 1
.   .   Sibling: 3 Return [line: 15]								   |	entered: 0
.   .   .   Child: 0 Op: + of type int [line: 15]						   |	Bye.
.   .   .   .   Child: 0 Call: comb of type int [line: 15]					   <
.   .   .   .   .   Child: 0 Op: - of type int [line: 15]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 15]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 15]					   <
.   .   .   .   .   Sibling: 1 Op: - of type int [line: 15]					   <
.   .   .   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 15]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 15]					   <
.   .   .   .   Child: 1 Call: comb of type int [line: 15]					   <
.   .   .   .   .   Child: 0 Op: - of type int [line: 15]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 15]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 15]					   <
.   .   .   .   .   Sibling: 1 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 15]	   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 18]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 19]					   <
.   .   Child: 0 Var: a of type int [mem: Local loc: -2 size: 1] [line: 20]			   <
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -3 size: 1] [line: 20]			   <
.   .   Sibling: 2 Var: n of type int [mem: Local loc: -4 size: 1] [line: 20]			   <
.   .   Child: 1 While [line: 22]								   <
.   .   .   Child: 0 Const true of type bool [line: 22]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 22]				   <
.   .   .   .   Child: 1 If [line: 23]								   <
.   .   .   .   .   Child: 0 Op: == of type bool [line: 23]					   <
.   .   .   .   .   .   Child: 0 Assign: = of type int [line: 23]				   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -4 size: 1] [line: 23]	   <
.   .   .   .   .   .   .   Child: 1 Call: input of type int [line: 23]				   <
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 23]					   <
.   .   .   .   .   Child: 1 Break [line: 23]							   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 24]					   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 24]		   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 24]					   <
.   .   .   .   Sibling: 2 While [line: 25]							   <
.   .   .   .   .   Child: 0 Op: <= of type bool [line: 25]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 25]	   <
.   .   .   .   .   .   Child: 1 Id: n of type int [mem: Local loc: -4 size: 1] [line: 25]	   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 25]			   <
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 26]				   <
.   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 26]	   <
.   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 26]				   <
.   .   .   .   .   .   Sibling: 1 While [line: 27]						   <
.   .   .   .   .   .   .   Child: 0 Op: <= of type bool [line: 27]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 2   <
.   .   .   .   .   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -2 size: 1] [line: 2   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 27]		   <
.   .   .   .   .   .   .   .   Child: 1 Call: output of type void [line: 28]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Call: comb of type int [line: 28]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1]    <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: Local loc: -3 size: 1   <
.   .   .   .   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 29]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   Sibling: 2 Call: outnl of type void [line: 31]				   <
.   .   .   .   .   .   Sibling: 3 Assign: ++ of type int [line: 32]				   <
.   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 32]	   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: compare.c-
-rwxrwx--- 1 root vboxsf  424 Apr 30 16:20 compare.c-
-rwxrwx--- 1 root vboxsf   66 May  2 10:26 compare.expected
-rwxrwx--- 1 root vboxsf 4159 May  4  2021 compare.mem
-rwxrwx--- 1 root vboxsf 4196 May  4  2021 compare.out
compare.out ztmp4778.txt differ: byte 1, line 1
compare (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: compare.tm
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 2]					   |	T F F F T F F F T T T F F T T T F T
.   .   Child: 1 Call: outputb of type void [line: 3]						   |	Bye.
.   .   .   Child: 0 Op: < of type bool [line: 3]						   <
.   .   .   .   Child: 0 Const 1 of type int [line: 3]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 3]						   <
.   .   Sibling: 1 Call: outputb of type void [line: 4]						   <
.   .   .   Child: 0 Op: < of type bool [line: 4]						   <
.   .   .   .   Child: 0 Const 2 of type int [line: 4]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 4]						   <
.   .   Sibling: 2 Call: outputb of type void [line: 5]						   <
.   .   .   Child: 0 Op: < of type bool [line: 5]						   <
.   .   .   .   Child: 0 Const 3 of type int [line: 5]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 5]						   <
.   .   Sibling: 3 Call: outputb of type void [line: 7]						   <
.   .   .   Child: 0 Op: == of type bool [line: 7]						   <
.   .   .   .   Child: 0 Const 1 of type int [line: 7]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 7]						   <
.   .   Sibling: 4 Call: outputb of type void [line: 8]						   <
.   .   .   Child: 0 Op: == of type bool [line: 8]						   <
.   .   .   .   Child: 0 Const 2 of type int [line: 8]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 8]						   <
.   .   Sibling: 5 Call: outputb of type void [line: 9]						   <
.   .   .   Child: 0 Op: == of type bool [line: 9]						   <
.   .   .   .   Child: 0 Const 3 of type int [line: 9]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 9]						   <
.   .   Sibling: 6 Call: outputb of type void [line: 11]					   <
.   .   .   Child: 0 Op: > of type bool [line: 11]						   <
.   .   .   .   Child: 0 Const 1 of type int [line: 11]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 11]						   <
.   .   Sibling: 7 Call: outputb of type void [line: 12]					   <
.   .   .   Child: 0 Op: > of type bool [line: 12]						   <
.   .   .   .   Child: 0 Const 2 of type int [line: 12]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 12]						   <
.   .   Sibling: 8 Call: outputb of type void [line: 13]					   <
.   .   .   Child: 0 Op: > of type bool [line: 13]						   <
.   .   .   .   Child: 0 Const 3 of type int [line: 13]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 13]						   <
.   .   Sibling: 9 Call: outputb of type void [line: 15]					   <
.   .   .   Child: 0 Op: <= of type bool [line: 15]						   <
.   .   .   .   Child: 0 Const 1 of type int [line: 15]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 15]						   <
.   .   Sibling: 10 Call: outputb of type void [line: 16]					   <
.   .   .   Child: 0 Op: <= of type bool [line: 16]						   <
.   .   .   .   Child: 0 Const 2 of type int [line: 16]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 16]						   <
.   .   Sibling: 11 Call: outputb of type void [line: 17]					   <
.   .   .   Child: 0 Op: <= of type bool [line: 17]						   <
.   .   .   .   Child: 0 Const 3 of type int [line: 17]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 17]						   <
.   .   Sibling: 12 Call: outputb of type void [line: 19]					   <
.   .   .   Child: 0 Op: >= of type bool [line: 19]						   <
.   .   .   .   Child: 0 Const 1 of type int [line: 19]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 19]						   <
.   .   Sibling: 13 Call: outputb of type void [line: 20]					   <
.   .   .   Child: 0 Op: >= of type bool [line: 20]						   <
.   .   .   .   Child: 0 Const 2 of type int [line: 20]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 20]						   <
.   .   Sibling: 14 Call: outputb of type void [line: 21]					   <
.   .   .   Child: 0 Op: >= of type bool [line: 21]						   <
.   .   .   .   Child: 0 Const 3 of type int [line: 21]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 21]						   <
.   .   Sibling: 15 Call: outputb of type void [line: 23]					   <
.   .   .   Child: 0 Op: != of type bool [line: 23]						   <
.   .   .   .   Child: 0 Const 1 of type int [line: 23]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 23]						   <
.   .   Sibling: 16 Call: outputb of type void [line: 24]					   <
.   .   .   Child: 0 Op: != of type bool [line: 24]						   <
.   .   .   .   Child: 0 Const 2 of type int [line: 24]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 24]						   <
.   .   Sibling: 17 Call: outputb of type void [line: 25]					   <
.   .   .   Child: 0 Op: != of type bool [line: 25]						   <
.   .   .   .   Child: 0 Const 3 of type int [line: 25]						   <
.   .   .   .   Child: 1 Const 2 of type int [line: 25]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: control2.c-
-rwxrwx--- 1 root vboxsf  310 Apr 30 16:20 control2.c-
-rwxrwx--- 1 root vboxsf  101 May  2 10:26 control2.expected
-rwxrwx--- 1 root vboxsf 4293 May  4  2021 control2.mem
-rwxrwx--- 1 root vboxsf 4330 May  4  2021 control2.out
control2.out ztmp4778.txt differ: byte 1, line 1
control2 (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]				   |	Loading file: control2.tm
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 3]					   |	666
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]			   |	1 1
.   .   Sibling: 1 Var: y of type int [mem: Local loc: -3 size: 1] [line: 5]			   |	1 2
.   .   Child: 1 Assign: = of type int [line: 7]						   |	1 3
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]			   |	1 4
.   .   .   Child: 1 Const 10 of type int [line: 7]						   |	2 1
.   .   Sibling: 1 Assign: = of type int [line: 8]						   |	2 2
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 8]			   |	2 3
.   .   .   Child: 1 Const 7 of type int [line: 8]						   |	2 4
.   .   Sibling: 2 While [line: 9]								   |	3 1
.   .   .   Child: 0 Op: > of type bool [line: 9]						   |	3 2
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 9]		   |	3 3
.   .   .   .   Child: 1 Const 0 of type int [line: 9]						   |	3 4
.   .   .   Child: 1 If [line: 9]								   |	4 1
.   .   .   .   Child: 0 Op: == of type bool [line: 9]						   |	4 2
.   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 9]		   |	4 3
.   .   .   .   .   Child: 1 Id: y of type int [mem: Local loc: -3 size: 1] [line: 9]		   |	4 4
.   .   .   .   Child: 1 Assign: = of type int [line: 9]					   |	5
.   .   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 9]		   |	Bye.
.   .   .   .   .   Child: 1 Const 666 of type int [line: 9]					   <
.   .   .   .   Child: 2 Assign: = of type int [line: 9]					   <
.   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 9]		   <
.   .   .   .   .   Child: 1 Op: - of type int [line: 9]					   <
.   .   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 9]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 9]					   <
.   .   Sibling: 3 Call: output of type void [line: 10]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 10]			   <
.   .   Sibling: 4 Call: outnl of type void [line: 11]						   <
.   .   Sibling: 5 Assign: = of type int [line: 13]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 13]			   <
.   .   .   Child: 1 Const 1 of type int [line: 13]						   <
.   .   Sibling: 6 Assign: = of type int [line: 14]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 14]			   <
.   .   .   Child: 1 Const 1 of type int [line: 14]						   <
.   .   Sibling: 7 While [line: 15]								   <
.   .   .   Child: 0 Op: < of type bool [line: 15]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 15]		   <
.   .   .   .   Child: 1 Const 5 of type int [line: 15]						   <
.   .   .   Child: 1 If [line: 15]								   <
.   .   .   .   Child: 0 Op: < of type bool [line: 15]						   <
.   .   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 15]		   <
.   .   .   .   .   Child: 1 Const 5 of type int [line: 15]					   <
.   .   .   .   Child: 1 While [line: 15]							   <
.   .   .   .   .   Child: 0 Op: < of type bool [line: 15]					   <
.   .   .   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 15]	   <
.   .   .   .   .   .   Child: 1 Const 5 of type int [line: 15]					   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 15]			   <
.   .   .   .   .   .   Child: 1 Call: output of type void [line: 16]				   <
.   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 16]	   <
.   .   .   .   .   .   Sibling: 1 Call: output of type void [line: 16]				   <
.   .   .   .   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 16]	   <
.   .   .   .   .   .   Sibling: 2 Call: outnl of type void [line: 16]				   <
.   .   .   .   .   .   Sibling: 3 Assign: ++ of type int [line: 17]				   <
.   .   .   .   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 17]	   <
.   .   .   .   Child: 2 Compound [mem: None loc: 0 size: -4] [line: 18]			   <
.   .   .   .   .   Child: 1 Assign: = of type int [line: 18]					   <
.   .   .   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 18]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 18]					   <
.   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 18]				   <
.   .   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]	   <
.   .   Sibling: 8 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 19]			   <
.   .   Sibling: 9 Return [line: 21]								   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: e.c-
-rwxrwx--- 1 root vboxsf  233 May  4 12:46 e.c-
-rwxrwx--- 1 root vboxsf   49 May  2 10:26 e.expected
-rwxrwx--- 1 root vboxsf 2783 May  4  2021 e.mem
-rwxrwx--- 1 root vboxsf 2820 May  4  2021 e.out
e.out ztmp4778.txt differ: byte 1, line 1
e (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: e.tm
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 2]					   |	1110
.   .   Child: 1 Call: output of type void [line: 3]						   |	1110
.   .   .   Child: 0 Op: + of type int [line: 3]						   |	-222
.   .   .   .   Child: 0 Const 111 of type int [line: 3]					   |	-888
.   .   .   .   Child: 1 Op: + of type int [line: 3]						   |	-888
.   .   .   .   .   Child: 0 Const 222 of type int [line: 3]					   |	Bye.
.   .   .   .   .   Child: 1 Op: + of type int [line: 3]					   <
.   .   .   .   .   .   Child: 0 Const 333 of type int [line: 3]				   <
.   .   .   .   .   .   Child: 1 Const 444 of type int [line: 3]				   <
.   .   Sibling: 1 Call: outnl of type void [line: 3]						   <
.   .   Sibling: 2 Call: output of type void [line: 4]						   <
.   .   .   Child: 0 Op: + of type int [line: 4]						   <
.   .   .   .   Child: 0 Op: + of type int [line: 4]						   <
.   .   .   .   .   Child: 0 Op: + of type int [line: 4]					   <
.   .   .   .   .   .   Child: 0 Const 111 of type int [line: 4]				   <
.   .   .   .   .   .   Child: 1 Const 222 of type int [line: 4]				   <
.   .   .   .   .   Child: 1 Const 333 of type int [line: 4]					   <
.   .   .   .   Child: 1 Const 444 of type int [line: 4]					   <
.   .   Sibling: 3 Call: outnl of type void [line: 4]						   <
.   .   Sibling: 4 Call: output of type void [line: 5]						   <
.   .   .   Child: 0 Op: - of type int [line: 5]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 5]					   <
.   .   .   .   Child: 1 Op: - of type int [line: 5]						   <
.   .   .   .   .   Child: 0 Const 222 of type int [line: 5]					   <
.   .   .   .   .   Child: 1 Op: - of type int [line: 5]					   <
.   .   .   .   .   .   Child: 0 Const 333 of type int [line: 5]				   <
.   .   .   .   .   .   Child: 1 Const 444 of type int [line: 5]				   <
.   .   Sibling: 5 Call: outnl of type void [line: 5]						   <
.   .   Sibling: 6 Call: output of type void [line: 6]						   <
.   .   .   Child: 0 Op: - of type int [line: 6]						   <
.   .   .   .   Child: 0 Op: - of type int [line: 6]						   <
.   .   .   .   .   Child: 0 Op: - of type int [line: 6]					   <
.   .   .   .   .   .   Child: 0 Const 111 of type int [line: 6]				   <
.   .   .   .   .   .   Child: 1 Const 222 of type int [line: 6]				   <
.   .   .   .   .   Child: 1 Const 333 of type int [line: 6]					   <
.   .   .   .   Child: 1 Const 444 of type int [line: 6]					   <
.   .   Sibling: 7 Call: outnl of type void [line: 6]						   <
.   .   Sibling: 8 Call: output of type void [line: 7]						   <
.   .   .   Child: 0 Op: - of type int [line: 7]						   <
.   .   .   .   Child: 0 Op: - of type int [line: 7]						   <
.   .   .   .   .   Child: 0 Op: - of type int [line: 7]					   <
.   .   .   .   .   .   Child: 0 Const 111 of type int [line: 7]				   <
.   .   .   .   .   .   Child: 1 Const 222 of type int [line: 7]				   <
.   .   .   .   .   Child: 1 Const 333 of type int [line: 7]					   <
.   .   .   .   Child: 1 Const 444 of type int [line: 7]					   <
.   .   Sibling: 9 Call: outnl of type void [line: 7]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: examplearray3.c-
-rwxrwx--- 1 root vboxsf 183 Apr 30 16:20 examplearray3.c-
-rwxrwx--- 1 root vboxsf 194 May  2 10:26 examplearray3.expected
-rwxrwx--- 1 root vboxsf   0 May  4  2021 examplearray3.mem
-rwxrwx--- 1 root vboxsf  37 May  4  2021 examplearray3.out
examplearray3.out ztmp4778.txt differ: byte 1, line 1
examplearray3 (Output DIFF)
------------------------------------								   |	WARNING(2): The variable 'q' seems not to be used.
												   >	WARNING(7): The variable 'q' seems not to be used.
												   >	WARNING(12): The variable 'q' seems not to be used.
												   >	Loading file: examplearray3.tm
												   >	777
												   >	Bye.
====================================
FILE: exp3.c-
-rwxrwx--- 1 root vboxsf  883 Apr 30 16:20 exp3.c-
-rwxrwx--- 1 root vboxsf   74 May  2 10:26 exp3.expected
-rwxrwx--- 1 root vboxsf 7890 May  4  2021 exp3.mem
-rwxrwx--- 1 root vboxsf 7927 May  4  2021 exp3.out
exp3.out ztmp4778.txt differ: byte 1, line 1
exp3 (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 3]				   |	Loading file: exp3.tm
.   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 4]					   |	1
.   .   Child: 0 Var: frodo of type int [mem: Local loc: -2 size: 1] [line: 5]			   |	2
.   .   Sibling: 1 Var: bilbo of type int [mem: Local loc: -3 size: 1] [line: 6]		   |	20000210
.   .   Sibling: 2 Var: sam of type int [mem: Local loc: -4 size: 1] [line: 7]			   |	200004100021010
.   .   Sibling: 3 Var: merry of type int [mem: Local loc: -5 size: 1] [line: 8]		   |	400008200042020
.   .   Sibling: 4 Var: pippin of type int [mem: Local loc: -6 size: 1] [line: 9]		   |	T
.   .   Sibling: 5 Var: arwen of type bool [mem: Local loc: -7 size: 1] [line: 10]		   |	Bye.
.   .   Child: 1 Assign: = of type int [line: 12]						   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 12]		   <
.   .   .   Child: 1 Const 1 of type int [line: 12]						   <
.   .   Sibling: 1 Assign: = of type int [line: 13]						   <
.   .   .   Child: 0 Id: frodo of type int [mem: Local loc: -2 size: 1] [line: 13]		   <
.   .   .   Child: 1 Const 10 of type int [line: 13]						   <
.   .   Sibling: 2 Assign: = of type int [line: 14]						   <
.   .   .   Child: 0 Id: sam of type int [mem: Local loc: -4 size: 1] [line: 14]		   <
.   .   .   Child: 1 Const 100 of type int [line: 14]						   <
.   .   Sibling: 3 Assign: = of type int [line: 15]						   <
.   .   .   Child: 0 Id: merry of type int [mem: Local loc: -5 size: 1] [line: 15]		   <
.   .   .   Child: 1 Const 1000 of type int [line: 15]						   <
.   .   Sibling: 4 Assign: = of type int [line: 16]						   <
.   .   .   Child: 0 Id: pippin of type int [mem: Local loc: -6 size: 1] [line: 16]		   <
.   .   .   Child: 1 Const 10000 of type int [line: 16]						   <
.   .   Sibling: 5 Assign: = of type int [line: 18]						   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 18]		   <
.   .   .   Child: 1 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 18]		   <
.   .   Sibling: 6 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 19]		   <
.   .   Sibling: 7 Call: outnl of type void [line: 20]						   <
.   .   Sibling: 8 Assign: = of type int [line: 22]						   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 22]		   <
.   .   .   Child: 1 Op: + of type int [line: 22]						   <
.   .   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 22]		   <
.   .   .   .   Child: 1 Const 1 of type int [line: 22]						   <
.   .   Sibling: 9 Call: output of type void [line: 23]						   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 23]		   <
.   .   Sibling: 10 Call: outnl of type void [line: 24]						   <
.   .   Sibling: 11 Assign: = of type int [line: 26]						   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 26]		   <
.   .   .   Child: 1 Op: + of type int [line: 26]						   <
.   .   .   .   Child: 0 Id: frodo of type int [mem: Local loc: -2 size: 1] [line: 26]		   <
.   .   .   .   Child: 1 Op: * of type int [line: 26]						   <
.   .   .   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 26]	   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 26]					   <
.   .   .   .   .   .   Child: 0 Id: sam of type int [mem: Local loc: -4 size: 1] [line: 26]	   <
.   .   .   .   .   .   Child: 1 Op: * of type int [line: 26]					   <
.   .   .   .   .   .   .   Child: 0 Id: merry of type int [mem: Local loc: -5 size: 1] [line: 2   <
.   .   .   .   .   .   .   Child: 1 Id: pippin of type int [mem: Local loc: -6 size: 1] [line:    <
.   .   Sibling: 12 Call: output of type void [line: 27]					   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 27]		   <
.   .   Sibling: 13 Call: outnl of type void [line: 28]						   <
.   .   Sibling: 14 Assign: = of type int [line: 30]						   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 30]		   <
.   .   .   Child: 1 Op: + of type int [line: 30]						   <
.   .   .   .   Child: 0 Op: * of type int [line: 30]						   <
.   .   .   .   .   Child: 0 Op: + of type int [line: 30]					   <
.   .   .   .   .   .   Child: 0 Op: * of type int [line: 30]					   <
.   .   .   .   .   .   .   Child: 0 Id: merry of type int [mem: Local loc: -5 size: 1] [line: 3   <
.   .   .   .   .   .   .   Child: 1 Id: pippin of type int [mem: Local loc: -6 size: 1] [line:    <
.   .   .   .   .   .   Child: 1 Id: sam of type int [mem: Local loc: -4 size: 1] [line: 30]	   <
.   .   .   .   .   Child: 1 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 30]	   <
.   .   .   .   Child: 1 Id: frodo of type int [mem: Local loc: -2 size: 1] [line: 30]		   <
.   .   Sibling: 15 Call: output of type void [line: 31]					   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 31]		   <
.   .   Sibling: 16 Call: outnl of type void [line: 32]						   <
.   .   Sibling: 17 Assign: = of type int [line: 34]						   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 34]		   <
.   .   .   Child: 1 Op: + of type int [line: 34]						   <
.   .   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 34]		   <
.   .   .   .   Child: 1 Op: - of type int [line: 34]						   <
.   .   .   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 34]	   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 34]					   <
.   .   .   .   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 34]	   <
.   .   .   .   .   .   Child: 1 Op: - of type int [line: 34]					   <
.   .   .   .   .   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 3   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 34]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Id: bilbo of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   Sibling: 18 Call: output of type void [line: 35]					   <
.   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [line: 35]		   <
.   .   Sibling: 19 Call: outnl of type void [line: 36]						   <
.   .   Sibling: 20 Assign: = of type bool [line: 38]						   <
.   .   .   Child: 0 Id: arwen of type bool [mem: Local loc: -7 size: 1] [line: 38]		   <
.   .   .   Child: 1 Const true of type bool [line: 38]						   <
.   .   Sibling: 21 Assign: = of type bool [line: 39]						   <
.   .   .   Child: 0 Id: arwen of type bool [mem: Local loc: -7 size: 1] [line: 39]		   <
.   .   .   Child: 1 Op: or of type bool [line: 39]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 39]					   <
.   .   .   .   Child: 1 Op: and of type bool [line: 39]					   <
.   .   .   .   .   Child: 0 Id: arwen of type bool [mem: Local loc: -7 size: 1] [line: 39]	   <
.   .   .   .   .   Child: 1 Op: not of type bool [line: 39]					   <
.   .   .   .   .   .   Child: 0 Op: >= of type bool [line: 39]					   <
.   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 39]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 39]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: chsign of type int [line: 39]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: merry of type int [mem: Local loc: -5 size:   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: chsign of type int [line: 39]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: sam of type int [mem: Local loc: -4 size: 1   <
.   .   .   .   .   .   .   .   Child: 1 Id: pippin of type int [mem: Local loc: -6 size: 1] [li   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 39]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: bilbo of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 39]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: frodo of type int [mem: Local loc: -2 size: 1]    <
.   .   .   .   .   .   .   .   .   Child: 1 Op: chsign of type int [line: 39]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: frodo of type int [mem: Local loc: -2 size:   <
.   .   Sibling: 22 Call: outputb of type void [line: 40]					   <
.   .   .   Child: 0 Id: arwen of type bool [mem: Local loc: -7 size: 1] [line: 40]		   <
.   .   Sibling: 23 Call: outnl of type void [line: 41]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: factor.c-
-rwxrwx--- 1 root vboxsf  825 Apr 30 16:37 factor.c-
-rwxrwx--- 1 root vboxsf  319 May  2 10:26 factor.expected
-rwxrwx--- 1 root vboxsf   77 May  2  2020 factor.in
-rwxrwx--- 1 root vboxsf 9124 May  4  2021 factor.mem
-rwxrwx--- 1 root vboxsf 9161 May  4  2021 factor.out
factor.out ztmp4778.txt differ: byte 1, line 1
factor (Output DIFF)
Func: sqrt returns type int [mem: Global loc: 0 size: -3] [line: 1]				   |	Loading file: factor.tm
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]			   |	entered: 2
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 2]					   |	2
.   .   Child: 0 Var: guess of type int [mem: Local loc: -3 size: 1] [line: 3]			   |	entered: 3
.   .   Sibling: 1 Var: newguess of type int [mem: Local loc: -4 size: 1] [line: 4]		   |	3
.   .   Child: 1 If [line: 6]									   |	entered: 5
.   .   .   Child: 0 Op: == of type bool [line: 6]						   |	5
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 6]		   |	entered: 30
.   .   .   .   Child: 1 Const 1 of type int [line: 6]						   |	2 3 5
.   .   .   Child: 1 Return [line: 6]								   |	entered: 210
.   .   .   .   Child: 0 Const 1 of type int [line: 6]						   |	2 3 5 7
.   .   Sibling: 1 Assign: = of type int [line: 7]						   |	entered: 2310
.   .   .   Child: 0 Id: guess of type int [mem: Local loc: -3 size: 1] [line: 7]		   |	2 3 5 7 11
.   .   .   Child: 1 Op: / of type int [line: 7]						   |	entered: 666
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 7]		   |	2 3 3 37
.   .   .   .   Child: 1 Const 2 of type int [line: 7]						   |	entered: 4096
.   .   Sibling: 2 Assign: = of type int [line: 8]						   |	2 2 2 2 2 2 2 2 2 2 2 2
.   .   .   Child: 0 Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 8]		   |	entered: 3331
.   .   .   Child: 1 Op: / of type int [line: 8]						   |	3331
.   .   .   .   Child: 0 Op: + of type int [line: 8]						   |	entered: 3333331
.   .   .   .   .   Child: 0 Op: / of type int [line: 8]					   |	3333331
.   .   .   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 8]	   |	entered: 552390973
.   .   .   .   .   .   Child: 1 Id: guess of type int [mem: Local loc: -3 size: 1] [line: 8]	   |	23497 23509
.   .   .   .   .   Child: 1 Id: guess of type int [mem: Local loc: -3 size: 1] [line: 8]	   |	entered: 343
.   .   .   .   Child: 1 Const 2 of type int [line: 8]						   |	7 7 7
.   .   Sibling: 3 While [line: 9]								   |	entered: 2401
.   .   .   Child: 0 Op: > of type bool [line: 9]						   |	7 7 7 7
.   .   .   .   Child: 0 Op: - of type int [line: 9]						   |	entered: 0
.   .   .   .   .   Child: 0 Id: guess of type int [mem: Local loc: -3 size: 1] [line: 9]	   |	Bye.
.   .   .   .   .   Child: 1 Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 9]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 9]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 9]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 10]					   <
.   .   .   .   .   Child: 0 Id: guess of type int [mem: Local loc: -3 size: 1] [line: 10]	   <
.   .   .   .   .   Child: 1 Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 10]	   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 11]					   <
.   .   .   .   .   Child: 0 Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 11]	   <
.   .   .   .   .   Child: 1 Op: / of type int [line: 11]					   <
.   .   .   .   .   .   Child: 0 Op: + of type int [line: 11]					   <
.   .   .   .   .   .   .   Child: 0 Op: / of type int [line: 11]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Id: guess of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   Child: 1 Id: guess of type int [mem: Local loc: -3 size: 1] [line: 1   <
.   .   .   .   .   .   Child: 1 Const 2 of type int [line: 11]					   <
.   .   Sibling: 4 If [line: 13]								   <
.   .   .   Child: 0 Op: > of type bool [line: 13]						   <
.   .   .   .   Child: 0 Op: * of type int [line: 13]						   <
.   .   .   .   .   Child: 0 Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 13]	   <
.   .   .   .   .   Child: 1 Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 13]	   <
.   .   .   .   Child: 1 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 13]		   <
.   .   .   Child: 1 Assign: = of type int [line: 13]						   <
.   .   .   .   Child: 0 Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 13]	   <
.   .   .   .   Child: 1 Op: - of type int [line: 13]						   <
.   .   .   .   .   Child: 0 Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 13]	   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 13]					   <
.   .   Sibling: 5 Return [line: 15]								   <
.   .   .   Child: 0 Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 15]		   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 19]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 20]					   <
.   .   Child: 0 Var: n of type int [mem: Local loc: -2 size: 1] [line: 21]			   <
.   .   Sibling: 1 Var: i of type int [mem: Local loc: -3 size: 1] [line: 22]			   <
.   .   Child: 1 While [line: 24]								   <
.   .   .   Child: 0 Op: > of type bool [line: 24]						   <
.   .   .   .   Child: 0 Assign: = of type int [line: 24]					   <
.   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 24]		   <
.   .   .   .   .   Child: 1 Call: input of type int [line: 24]					   <
.   .   .   .   Child: 1 Const 1 of type int [line: 24]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 24]				   <
.   .   .   .   Child: 0 Var: limit of type int [mem: Local loc: -4 size: 1] [line: 25]		   <
.   .   .   .   Child: 1 Assign: = of type int [line: 26]					   <
.   .   .   .   .   Child: 0 Id: limit of type int [mem: Local loc: -4 size: 1] [line: 26]	   <
.   .   .   .   .   Child: 1 Call: sqrt of type int [line: 26]					   <
.   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 26]	   <
.   .   .   .   Sibling: 1 While [line: 29]							   <
.   .   .   .   .   Child: 0 Op: == of type bool [line: 29]					   <
.   .   .   .   .   .   Child: 0 Op: % of type int [line: 29]					   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 29]	   <
.   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 29]				   <
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 29]					   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 29]			   <
.   .   .   .   .   .   Child: 1 Call: output of type void [line: 30]				   <
.   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 30]				   <
.   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 31]				   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 31]	   <
.   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 31]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 3   <
.   .   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 31]				   <
.   .   .   .   Sibling: 2 Assign: = of type int [line: 35]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 35]		   <
.   .   .   .   .   Child: 1 Const 3 of type int [line: 35]					   <
.   .   .   .   Sibling: 3 While [line: 36]							   <
.   .   .   .   .   Child: 0 Op: <= of type bool [line: 36]					   <
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 36]	   <
.   .   .   .   .   .   Child: 1 Id: limit of type int [mem: Local loc: -4 size: 1] [line: 36]	   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 36]			   <
.   .   .   .   .   .   Child: 1 While [line: 37]						   <
.   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 37]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: % of type int [line: 37]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 37]				   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 37]		   <
.   .   .   .   .   .   .   .   Child: 1 Call: output of type void [line: 38]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 39]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 39]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1]    <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1]    <
.   .   .   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 40]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: limit of type int [mem: Local loc: -4 size: 1]    <
.   .   .   .   .   .   .   .   .   Child: 1 Call: sqrt of type int [line: 40]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1]    <
.   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 42]				   <
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 42]	   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 42]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 4   <
.   .   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 42]				   <
.   .   .   .   Sibling: 4 If [line: 45]							   <
.   .   .   .   .   Child: 0 Op: > of type bool [line: 45]					   <
.   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 45]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 45]					   <
.   .   .   .   .   Child: 1 Call: output of type void [line: 45]				   <
.   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 45]	   <
.   .   .   .   Sibling: 5 Call: outnl of type void [line: 46]					   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: factor2.c-
-rwxrwx--- 1 root vboxsf  431 Apr 30 16:30 factor2.c-
-rwxrwx--- 1 root vboxsf  238 May  2 10:26 factor2.expected
-rwxrwx--- 1 root vboxsf   63 May  2  2020 factor2.in
-rwxrwx--- 1 root vboxsf 4306 May  4  2021 factor2.mem
-rwxrwx--- 1 root vboxsf 4343 May  4  2021 factor2.out
factor2.out ztmp4778.txt differ: byte 1, line 1
factor2 (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: factor2.tm
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 2]					   |	entered: 210
.   .   Child: 0 Var: n of type int [mem: Local loc: -2 size: 1] [line: 3]			   |	2 3 5 7
.   .   Child: 1 While [line: 5]								   |	entered: 666
.   .   .   Child: 0 Const true of type bool [line: 5]						   |	2 3 3 37
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 5]				   |	entered: 4096
.   .   .   .   Child: 1 Assign: = of type int [line: 6]					   |	2 2 2 2 2 2 2 2 2 2 2 2
.   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 6]		   |	entered: 3331
.   .   .   .   .   Child: 1 Call: input of type int [line: 6]					   |	3331
.   .   .   .   Sibling: 1 If [line: 7]								   |	entered: 3333331
.   .   .   .   .   Child: 0 Op: < of type bool [line: 7]					   |	3333331
.   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 7]	   |	entered: 552390973
.   .   .   .   .   .   Child: 1 Const 2 of type int [line: 7]					   |	23497 23509
.   .   .   .   .   Child: 1 Break [line: 7]							   |	entered: 343
.   .   .   .   Sibling: 2 While [line: 9]							   |	7 7 7
.   .   .   .   .   Child: 0 Op: == of type bool [line: 9]					   |	entered: 2401
.   .   .   .   .   .   Child: 0 Op: % of type int [line: 9]					   |	7 7 7 7
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 9]	   |	entered: 0
.   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 9]				   |	Bye.
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 9]					   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 9]			   <
.   .   .   .   .   .   Child: 1 Call: output of type void [line: 10]				   <
.   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 10]				   <
.   .   .   .   .   .   Sibling: 1 Assign: /= of type int [line: 11]				   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 11]	   <
.   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 11]				   <
.   .   .   .   Sibling: 3 For [mem: None loc: 0 size: -4] [line: 14]				   <
.   .   .   .   .   Child: 0 Var: i of type int [mem: Local loc: -3 size: 1] [line: 14]		   <
.   .   .   .   .   Child: 1 Range [line: 14]							   <
.   .   .   .   .   .   Child: 0 Const 3 of type int [line: 14]					   <
.   .   .   .   .   .   Child: 1 Id: n of type int [mem: Local loc: -2 size: 1] [line: 14]	   <
.   .   .   .   .   .   Child: 2 Const 2 of type int [line: 14]					   <
.   .   .   .   .   Child: 2 Compound [mem: None loc: 0 size: -4] [line: 14]			   <
.   .   .   .   .   .   Child: 1 If [line: 15]							   <
.   .   .   .   .   .   .   Child: 0 Op: > of type bool [line: 15]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 15]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Id: n of type int [mem: Local loc: -2 size: 1] [line: 1   <
.   .   .   .   .   .   .   Child: 1 Break [line: 15]						   <
.   .   .   .   .   .   Sibling: 1 While [line: 16]						   <
.   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 16]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: % of type int [line: 16]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 16]				   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 16]		   <
.   .   .   .   .   .   .   .   Child: 1 Call: output of type void [line: 17]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   Sibling: 1 Assign: /= of type int [line: 18]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   Sibling: 4 If [line: 21]							   <
.   .   .   .   .   Child: 0 Op: > of type bool [line: 21]					   <
.   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 21]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 21]					   <
.   .   .   .   .   Child: 1 Call: output of type void [line: 21]				   <
.   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 21]	   <
.   .   .   .   Sibling: 5 Call: outnl of type void [line: 22]					   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: factorial.c-
-rwxrwx--- 1 root vboxsf  317 Apr 30 16:30 factorial.c-
-rwxrwx--- 1 root vboxsf   94 May  2 10:26 factorial.expected
-rwxrwx--- 1 root vboxsf   17 Dec  1  2014 factorial.in
-rwxrwx--- 1 root vboxsf 2734 May  4  2021 factorial.mem
-rwxrwx--- 1 root vboxsf 2771 May  4  2021 factorial.out
factorial.out ztmp4778.txt differ: byte 1, line 1
factorial (Output DIFF)
Func: factorial returns type int [mem: Global loc: 0 size: -3] [line: 2]			   |	Loading file: factorial.tm
.   Child: 0 Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 2]			   |	entered: 15
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 3]					   |	1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1307674368000
.   .   Child: 0 Var: i of type int [mem: Local loc: -3 size: 1] [line: 4]			   |	Bye.
.   .   Sibling: 1 Var: f of type int [mem: Local loc: -4 size: 1] [line: 4]			   <
.   .   Child: 1 Assign: = of type int [line: 5]						   <
.   .   .   Child: 0 Id: f of type int [mem: Local loc: -4 size: 1] [line: 5]			   <
.   .   .   Child: 1 Assign: = of type int [line: 5]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 5]		   <
.   .   .   .   Child: 1 Const 1 of type int [line: 5]						   <
.   .   Sibling: 1 While [line: 6]								   <
.   .   .   Child: 0 Op: <= of type bool [line: 6]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 6]		   <
.   .   .   .   Child: 1 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 6]		   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 6]				   <
.   .   .   .   Child: 1 Call: output of type void [line: 7]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 7]		   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 8]					   <
.   .   .   .   .   Child: 0 Id: f of type int [mem: Local loc: -4 size: 1] [line: 8]		   <
.   .   .   .   .   Child: 1 Op: * of type int [line: 8]					   <
.   .   .   .   .   .   Child: 0 Id: f of type int [mem: Local loc: -4 size: 1] [line: 8]	   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1] [line: 8]	   <
.   .   .   .   Sibling: 2 Assign: ++ of type int [line: 9]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 9]		   <
.   .   Sibling: 2 Return [line: 11]								   <
.   .   .   Child: 0 Id: f of type int [mem: Local loc: -4 size: 1] [line: 11]			   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 14]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 15]					   <
.   .   Child: 0 Var: n of type int [mem: Local loc: -2 size: 1] [line: 16]			   <
.   .   Child: 1 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 17]			   <
.   .   .   Child: 1 Call: input of type int [line: 17]						   <
.   .   Sibling: 1 Assign: = of type int [line: 18]						   <
.   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 18]			   <
.   .   .   Child: 1 Call: factorial of type int [line: 18]					   <
.   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 18]		   <
.   .   Sibling: 2 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 19]			   <
.   .   Sibling: 3 Call: outnl of type void [line: 20]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: factorial2.c-
-rwxrwx--- 1 root vboxsf  320 Apr 30 16:30 factorial2.c-
-rwxrwx--- 1 root vboxsf   95 May  2 10:26 factorial2.expected
-rwxrwx--- 1 root vboxsf   17 Dec  1  2014 factorial2.in
-rwxrwx--- 1 root vboxsf 2796 May  4  2021 factorial2.mem
-rwxrwx--- 1 root vboxsf 2833 May  4  2021 factorial2.out
factorial2.out ztmp4778.txt differ: byte 1, line 1
factorial2 (Output DIFF)
Func: factorial returns type int [mem: Global loc: 0 size: -3] [line: 2]			   |	Loading file: factorial2.tm
.   Child: 0 Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 2]			   |	entered: 15
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 3]					   |	1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1307674368000
.   .   Child: 0 Var: i of type int [mem: Local loc: -3 size: 1] [line: 4]			   |	Bye.
.   .   Sibling: 1 Var: f of type int [mem: Local loc: -4 size: 1] [line: 4]			   <
.   .   Child: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Id: f of type int [mem: Local loc: -4 size: 1] [line: 6]			   <
.   .   .   Child: 1 Assign: = of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 6]		   <
.   .   .   .   Child: 1 Const 1 of type int [line: 6]						   <
.   .   Sibling: 1 While [line: 7]								   <
.   .   .   Child: 0 Op: <= of type bool [line: 7]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 7]		   <
.   .   .   .   Child: 1 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 7]		   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 7]				   <
.   .   .   .   Child: 1 Call: output of type void [line: 8]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 8]		   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 9]					   <
.   .   .   .   .   Child: 0 Id: f of type int [mem: Local loc: -4 size: 1] [line: 9]		   <
.   .   .   .   .   Child: 1 Op: * of type int [line: 9]					   <
.   .   .   .   .   .   Child: 0 Id: f of type int [mem: Local loc: -4 size: 1] [line: 9]	   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1] [line: 9]	   <
.   .   .   .   Sibling: 2 Assign: += of type int [line: 10]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 10]		   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 10]					   <
.   .   Sibling: 2 Return [line: 13]								   <
.   .   .   Child: 0 Id: f of type int [mem: Local loc: -4 size: 1] [line: 13]			   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 16]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 17]					   <
.   .   Child: 0 Var: n of type int [mem: Local loc: -2 size: 1] [line: 18]			   <
.   .   Child: 1 Assign: = of type int [line: 19]						   <
.   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 19]			   <
.   .   .   Child: 1 Call: input of type int [line: 19]						   <
.   .   Sibling: 1 Assign: = of type int [line: 20]						   <
.   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 20]			   <
.   .   .   Child: 1 Call: factorial of type int [line: 20]					   <
.   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 20]		   <
.   .   Sibling: 2 Call: output of type void [line: 21]						   <
.   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 21]			   <
.   .   Sibling: 3 Call: outnl of type void [line: 22]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: factorialr.c-
-rwxrwx--- 1 root vboxsf  245 Apr 30 16:30 factorialr.c-
-rwxrwx--- 1 root vboxsf   59 May  2 10:26 factorialr.expected
-rwxrwx--- 1 root vboxsf   17 Dec  1  2014 factorialr.in
-rwxrwx--- 1 root vboxsf 1938 May  4  2021 factorialr.mem
-rwxrwx--- 1 root vboxsf 1975 May  4  2021 factorialr.out
factorialr.out ztmp4778.txt differ: byte 1, line 1
factorialr (Output DIFF)
Func: factorial returns type int [mem: Global loc: 0 size: -3] [line: 2]			   |	Loading file: factorialr.tm
.   Child: 0 Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 2]			   |	entered: 15
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 3]					   |	1307674368000
.   .   Child: 1 If [line: 4]									   |	Bye.
.   .   .   Child: 0 Op: < of type bool [line: 4]						   <
.   .   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 4]		   <
.   .   .   .   Child: 1 Const 2 of type int [line: 4]						   <
.   .   .   Child: 1 Return [line: 4]								   <
.   .   .   .   Child: 0 Const 1 of type int [line: 4]						   <
.   .   .   Child: 2 Return [line: 5]								   <
.   .   .   .   Child: 0 Op: * of type int [line: 5]						   <
.   .   .   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 5]	   <
.   .   .   .   .   Child: 1 Call: factorial of type int [line: 5]				   <
.   .   .   .   .   .   Child: 0 Op: - of type int [line: 5]					   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 5   <
.   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 5]				   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 8]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 9]					   <
.   .   Child: 0 Var: n of type int [mem: Local loc: -2 size: 1] [line: 10]			   <
.   .   Child: 1 Assign: = of type int [line: 11]						   <
.   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 11]			   <
.   .   .   Child: 1 Call: input of type int [line: 11]						   <
.   .   Sibling: 1 Assign: = of type int [line: 12]						   <
.   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 12]			   <
.   .   .   Child: 1 Call: factorial of type int [line: 12]					   <
.   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 12]		   <
.   .   Sibling: 2 Call: output of type void [line: 13]						   <
.   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 13]			   <
.   .   Sibling: 3 Call: outnl of type void [line: 14]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: fib.c-
-rwxrwx--- 1 root vboxsf  236 May  2 10:19 fib.c-
-rwxrwx--- 1 root vboxsf   69 May  2 10:26 fib.expected
-rwxrwx--- 1 root vboxsf   16 Apr 30 17:08 fib.in
-rwxrwx--- 1 root vboxsf 1814 May  4  2021 fib.mem
-rwxrwx--- 1 root vboxsf 1851 May  4  2021 fib.out
fib.out ztmp4778.txt differ: byte 1, line 1
fib (Output DIFF)
Func: fib returns type int [mem: Global loc: 0 size: -3] [line: 3]				   |	Loading file: fib.tm
.   Child: 0 Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 3]			   |	entered: 6
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 4]					   |	6
.   .   Child: 1 Call: output of type void [line: 5]						   |	5
.   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 5]		   |	4
.   .   Sibling: 1 Call: outnl of type void [line: 6]						   |	3
.   .   Sibling: 2 If [line: 7]									   |	2
.   .   .   Child: 0 Op: < of type bool [line: 7]						   |	1
.   .   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 7]		   |	2
.   .   .   .   Child: 1 Const 3 of type int [line: 7]						   |	3
.   .   .   Child: 1 Return [line: 7]								   |	2
.   .   .   .   Child: 0 Const 1 of type int [line: 7]						   |	1
.   .   .   Child: 2 Return [line: 8]								   |	4
.   .   .   .   Child: 0 Op: + of type int [line: 8]						   |	3
.   .   .   .   .   Child: 0 Call: fib of type int [line: 8]					   |	2
.   .   .   .   .   .   Child: 0 Op: - of type int [line: 8]					   |	1
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 8   |	2
.   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 8]				   |	8
.   .   .   .   .   Child: 1 Call: fib of type int [line: 8]					   |	Bye.
.   .   .   .   .   .   Child: 0 Op: - of type int [line: 8]					   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 8   <
.   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 8]				   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 11]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 12]					   <
.   .   Child: 1 Call: output of type void [line: 13]						   <
.   .   .   Child: 0 Call: fib of type int [line: 13]						   <
.   .   .   .   Child: 0 Call: input of type int [line: 13]					   <
.   .   Sibling: 1 Call: outnl of type void [line: 14]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: fractal.c-
-rwxrwx--- 1 root vboxsf  3509 Apr 30 16:30 fractal.c-
-rwxrwx--- 1 root vboxsf  5993 May  2 10:26 fractal.expected
-rwxrwx--- 1 root vboxsf    26 Apr 23  2020 fractal.in
-rwxrwx--- 1 root vboxsf 31985 May  4  2021 fractal.mem
-rwxrwx--- 1 root vboxsf 32022 May  4  2021 fractal.out
fractal.out ztmp4778.txt differ: byte 84, line 1
fractal (Output DIFF)
WARNING(120): character is 4 characters long and not a single character: '' by ''. The first cha   |	WARNING(120): character is 4 characters long and not a single character: '' by ''.  The first ch
WARNING(140): Variable 'JuliaVals' may be uninitialized when used here.					WARNING(140): Variable 'JuliaVals' may be uninitialized when used here.
Var: TOP of type int [mem: Global loc: 0 size: 1] [line: 22]					   |	Loading file: fractal.tm
Sibling: 1 Var: LEFT of type int [mem: Global loc: -1 size: 1] [line: 23]			   |	. . . . . . . . .                               . . . . . . . . . . . .
Sibling: 2 Var: HEIGHT of type int [mem: Global loc: -2 size: 1] [line: 24]			   |	. . . . . . .                                         . . . . . . . . . .
Sibling: 3 Var: WIDTH of type int [mem: Global loc: -3 size: 1] [line: 25]			   |	. . . . .                         ; ; ; ; # - - ; ;       . . . . . . . .
Sibling: 4 Var: XStep of type int [mem: Global loc: -4 size: 1] [line: 26]			   |	. . . .                         ; ; ; ; - - I W + - ; ; ;       . . . . . .
Sibling: 5 Var: YStep of type int [mem: Global loc: -5 size: 1] [line: 27]			   |	. . . .                         ; ; ; ; ; - - I @ @ O - ; ; ;       . . . . .
Sibling: 6 Var: XMax of type int [mem: Global loc: -6 size: 1] [line: 28]			   |	. . .                         ; ; ; ; ; - - I O @ @ I + - ; ; ;       . . . .
Sibling: 7 Var: YMax of type int [mem: Global loc: -7 size: 1] [line: 28]			   |	. . .                       ; ; ; ; ; ; - - + @ @ @ @ @ I - - ; ; ;       . . .
Sibling: 8 Var: iter of type int [mem: Global loc: -8 size: 1] [line: 29]			   |	. .                       ; ; ; ; ; - - + + I # @ @ @ @ I + - - - ;         . .
Sibling: 9 Var: grayScale of array of type char [mem: Global loc: -10 size: 13] [line: 30]	   |	. .                       ; ; ; ; ; - + I I I V # @ @ @ @ V I + + + - ;         .
Sibling: 10 Func: Mandelbrot returns type void [mem: Global loc: 0 size: -3] [line: 33]		   |	.                       ; ; ; - - - + @ @ W @ @ @ @ @ @ @ @ @ V O V I - ;
.   Child: 0 Parm: JuliaVals of array of type int [mem: Parameter loc: -2 size: 1] [line: 33]	   |	.                     ; ; - - - - + I W @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ - ;
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 34]					   |	; ; - - - - - + + O # @ @ @ @ @ @ @ @ @ @ @ @ @ @ O - ;
.   .   Child: 1 While [line: 35]								   |	.               ; ; + + + - - + + I O @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ O + - ;
.   .   .   Child: 0 Op: < of type bool [line: 35]						   |	; ; ; - + # O I O O I I O V @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ - ;
.   .   .   .   Child: 0 Id: TOP of type int [mem: Global loc: 0 size: 1] [line: 35]		   |	; ; ; ; - - + W @ # # @ @ V V @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ V - ;
.   .   .   .   Child: 1 Id: YMax of type int [mem: Global loc: -7 size: 1] [line: 35]		   |	; ; ; ; ; - - - I V @ @ @ @ @ @ # @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ I - ; ;
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 36]				   |	; ; ; ; ; - - - I O @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ I - ; ;
.   .   .   .   Child: 1 Assign: = of type int [line: 37]					   |	; ; ; ; - + + I @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ # + - ; ;
.   .   .   .   .   Child: 0 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 37]	   |	. - + I I I I O W @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ I - - ; ;
.   .   .   .   .   Child: 1 Op: chsign of type int [line: 37]					   |	I O W # # # # @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ W I - - ; ;
.   .   .   .   .   .   Child: 0 Const 512 of type int [line: 37]				   |	- - ; + + + I O # @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ O + - ; ;
.   .   .   .   Sibling: 1 While [line: 38]							   |	; ; ; ; - - + I @ V @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ + - ; ;
.   .   .   .   .   Child: 0 Op: < of type bool [line: 38]					   |	; ; ; ; - - - + I W @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ I - ; ;
.   .   .   .   .   .   Child: 0 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 38]	   |	; ; ; ; - - - I O @ @ @ @ @ @ W @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ I - ;
.   .   .   .   .   .   Child: 1 Id: XMax of type int [mem: Global loc: -6 size: 1] [line: 38]	   |	; ; ; ; - - + @ V V W # V O O # @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ - ;
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 39]			   |	.           ; ; ; + @ I + I I I I I O @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ V @ - ;
.   .   .   .   .   .   Child: 0 Var: Len of type int [mem: Local loc: -3 size: 1] [line: 40]	   |	.                 ; - - - - - - + + I @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ I + - ;
.   .   .   .   .   .   Sibling: 1 Var: Bi of type int [mem: Local loc: -4 size: 1] [line: 41]	   |	; - - - - - + + O W @ @ @ @ @ @ @ @ @ @ @ @ @ @ V - ;
.   .   .   .   .   .   Sibling: 2 Var: A of type int [mem: Local loc: -5 size: 1] [line: 41]	   |	.                     ; ; ; - - - + I @ @ @ @ @ @ @ @ @ @ @ @ # @ @ @ - ;
.   .   .   .   .   .   Sibling: 3 Var: NextA of type int [mem: Local loc: -6 size: 1] [line: 41   |	. .                     ; ; ; ; - - + @ @ V W @ @ @ @ @ @ @ @ O I O I ;
.   .   .   .   .   .   Sibling: 4 Var: NextBi of type int [mem: Local loc: -7 size: 1] [line: 4   |	.                         ; ; ; ; - - + + I O @ @ @ @ @ O I + + - ; ;         .
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 43]				   |	. .                         ; ; ; ; ; - - + I W @ @ @ @ I - - - ; ;         . .
.   .   .   .   .   .   .   Child: 0 Id: A of type int [mem: Local loc: -5 size: 1] [line: 43]	   |	. .                         ; ; ; ; ; - - + O # @ @ V + - - ; ; ;       . . .
.   .   .   .   .   .   .   Child: 1 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 4   |	. . .                         ; ; ; ; ; - - + O # # I - ; ; ; ;       . . . .
.   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 44]				   |	. . .                         ; ; ; ; ; - - I @ O @ ; ; ; ;       . . . . .
.   .   .   .   .   .   .   Child: 0 Id: Bi of type int [mem: Local loc: -4 size: 1] [line: 44]	   |	. . . . .                         ; ; ; ; - O I + - ; ;       . . . . . . .
.   .   .   .   .   .   .   Child: 1 Id: TOP of type int [mem: Global loc: 0 size: 1] [line: 44]   |	. . . . .                           ; ; ; - - ; ;         . . . . . . . .
.   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 45]				   |	. . . . . . .                                       . . . . . . . . . .
.   .   .   .   .   .   .   Child: 0 Id: NextA of type int [mem: Local loc: -6 size: 1] [line: 4   |	. . . . . . . . . . . . . . . . . . . . . .
.   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 45]				   |	. . . . . . . . . . . . . . . . . . . . . .       ; ; ; ; ; ; ; ;
.   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 45]				   |	. . . . . . . . . . . . . . . . . . . . .     ; ; - T + - ; ; ; ; ; ; ; ;
.   .   .   .   .   .   .   .   .   Child: 0 Id: A of type int [mem: Local loc: -5 size: 1] [lin   |	. . . . . . . . . . . . . . . . . . . .       ; ; - I T + - - ; ; ; ; ; ; ;
.   .   .   .   .   .   .   .   .   Child: 1 Id: A of type int [mem: Local loc: -5 size: 1] [lin   |	. . . . . . . . . . . . . . . . . . . .       ; ; ; + V W I - - - ; ; ; ; ; -
.   .   .   .   .   .   .   .   Child: 1 Const 256 of type int [line: 45]			   |	. . . . . . . . . . . . . . . . . . .         ; ; ; - O T O I + - - - - - - +
.   .   .   .   .   .   Sibling: 3 Assign: = of type int [line: 46]				   |	. . . . . . . . . . . . . . . . . . .         ; ; ; - - + F T W V + + + + + I T
.   .   .   .   .   .   .   Child: 0 Id: NextBi of type int [mem: Local loc: -7 size: 1] [line:    |	. . . . . . . . . . . . . . . . . .           ; ; ; - - + I V T O I I + + I W T
.   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 46]				   |	. . . . . . . . . . . . . . . . . .             ; ; ; - - + I O T F O I I O W T V
.   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 46]				   |	. . . . . . . . . . . . . . . . .               ; ; - - - + I O F T W W T W T F I
.   .   .   .   .   .   .   .   .   Child: 0 Id: Bi of type int [mem: Local loc: -4 size: 1] [li   |	. . . . . . . . . . . . . . . .               ; ; ; - - + + O W T T T T W T V I +
.   .   .   .   .   .   .   .   .   Child: 1 Id: Bi of type int [mem: Local loc: -4 size: 1] [li   |	. . . . . . . . . . . . . . .                 ; ; - - + + I V T W V V O O V W + -
.   .   .   .   .   .   .   .   Child: 1 Const 256 of type int [line: 46]			   |	. . . . . . . . . . . . . . .                   ; ; - I I I O W T O O I I I I + - -
.   .   .   .   .   .   Sibling: 4 Assign: = of type int [line: 47]				   |	. . . . . . . . . . . . . .                     ; ; I F V V V T F O I + + + + - - ;
.   .   .   .   .   .   .   Child: 0 Id: Len of type int [mem: Local loc: -3 size: 1] [line: 47]   |	. . . . . . . . . . . . .                     ; ; - + O F T T F T I + + + - - - ; ;
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 47]				   |	. . . . . . . . . . . .                       ; ; - + I V T F O O + + + - - - ; ; ;
.   .   .   .   .   .   .   .   Child: 0 Id: NextA of type int [mem: Local loc: -6 size: 1] [lin   |	. . . . . . . . . . . .                     ; ; ; - + I O T W O I + + - - - ; ; ; ;
.   .   .   .   .   .   .   .   Child: 1 Id: NextBi of type int [mem: Local loc: -7 size: 1] [li   |	. . . . . . . . . . .                       ; ; - - + I T T W I I + - - - - ; ; ;
.   .   .   .   .   .   Sibling: 5 Assign: = of type int [line: 48]				   |	. . . . . . . . . . .                       ; ; - - - + I V T T I + - - - - ; ; ;
.   .   .   .   .   .   .   Child: 0 Id: iter of type int [mem: Global loc: -8 size: 1] [line: 4   |	. . . . . . . . . . .                     ; ; ; - - - + I W T T O + - - - ; ; ;
.   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 48]				   |	. . . . . . . . .                     ; ; ; - - - - + I F T T O + - - - ; ;
.   .   .   .   .   .   Sibling: 6 While [line: 50]						   |	. . . . . . . . .                 ; ; ; ; - - - - + I I V T W O + - - ; ;
.   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 50]				   |	. . . . . . . .                 ; ; ; ; - - - - + + I O V T O I + - - ; ;
.   .   .   .   .   .   .   .   Child: 0 Op: <= of type bool [line: 50]				   |	. . . . . . . .             ; ; ; ; ; ; - - - + + + I V F T V I + - ; ;
.   .   .   .   .   .   .   .   .   Child: 0 Id: Len of type int [mem: Local loc: -3 size: 1] [l   |	. . . . . . . .           ; ; ; ; ; ; - - + + + + I V T T F T T I - ; ;
.   .   .   .   .   .   .   .   .   Child: 1 Const 1024 of type int [line: 50]			   |	. . . . . . .         ; ; ; ; ; ; ; - - + + + + I O F T V O I O I ; ;
.   .   .   .   .   .   .   .   Child: 1 Op: < of type bool [line: 50]				   |	. . . . . . .       ; ; ; ; ; ; ; - - I O I I I O V T F O I + + - ; ;
.   .   .   .   .   .   .   .   .   Child: 0 Id: iter of type int [mem: Global loc: -8 size: 1]    |	. . . . . .       ; ; ; ; - - - + + O T V V T V W T F I + + - - ; ;
.   .   .   .   .   .   .   .   .   Child: 1 Const 11 of type int [line: 50]			   |	. . . . . .     ; - - - - - + + + O V T T T T T T V O + + - - ; ; ;
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 51]		   |	. . . . . .     - O I + + I I I O F T V W V V F F O I + - - - ; ; ;             .
.   .   .   .   .   .   .   .   Child: 1 Assign: = of type int [line: 52]			   |	. . . . .     - W T T T O O V V T V O I I I O T V I + - - ; ; ;             . .
.   .   .   .   .   .   .   .   .   Child: 0 Id: Bi of type int [mem: Local loc: -4 size: 1] [li   |	. . . . . .   ; + + I O T T F T O I + + + I O T F O + - - ; ; ;           . . .
.   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 52]			   |	. . . . .   ; ; - - I T O I W I + + + + + + O W T V - - ; ; ;         . . . .
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: / of type int [line: 52]			   |	. . . . .     ; ; - + F + + - - - ; - - - - + I W O + ; ; ;         . . . . .
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 52]		   |	. . . . .     ; ; O I - - ; ; ; ; ; ; - - - + V T T ; ; ;       . . . . . .
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 52]		   |	. . . . .         ; ; ; ; ; ; ; ; ; ; ; ; - + O + - ; ;     . . . . . . . .
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 52]		   |	. . . . .                   ; ; ; ; ; ; ; - T - ;       . . . . . . . . .
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: A of type int [mem: Local loc:    |	. . . . .                         ; ; ; ; ;         . . . . . . . . . .
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: Bi of type int [mem: Local loc:   |	Bye.
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 256 of type int [line: 52]		   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: TOP of type int [mem: Global loc: 0 size: 1   <
.   .   .   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 53]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: A of type int [mem: Local loc: -5 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 53]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: - of type int [line: 53]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: NextA of type int [mem: Local loc: -6 s   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: NextBi of type int [mem: Local loc: -7    <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: LEFT of type int [mem: Global loc: -1 size:   <
.   .   .   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 54]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: NextA of type int [mem: Local loc: -6 size: 1]    <
.   .   .   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 54]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 54]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: A of type int [mem: Local loc: -5 size:   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: A of type int [mem: Local loc: -5 size:   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 256 of type int [line: 54]		   <
.   .   .   .   .   .   .   .   Sibling: 3 Assign: = of type int [line: 55]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: NextBi of type int [mem: Local loc: -7 size: 1]   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 55]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 55]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: Bi of type int [mem: Local loc: -4 size   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: Bi of type int [mem: Local loc: -4 size   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 256 of type int [line: 55]		   <
.   .   .   .   .   .   .   .   Sibling: 4 Assign: = of type int [line: 56]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: Len of type int [mem: Local loc: -3 size: 1] [l   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 56]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: NextA of type int [mem: Local loc: -6 size:   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: NextBi of type int [mem: Local loc: -7 size   <
.   .   .   .   .   .   .   .   Sibling: 5 Assign: ++ of type int [line: 57]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: iter of type int [mem: Global loc: -8 size: 1]    <
.   .   .   .   .   .   Sibling: 7 If [line: 59]						   <
.   .   .   .   .   .   .   Child: 0 Op: < of type bool [line: 59]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: iter of type int [mem: Global loc: -8 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Const 12 of type int [line: 59]			   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 59]		   <
.   .   .   .   .   .   .   .   Child: 1 Call: outputc of type void [line: 60]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type char [line: 60]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Globa   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: iter of type int [mem: Global loc: -8 size:   <
.   .   .   .   .   .   .   .   Sibling: 1 Call: outputc of type void [line: 61]		   <
.   .   .   .   .   .   .   .   .   Child: 0 Const ' ' of type char [line: 61]			   <
.   .   .   .   .   .   Sibling: 8 If [line: 63]						   <
.   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 63]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: iter of type int [mem: Global loc: -8 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Const 11 of type int [line: 63]			   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 64]		   <
.   .   .   .   .   .   .   .   Child: 1 Assign: = of type int [line: 65]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 65]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: JuliaVals of array of type int [mem: Parame   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 65]			   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: LEFT of type int [mem: Global loc: -1 size: 1]    <
.   .   .   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 66]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 66]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: JuliaVals of array of type int [mem: Parame   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 66]			   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: TOP of type int [mem: Global loc: 0 size: 1] [l   <
.   .   .   .   .   .   Sibling: 9 Assign: += of type int [line: 68]				   <
.   .   .   .   .   .   .   Child: 0 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 6   <
.   .   .   .   .   .   .   Child: 1 Id: XStep of type int [mem: Global loc: -4 size: 1] [line:    <
.   .   .   .   Sibling: 2 Call: outnl of type void [line: 70]					   <
.   .   .   .   Sibling: 3 Assign: += of type int [line: 71]					   <
.   .   .   .   .   Child: 0 Id: TOP of type int [mem: Global loc: 0 size: 1] [line: 71]	   <
.   .   .   .   .   Child: 1 Id: YStep of type int [mem: Global loc: -5 size: 1] [line: 71]	   <
Sibling: 11 Func: Julia returns type void [mem: Global loc: 0 size: -4] [line: 76]		   <
.   Child: 0 Parm: CA of type int [mem: Parameter loc: -2 size: 1] [line: 76]			   <
.   Sibling: 1 Parm: CBi of type int [mem: Parameter loc: -3 size: 1] [line: 76]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 77]					   <
.   .   Child: 1 While [line: 78]								   <
.   .   .   Child: 0 Op: < of type bool [line: 78]						   <
.   .   .   .   Child: 0 Id: TOP of type int [mem: Global loc: 0 size: 1] [line: 78]		   <
.   .   .   .   Child: 1 Id: YMax of type int [mem: Global loc: -7 size: 1] [line: 78]		   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 79]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 80]					   <
.   .   .   .   .   Child: 0 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 80]	   <
.   .   .   .   .   Child: 1 Op: chsign of type int [line: 80]					   <
.   .   .   .   .   .   Child: 0 Const 512 of type int [line: 80]				   <
.   .   .   .   Sibling: 1 While [line: 81]							   <
.   .   .   .   .   Child: 0 Op: < of type bool [line: 81]					   <
.   .   .   .   .   .   Child: 0 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 81]	   <
.   .   .   .   .   .   Child: 1 Id: XMax of type int [mem: Global loc: -6 size: 1] [line: 81]	   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -9] [line: 82]			   <
.   .   .   .   .   .   Child: 0 Var: Len of type int [mem: Local loc: -4 size: 1] [line: 83]	   <
.   .   .   .   .   .   Sibling: 1 Var: Bi of type int [mem: Local loc: -5 size: 1] [line: 84]	   <
.   .   .   .   .   .   Sibling: 2 Var: A of type int [mem: Local loc: -6 size: 1] [line: 84]	   <
.   .   .   .   .   .   Sibling: 3 Var: NextA of type int [mem: Local loc: -7 size: 1] [line: 84   <
.   .   .   .   .   .   Sibling: 4 Var: NextBi of type int [mem: Local loc: -8 size: 1] [line: 8   <
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 86]				   <
.   .   .   .   .   .   .   Child: 0 Id: A of type int [mem: Local loc: -6 size: 1] [line: 86]	   <
.   .   .   .   .   .   .   Child: 1 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 8   <
.   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 87]				   <
.   .   .   .   .   .   .   Child: 0 Id: Bi of type int [mem: Local loc: -5 size: 1] [line: 87]	   <
.   .   .   .   .   .   .   Child: 1 Id: TOP of type int [mem: Global loc: 0 size: 1] [line: 87]   <
.   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 88]				   <
.   .   .   .   .   .   .   Child: 0 Id: NextA of type int [mem: Local loc: -7 size: 1] [line: 8   <
.   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 88]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 88]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: A of type int [mem: Local loc: -6 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: A of type int [mem: Local loc: -6 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Const 256 of type int [line: 88]			   <
.   .   .   .   .   .   Sibling: 3 Assign: = of type int [line: 89]				   <
.   .   .   .   .   .   .   Child: 0 Id: NextBi of type int [mem: Local loc: -8 size: 1] [line:    <
.   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 89]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 89]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: Bi of type int [mem: Local loc: -5 size: 1] [li   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: Bi of type int [mem: Local loc: -5 size: 1] [li   <
.   .   .   .   .   .   .   .   Child: 1 Const 256 of type int [line: 89]			   <
.   .   .   .   .   .   Sibling: 4 Assign: = of type int [line: 90]				   <
.   .   .   .   .   .   .   Child: 0 Id: Len of type int [mem: Local loc: -4 size: 1] [line: 90]   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 90]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: NextA of type int [mem: Local loc: -7 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Id: NextBi of type int [mem: Local loc: -8 size: 1] [li   <
.   .   .   .   .   .   Sibling: 5 Assign: = of type int [line: 91]				   <
.   .   .   .   .   .   .   Child: 0 Id: iter of type int [mem: Global loc: -8 size: 1] [line: 9   <
.   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 91]				   <
.   .   .   .   .   .   Sibling: 6 While [line: 92]						   <
.   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 92]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: <= of type bool [line: 92]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: Len of type int [mem: Local loc: -4 size: 1] [l   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 1024 of type int [line: 92]			   <
.   .   .   .   .   .   .   .   Child: 1 Op: < of type bool [line: 92]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: iter of type int [mem: Global loc: -8 size: 1]    <
.   .   .   .   .   .   .   .   .   Child: 1 Const 11 of type int [line: 92]			   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -9] [line: 93]		   <
.   .   .   .   .   .   .   .   Child: 1 Assign: = of type int [line: 94]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: Bi of type int [mem: Local loc: -5 size: 1] [li   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 94]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: / of type int [line: 94]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 94]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 94]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 94]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: A of type int [mem: Local loc:    <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: Bi of type int [mem: Local loc:   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 256 of type int [line: 94]		   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: CBi of type int [mem: Parameter loc: -3 siz   <
.   .   .   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 95]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: A of type int [mem: Local loc: -6 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 95]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: - of type int [line: 95]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: NextA of type int [mem: Local loc: -7 s   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: NextBi of type int [mem: Local loc: -8    <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: CA of type int [mem: Parameter loc: -2 size   <
.   .   .   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 96]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: NextA of type int [mem: Local loc: -7 size: 1]    <
.   .   .   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 96]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 96]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: A of type int [mem: Local loc: -6 size:   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: A of type int [mem: Local loc: -6 size:   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 256 of type int [line: 96]		   <
.   .   .   .   .   .   .   .   Sibling: 3 Assign: = of type int [line: 97]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: NextBi of type int [mem: Local loc: -8 size: 1]   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 97]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 97]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: Bi of type int [mem: Local loc: -5 size   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: Bi of type int [mem: Local loc: -5 size   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 256 of type int [line: 97]		   <
.   .   .   .   .   .   .   .   Sibling: 4 Assign: = of type int [line: 98]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: Len of type int [mem: Local loc: -4 size: 1] [l   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 98]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: NextA of type int [mem: Local loc: -7 size:   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: NextBi of type int [mem: Local loc: -8 size   <
.   .   .   .   .   .   .   .   Sibling: 5 Assign: ++ of type int [line: 99]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: iter of type int [mem: Global loc: -8 size: 1]    <
.   .   .   .   .   .   Sibling: 7 If [line: 101]						   <
.   .   .   .   .   .   .   Child: 0 Op: < of type bool [line: 101]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: iter of type int [mem: Global loc: -8 size: 1] [lin   <
.   .   .   .   .   .   .   .   Child: 1 Const 10 of type int [line: 101]			   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -9] [line: 101]		   <
.   .   .   .   .   .   .   .   Child: 1 Call: outputc of type void [line: 102]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type char [line: 102]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Globa   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: iter of type int [mem: Global loc: -8 size:   <
.   .   .   .   .   .   .   .   Sibling: 1 Call: outputc of type void [line: 103]		   <
.   .   .   .   .   .   .   .   .   Child: 0 Const ' ' of type char [line: 103]			   <
.   .   .   .   .   .   .   Child: 2 Call: outputb of type void [line: 106]			   <
.   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 106]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: iter of type int [mem: Global loc: -8 size: 1]    <
.   .   .   .   .   .   .   .   .   Child: 1 Const 11 of type int [line: 106]			   <
.   .   .   .   .   .   Sibling: 8 Assign: += of type int [line: 107]				   <
.   .   .   .   .   .   .   Child: 0 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 1   <
.   .   .   .   .   .   .   Child: 1 Id: XStep of type int [mem: Global loc: -4 size: 1] [line:    <
.   .   .   .   Sibling: 2 Call: outnl of type void [line: 109]					   <
.   .   .   .   Sibling: 3 Assign: += of type int [line: 110]					   <
.   .   .   .   .   Child: 0 Id: TOP of type int [mem: Global loc: 0 size: 1] [line: 110]	   <
.   .   .   .   .   Child: 1 Id: YStep of type int [mem: Global loc: -5 size: 1] [line: 110]	   <
Sibling: 12 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 114]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 115]					   <
.   .   Child: 0 Var: JuliaVals of array of type int [mem: Local loc: -3 size: 3] [line: 116]	   <
.   .   Child: 1 Assign: = of type char [line: 118]						   <
.   .   .   Child: 0 Op: [ of type char [line: 118]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 0 of type int [line: 118]					   <
.   .   .   Child: 1 Const ' ' of type char [line: 118]						   <
.   .   Sibling: 1 Assign: = of type char [line: 119]						   <
.   .   .   Child: 0 Op: [ of type char [line: 119]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 1 of type int [line: 119]					   <
.   .   .   Child: 1 Const '.' of type char [line: 119]						   <
.   .   Sibling: 2 Assign: = of type char [line: 120]						   <
.   .   .   Child: 0 Op: [ of type char [line: 120]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 2 of type int [line: 120]					   <
.   .   .   Child: 1 Const ' ' of type char [line: 120]						   <
.   .   Sibling: 3 Assign: = of type char [line: 121]						   <
.   .   .   Child: 0 Op: [ of type char [line: 121]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 3 of type int [line: 121]					   <
.   .   .   Child: 1 Const ';' of type char [line: 121]						   <
.   .   Sibling: 4 Assign: = of type char [line: 122]						   <
.   .   .   Child: 0 Op: [ of type char [line: 122]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 4 of type int [line: 122]					   <
.   .   .   Child: 1 Const '-' of type char [line: 122]						   <
.   .   Sibling: 5 Assign: = of type char [line: 123]						   <
.   .   .   Child: 0 Op: [ of type char [line: 123]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 5 of type int [line: 123]					   <
.   .   .   Child: 1 Const '+' of type char [line: 123]						   <
.   .   Sibling: 6 Assign: = of type char [line: 124]						   <
.   .   .   Child: 0 Op: [ of type char [line: 124]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 6 of type int [line: 124]					   <
.   .   .   Child: 1 Const 'I' of type char [line: 124]						   <
.   .   Sibling: 7 Assign: = of type char [line: 125]						   <
.   .   .   Child: 0 Op: [ of type char [line: 125]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 7 of type int [line: 125]					   <
.   .   .   Child: 1 Const 'O' of type char [line: 125]						   <
.   .   Sibling: 8 Assign: = of type char [line: 126]						   <
.   .   .   Child: 0 Op: [ of type char [line: 126]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 8 of type int [line: 126]					   <
.   .   .   Child: 1 Const 'V' of type char [line: 126]						   <
.   .   Sibling: 9 Assign: = of type char [line: 127]						   <
.   .   .   Child: 0 Op: [ of type char [line: 127]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 9 of type int [line: 127]					   <
.   .   .   Child: 1 Const 'W' of type char [line: 127]						   <
.   .   Sibling: 10 Assign: = of type char [line: 128]						   <
.   .   .   Child: 0 Op: [ of type char [line: 128]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 10 of type int [line: 128]					   <
.   .   .   Child: 1 Const '#' of type char [line: 128]						   <
.   .   Sibling: 11 Assign: = of type char [line: 129]						   <
.   .   .   Child: 0 Op: [ of type char [line: 129]						   <
.   .   .   .   Child: 0 Id: grayScale of array of type char [mem: Global loc: -10 size: 13] [li   <
.   .   .   .   Child: 1 Const 11 of type int [line: 129]					   <
.   .   .   Child: 1 Const '@' of type char [line: 129]						   <
.   .   Sibling: 12 Assign: = of type int [line: 132]						   <
.   .   .   Child: 0 Id: TOP of type int [mem: Global loc: 0 size: 1] [line: 132]		   <
.   .   .   Child: 1 Op: chsign of type int [line: 132]						   <
.   .   .   .   Child: 0 Const 320 of type int [line: 132]					   <
.   .   Sibling: 13 Assign: = of type int [line: 133]						   <
.   .   .   Child: 0 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 133]		   <
.   .   .   Child: 1 Op: chsign of type int [line: 133]						   <
.   .   .   .   Child: 0 Const 512 of type int [line: 133]					   <
.   .   Sibling: 14 Assign: = of type int [line: 134]						   <
.   .   .   Child: 0 Id: HEIGHT of type int [mem: Global loc: -2 size: 1] [line: 134]		   <
.   .   .   Child: 1 Const 640 of type int [line: 134]						   <
.   .   Sibling: 15 Assign: = of type int [line: 135]						   <
.   .   .   Child: 0 Id: WIDTH of type int [mem: Global loc: -3 size: 1] [line: 135]		   <
.   .   .   Child: 1 Const 716 of type int [line: 135]						   <
.   .   Sibling: 16 Assign: = of type int [line: 136]						   <
.   .   .   Child: 0 Id: XStep of type int [mem: Global loc: -4 size: 1] [line: 136]		   <
.   .   .   Child: 1 Op: / of type int [line: 136]						   <
.   .   .   .   Child: 0 Id: WIDTH of type int [mem: Global loc: -3 size: 1] [line: 136]	   <
.   .   .   .   Child: 1 Const 40 of type int [line: 136]					   <
.   .   Sibling: 17 Assign: = of type int [line: 137]						   <
.   .   .   Child: 0 Id: YStep of type int [mem: Global loc: -5 size: 1] [line: 137]		   <
.   .   .   Child: 1 Op: / of type int [line: 137]						   <
.   .   .   .   Child: 0 Id: HEIGHT of type int [mem: Global loc: -2 size: 1] [line: 137]	   <
.   .   .   .   Child: 1 Const 36 of type int [line: 137]					   <
.   .   Sibling: 18 Assign: = of type int [line: 138]						   <
.   .   .   Child: 0 Id: XMax of type int [mem: Global loc: -6 size: 1] [line: 138]		   <
.   .   .   Child: 1 Op: + of type int [line: 138]						   <
.   .   .   .   Child: 0 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 138]		   <
.   .   .   .   Child: 1 Id: WIDTH of type int [mem: Global loc: -3 size: 1] [line: 138]	   <
.   .   Sibling: 19 Assign: = of type int [line: 139]						   <
.   .   .   Child: 0 Id: YMax of type int [mem: Global loc: -7 size: 1] [line: 139]		   <
.   .   .   Child: 1 Op: + of type int [line: 139]						   <
.   .   .   .   Child: 0 Id: TOP of type int [mem: Global loc: 0 size: 1] [line: 139]		   <
.   .   .   .   Child: 1 Id: HEIGHT of type int [mem: Global loc: -2 size: 1] [line: 139]	   <
.   .   Sibling: 20 Call: Mandelbrot of type void [line: 140]					   <
.   .   .   Child: 0 Id: JuliaVals of array of type int [mem: Local loc: -3 size: 3] [line: 140]   <
.   .   Sibling: 21 Call: outnl of type void [line: 142]					   <
.   .   Sibling: 22 Assign: = of type int [line: 144]						   <
.   .   .   Child: 0 Id: TOP of type int [mem: Global loc: 0 size: 1] [line: 144]		   <
.   .   .   Child: 1 Op: chsign of type int [line: 144]						   <
.   .   .   .   Child: 0 Const 320 of type int [line: 144]					   <
.   .   Sibling: 23 Assign: = of type int [line: 145]						   <
.   .   .   Child: 0 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 145]		   <
.   .   .   Child: 1 Op: chsign of type int [line: 145]						   <
.   .   .   .   Child: 0 Const 512 of type int [line: 145]					   <
.   .   Sibling: 24 Assign: = of type int [line: 146]						   <
.   .   .   Child: 0 Id: HEIGHT of type int [mem: Global loc: -2 size: 1] [line: 146]		   <
.   .   .   Child: 1 Const 640 of type int [line: 146]						   <
.   .   Sibling: 25 Assign: = of type int [line: 147]						   <
.   .   .   Child: 0 Id: WIDTH of type int [mem: Global loc: -3 size: 1] [line: 147]		   <
.   .   .   Child: 1 Const 716 of type int [line: 147]						   <
.   .   Sibling: 26 Assign: = of type int [line: 148]						   <
.   .   .   Child: 0 Id: XStep of type int [mem: Global loc: -4 size: 1] [line: 148]		   <
.   .   .   Child: 1 Op: / of type int [line: 148]						   <
.   .   .   .   Child: 0 Id: WIDTH of type int [mem: Global loc: -3 size: 1] [line: 148]	   <
.   .   .   .   Child: 1 Const 40 of type int [line: 148]					   <
.   .   Sibling: 27 Assign: = of type int [line: 149]						   <
.   .   .   Child: 0 Id: YStep of type int [mem: Global loc: -5 size: 1] [line: 149]		   <
.   .   .   Child: 1 Op: / of type int [line: 149]						   <
.   .   .   .   Child: 0 Id: HEIGHT of type int [mem: Global loc: -2 size: 1] [line: 149]	   <
.   .   .   .   Child: 1 Const 36 of type int [line: 149]					   <
.   .   Sibling: 28 Assign: = of type int [line: 150]						   <
.   .   .   Child: 0 Id: XMax of type int [mem: Global loc: -6 size: 1] [line: 150]		   <
.   .   .   Child: 1 Op: + of type int [line: 150]						   <
.   .   .   .   Child: 0 Id: LEFT of type int [mem: Global loc: -1 size: 1] [line: 150]		   <
.   .   .   .   Child: 1 Id: WIDTH of type int [mem: Global loc: -3 size: 1] [line: 150]	   <
.   .   Sibling: 29 Assign: = of type int [line: 151]						   <
.   .   .   Child: 0 Id: YMax of type int [mem: Global loc: -7 size: 1] [line: 151]		   <
.   .   .   Child: 1 Op: + of type int [line: 151]						   <
.   .   .   .   Child: 0 Id: TOP of type int [mem: Global loc: 0 size: 1] [line: 151]		   <
.   .   .   .   Child: 1 Id: HEIGHT of type int [mem: Global loc: -2 size: 1] [line: 151]	   <
.   .   Sibling: 30 Call: Julia of type void [line: 152]					   <
.   .   .   Child: 0 Op: [ of type int [line: 152]						   <
.   .   .   .   Child: 0 Id: JuliaVals of array of type int [mem: Local loc: -3 size: 3] [line:    <
.   .   .   .   Child: 1 Const 0 of type int [line: 152]					   <
.   .   .   Sibling: 1 Op: [ of type int [line: 152]						   <
.   .   .   .   Child: 0 Id: JuliaVals of array of type int [mem: Local loc: -3 size: 3] [line:    <
.   .   .   .   Child: 1 Const 1 of type int [line: 152]					   <
Offset for end of global space: -22								   <
Number of warnings: 2										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: fromroman.c-
-rwxrwx--- 1 root vboxsf  1362 May  2 09:18 fromroman.c-
-rwxrwx--- 1 root vboxsf   336 May  2 10:26 fromroman.expected
-rwxrwx--- 1 root vboxsf   150 May  2 09:22 fromroman.in
-rwxrwx--- 1 root vboxsf 13185 May  4  2021 fromroman.mem
-rwxrwx--- 1 root vboxsf 13222 May  4  2021 fromroman.out
fromroman.out ztmp4778.txt differ: byte 64, line 2
fromroman (Output DIFF)
WARNING(70): Variable 's' may be uninitialized when used here.						WARNING(70): Variable 's' may be uninitialized when used here.
Func: getstring returns type int [mem: Global loc: 0 size: -3] [line: 5]			   |	Loading file: fromroman.tm
.   Child: 0 Parm: s of array of type char [mem: Parameter loc: -2 size: 1] [line: 5]		   |	I
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 6]					   |	1
.   .   Child: 0 Var: i of type int [mem: Local loc: -3 size: 1] [line: 7]			   |	II
.   .   Child: 1 Assign: = of type int [line: 9]						   |	2
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 9]			   |	III
.   .   .   Child: 1 Op: chsign of type int [line: 9]						   |	3
.   .   .   .   Child: 0 Const 1 of type int [line: 9]						   |	IIII
.   .   Sibling: 1 While [line: 10]								   |	4
.   .   .   Child: 0 Const true of type bool [line: 10]						   |	IV
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 10]				   |	4
.   .   .   .   Child: 0 Var: c of type char [mem: Local loc: -4 size: 1] [line: 11]		   |	V
.   .   .   .   Child: 1 Assign: = of type char [line: 13]					   |	5
.   .   .   .   .   Child: 0 Id: c of type char [mem: Local loc: -4 size: 1] [line: 13]		   |	VV
.   .   .   .   .   Child: 1 Call: inputc of type char [line: 13]				   |	10
.   .   .   .   Sibling: 1 If [line: 14]							   |	VI
.   .   .   .   .   Child: 0 Op: < of type bool [line: 14]					   |	6
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 14]	   |	VII
.   .   .   .   .   .   Child: 1 Op: sizeof of type int [line: 14]				   |	7
.   .   .   .   .   .   .   Child: 0 Id: s of array of type char [mem: Parameter loc: -2 size: 1   |	VIIIII
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 14]			   |	10
.   .   .   .   .   .   Child: 1 Assign: ++ of type int [line: 15]				   |	IX
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 15]	   |	9
.   .   .   .   .   .   Sibling: 1 Assign: = of type char [line: 16]				   |	IM
.   .   .   .   .   .   .   Child: 0 Op: [ of type char [line: 16]				   |	999
.   .   .   .   .   .   .   .   Child: 0 Id: s of array of type char [mem: Parameter loc: -2 siz   |	MI
.   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1] [line: 1   |	1001
.   .   .   .   .   .   .   Child: 1 Id: c of type char [mem: Local loc: -4 size: 1] [line: 16]	   |	XX
.   .   .   .   Sibling: 2 If [line: 18]							   |	20
.   .   .   .   .   Child: 0 Op: == of type bool [line: 18]					   |	XL
.   .   .   .   .   .   Child: 0 Id: c of type char [mem: Local loc: -4 size: 1] [line: 18]	   |	40
.   .   .   .   .   .   Child: 1 Const '							   |	LX
' of type char [line: 18]									   |	60
.   .   .   .   .   Child: 1 Break [line: 18]							   |	XC
.   .   Sibling: 2 Return [line: 21]								   |	90
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 21]			   |	CX
Sibling: 1 Func: putstring returns type void [mem: Global loc: 0 size: -4] [line: 24]		   |	110
.   Child: 0 Parm: len of type int [mem: Parameter loc: -2 size: 1] [line: 24]			   |	MDCCCCLVII
.   Sibling: 1 Parm: s of array of type char [mem: Parameter loc: -3 size: 1] [line: 24]	   |	1957
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 25]					   |	MCDXCIX
.   .   Child: 0 Var: i of type int [mem: Local loc: -4 size: 1] [line: 26]			   |	1499
.   .   Child: 1 Assign: = of type int [line: 28]						   |	DIM
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 28]			   |	1499
.   .   .   Child: 1 Const 0 of type int [line: 28]						   |	DILL
.   .   Sibling: 1 While [line: 29]								   |	599
.   .   .   Child: 0 Op: < of type bool [line: 29]						   |	MILL
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 29]		   |	1099
.   .   .   .   Child: 1 Id: len of type int [mem: Parameter loc: -2 size: 1] [line: 29]	   |	MILD
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 29]				   |	1449
.   .   .   .   Child: 1 Call: outputc of type void [line: 30]					   |	CIVIC
.   .   .   .   .   Child: 0 Op: [ of type char [line: 30]					   |	203
.   .   .   .   .   .   Child: 0 Id: s of array of type char [mem: Parameter loc: -3 size: 1] [l   |	CIVIL
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 30]	   |	153
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 31]					   |	LIVID
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 31]		   |	553
Sibling: 2 Func: charvalue returns type int [mem: Global loc: 0 size: -3] [line: 35]		   |	MIMIC
.   Child: 0 Parm: c of type char [mem: Parameter loc: -2 size: 1] [line: 35]			   |	ERROR: TM Command V unknown.
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 36]					   |	Bye.
.   .   Child: 1 If [line: 37]									   <
.   .   .   Child: 0 Op: == of type bool [line: 37]						   <
.   .   .   .   Child: 0 Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 37]		   <
.   .   .   .   Child: 1 Const 'I' of type char [line: 37]					   <
.   .   .   Child: 1 Return [line: 37]								   <
.   .   .   .   Child: 0 Const 1 of type int [line: 37]						   <
.   .   .   Child: 2 If [line: 38]								   <
.   .   .   .   Child: 0 Op: == of type bool [line: 38]						   <
.   .   .   .   .   Child: 0 Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 38]	   <
.   .   .   .   .   Child: 1 Const 'V' of type char [line: 38]					   <
.   .   .   .   Child: 1 Return [line: 38]							   <
.   .   .   .   .   Child: 0 Const 5 of type int [line: 38]					   <
.   .   .   .   Child: 2 If [line: 39]								   <
.   .   .   .   .   Child: 0 Op: == of type bool [line: 39]					   <
.   .   .   .   .   .   Child: 0 Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 39]	   <
.   .   .   .   .   .   Child: 1 Const 'X' of type char [line: 39]				   <
.   .   .   .   .   Child: 1 Return [line: 39]							   <
.   .   .   .   .   .   Child: 0 Const 10 of type int [line: 39]				   <
.   .   .   .   .   Child: 2 If [line: 40]							   <
.   .   .   .   .   .   Child: 0 Op: == of type bool [line: 40]					   <
.   .   .   .   .   .   .   Child: 0 Id: c of type char [mem: Parameter loc: -2 size: 1] [line:    <
.   .   .   .   .   .   .   Child: 1 Const 'L' of type char [line: 40]				   <
.   .   .   .   .   .   Child: 1 Return [line: 40]						   <
.   .   .   .   .   .   .   Child: 0 Const 50 of type int [line: 40]				   <
.   .   .   .   .   .   Child: 2 If [line: 41]							   <
.   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 41]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: c of type char [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   .   .   Child: 1 Const 'C' of type char [line: 41]			   <
.   .   .   .   .   .   .   Child: 1 Return [line: 41]						   <
.   .   .   .   .   .   .   .   Child: 0 Const 100 of type int [line: 41]			   <
.   .   .   .   .   .   .   Child: 2 If [line: 42]						   <
.   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 42]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: c of type char [mem: Parameter loc: -2 size: 1]   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 'D' of type char [line: 42]			   <
.   .   .   .   .   .   .   .   Child: 1 Return [line: 42]					   <
.   .   .   .   .   .   .   .   .   Child: 0 Const 500 of type int [line: 42]			   <
.   .   .   .   .   .   .   .   Child: 2 If [line: 43]						   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 43]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type char [mem: Parameter loc: -2 size   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 'M' of type char [line: 43]		   <
.   .   .   .   .   .   .   .   .   Child: 1 Return [line: 43]					   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Const 1000 of type int [line: 43]		   <
.   .   .   .   .   .   .   .   .   Child: 2 Return [line: 44]					   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Const 0 of type int [line: 44]			   <
Sibling: 3 Func: roman2arabic returns type int [mem: Global loc: 0 size: -4] [line: 47]		   <
.   Child: 0 Parm: len of type int [mem: Parameter loc: -2 size: 1] [line: 47]			   <
.   Sibling: 1 Parm: roman of array of type char [mem: Parameter loc: -3 size: 1] [line: 47]	   <
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 48]					   <
.   .   Child: 0 Var: i of type int [mem: Local loc: -4 size: 1] [line: 49]			   <
.   .   Sibling: 1 Var: sum of type int [mem: Local loc: -5 size: 1] [line: 49]			   <
.   .   Child: 1 Assign: = of type int [line: 51]						   <
.   .   .   Child: 0 Id: sum of type int [mem: Local loc: -5 size: 1] [line: 51]		   <
.   .   .   Child: 1 Const 0 of type int [line: 51]						   <
.   .   Sibling: 1 Assign: = of type int [line: 52]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 52]			   <
.   .   .   Child: 1 Const 0 of type int [line: 52]						   <
.   .   Sibling: 2 While [line: 53]								   <
.   .   .   Child: 0 Op: < of type bool [line: 53]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 53]		   <
.   .   .   .   Child: 1 Op: - of type int [line: 53]						   <
.   .   .   .   .   Child: 0 Id: len of type int [mem: Parameter loc: -2 size: 1] [line: 53]	   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 53]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 53]				   <
.   .   .   .   Child: 1 If [line: 54]								   <
.   .   .   .   .   Child: 0 Op: < of type bool [line: 54]					   <
.   .   .   .   .   .   Child: 0 Call: charvalue of type int [line: 54]				   <
.   .   .   .   .   .   .   Child: 0 Op: [ of type char [line: 54]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: roman of array of type char [mem: Parameter loc: -3   <
.   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 5   <
.   .   .   .   .   .   Child: 1 Call: charvalue of type int [line: 54]				   <
.   .   .   .   .   .   .   Child: 0 Op: [ of type char [line: 54]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: roman of array of type char [mem: Parameter loc: -3   <
.   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 54]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 54]			   <
.   .   .   .   .   Child: 1 Assign: -= of type int [line: 54]					   <
.   .   .   .   .   .   Child: 0 Id: sum of type int [mem: Local loc: -5 size: 1] [line: 54]	   <
.   .   .   .   .   .   Child: 1 Call: charvalue of type int [line: 54]				   <
.   .   .   .   .   .   .   Child: 0 Op: [ of type char [line: 54]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: roman of array of type char [mem: Parameter loc: -3   <
.   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 5   <
.   .   .   .   .   Child: 2 Assign: += of type int [line: 55]					   <
.   .   .   .   .   .   Child: 0 Id: sum of type int [mem: Local loc: -5 size: 1] [line: 55]	   <
.   .   .   .   .   .   Child: 1 Call: charvalue of type int [line: 55]				   <
.   .   .   .   .   .   .   Child: 0 Op: [ of type char [line: 55]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: roman of array of type char [mem: Parameter loc: -3   <
.   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 5   <
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 56]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 56]		   <
.   .   Sibling: 3 Assign: += of type int [line: 58]						   <
.   .   .   Child: 0 Id: sum of type int [mem: Local loc: -5 size: 1] [line: 58]		   <
.   .   .   Child: 1 Call: charvalue of type int [line: 58]					   <
.   .   .   .   Child: 0 Op: [ of type char [line: 58]						   <
.   .   .   .   .   Child: 0 Id: roman of array of type char [mem: Parameter loc: -3 size: 1] [l   <
.   .   .   .   .   Child: 1 Op: - of type int [line: 58]					   <
.   .   .   .   .   .   Child: 0 Id: len of type int [mem: Parameter loc: -2 size: 1] [line: 58]   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 58]					   <
.   .   Sibling: 4 Return [line: 60]								   <
.   .   .   Child: 0 Id: sum of type int [mem: Local loc: -5 size: 1] [line: 60]		   <
Sibling: 4 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 64]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -54] [line: 65]					   <
.   .   Child: 0 Var: s of array of type char [mem: Local loc: -3 size: 51] [line: 66]		   <
.   .   Sibling: 1 Var: len of type int [mem: Local loc: -53 size: 1] [line: 67]		   <
.   .   Child: 1 While [line: 69]								   <
.   .   .   Child: 0 Const true of type bool [line: 69]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -54] [line: 69]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 70]					   <
.   .   .   .   .   Child: 0 Id: len of type int [mem: Local loc: -53 size: 1] [line: 70]	   <
.   .   .   .   .   Child: 1 Call: getstring of type int [line: 70]				   <
.   .   .   .   .   .   Child: 0 Id: s of array of type char [mem: Local loc: -3 size: 51] [line   <
.   .   .   .   Sibling: 1 If [line: 71]							   <
.   .   .   .   .   Child: 0 Op: == of type bool [line: 71]					   <
.   .   .   .   .   .   Child: 0 Op: [ of type char [line: 71]					   <
.   .   .   .   .   .   .   Child: 0 Id: s of array of type char [mem: Local loc: -3 size: 51] [   <
.   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 71]				   <
.   .   .   .   .   .   Child: 1 Const 'q' of type char [line: 71]				   <
.   .   .   .   .   Child: 1 Break [line: 71]							   <
.   .   .   .   Sibling: 2 Call: putstring of type void [line: 72]				   <
.   .   .   .   .   Child: 0 Id: len of type int [mem: Local loc: -53 size: 1] [line: 72]	   <
.   .   .   .   .   Sibling: 1 Id: s of array of type char [mem: Local loc: -3 size: 51] [line:    <
.   .   .   .   Sibling: 3 Call: outnl of type void [line: 73]					   <
.   .   .   .   Sibling: 4 Call: output of type void [line: 74]					   <
.   .   .   .   .   Child: 0 Call: roman2arabic of type int [line: 74]				   <
.   .   .   .   .   .   Child: 0 Id: len of type int [mem: Local loc: -53 size: 1] [line: 74]	   <
.   .   .   .   .   .   Sibling: 1 Id: s of array of type char [mem: Local loc: -3 size: 51] [li   <
.   .   .   .   Sibling: 5 Call: outnl of type void [line: 75]					   <
Offset for end of global space: 0								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: gcd.c-
-rwxrwx--- 1 root vboxsf  313 Apr 30 16:30 gcd.c-
-rwxrwx--- 1 root vboxsf  255 May  2 10:26 gcd.expected
-rwxrwx--- 1 root vboxsf   74 Dec  1  2014 gcd.in
-rwxrwx--- 1 root vboxsf 2758 May  4  2021 gcd.mem
-rwxrwx--- 1 root vboxsf 2795 May  4  2021 gcd.out
gcd.out ztmp4778.txt differ: byte 1, line 1
gcd (Output DIFF)
Func: gcd returns type int [mem: Global loc: 0 size: -4] [line: 4]				   |	Loading file: gcd.tm
.   Child: 0 Parm: u of type int [mem: Parameter loc: -2 size: 1] [line: 4]			   |	entered: 60
.   Sibling: 1 Parm: v of type int [mem: Parameter loc: -3 size: 1] [line: 4]			   |	entered: 210
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 5]					   |	30
.   .   Child: 1 If [line: 6]									   |	Loading file: gcd.tm
.   .   .   Child: 0 Op: == of type bool [line: 6]						   |	entered: 210
.   .   .   .   Child: 0 Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 6]		   |	entered: 60
.   .   .   .   Child: 1 Const 0 of type int [line: 6]						   |	30
.   .   .   Child: 1 Return [line: 7]								   |	Loading file: gcd.tm
.   .   .   .   Child: 0 Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 7]		   |	entered: 8192
.   .   .   Child: 2 Return [line: 9]								   |	entered: 496
.   .   .   .   Child: 0 Call: gcd of type int [line: 9]					   |	16
.   .   .   .   .   Child: 0 Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 9]	   |	Loading file: gcd.tm
.   .   .   .   .   Sibling: 1 Op: - of type int [line: 9]					   |	entered: 1234
.   .   .   .   .   .   Child: 0 Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 9]	   |	entered: 4321
.   .   .   .   .   .   Child: 1 Op: * of type int [line: 9]					   |	1
.   .   .   .   .   .   .   Child: 0 Op: / of type int [line: 9]				   |	Loading file: gcd.tm
.   .   .   .   .   .   .   .   Child: 0 Id: u of type int [mem: Parameter loc: -2 size: 1] [lin   |	entered: 216
.   .   .   .   .   .   .   .   Child: 1 Id: v of type int [mem: Parameter loc: -3 size: 1] [lin   |	entered: 666
.   .   .   .   .   .   .   Child: 1 Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 9   |	18
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 12]		   |	Bye.
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 13]					   <
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 14]			   <
.   .   Sibling: 1 Var: y of type int [mem: Local loc: -3 size: 1] [line: 14]			   <
.   .   Sibling: 2 Var: z of type int [mem: Local loc: -4 size: 1] [line: 14]			   <
.   .   Child: 1 Assign: = of type int [line: 16]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 16]			   <
.   .   .   Child: 1 Call: input of type int [line: 16]						   <
.   .   Sibling: 1 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 17]			   <
.   .   .   Child: 1 Call: input of type int [line: 17]						   <
.   .   Sibling: 2 Assign: = of type int [line: 18]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 18]			   <
.   .   .   Child: 1 Call: gcd of type int [line: 18]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]		   <
.   .   .   .   Sibling: 1 Id: y of type int [mem: Local loc: -3 size: 1] [line: 18]		   <
.   .   Sibling: 3 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 19]			   <
.   .   Sibling: 4 Call: outnl of type void [line: 20]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: gcdsm.c-
-rwxrwx--- 1 root vboxsf  156 Apr 30 16:30 gcdsm.c-
-rwxrwx--- 1 root vboxsf  265 May  2 10:26 gcdsm.expected
-rwxrwx--- 1 root vboxsf   74 Dec  1  2014 gcdsm.in
-rwxrwx--- 1 root vboxsf 2277 May  4  2021 gcdsm.mem
-rwxrwx--- 1 root vboxsf 2314 May  4  2021 gcdsm.out
gcdsm.out ztmp4778.txt differ: byte 1, line 1
gcdsm (Output DIFF)
Func: gcd returns type int [mem: Global loc: 0 size: -4] [line: 1]				   |	Loading file: gcdsm.tm
.   Child: 0 Parm: u of type int [mem: Parameter loc: -2 size: 1] [line: 1]			   |	entered: 60
.   Sibling: 1 Parm: v of type int [mem: Parameter loc: -3 size: 1] [line: 1]			   |	entered: 210
.   Child: 1 If [line: 1]									   |	30
.   .   Child: 0 Op: == of type bool [line: 1]							   |	Loading file: gcdsm.tm
.   .   .   Child: 0 Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 1]		   |	entered: 210
.   .   .   Child: 1 Const 0 of type int [line: 1]						   |	entered: 60
.   .   Child: 1 Return [line: 1]								   |	30
.   .   .   Child: 0 Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 1]		   |	Loading file: gcdsm.tm
.   .   Child: 2 Return [line: 1]								   |	entered: 8192
.   .   .   Child: 0 Call: gcd of type int [line: 1]						   |	entered: 496
.   .   .   .   Child: 0 Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 1]		   |	16
.   .   .   .   Sibling: 1 Op: - of type int [line: 1]						   |	Loading file: gcdsm.tm
.   .   .   .   .   Child: 0 Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 1]	   |	entered: 1234
.   .   .   .   .   Child: 1 Op: * of type int [line: 1]					   |	entered: 4321
.   .   .   .   .   .   Child: 0 Op: / of type int [line: 1]					   |	1
.   .   .   .   .   .   .   Child: 0 Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 1   |	Loading file: gcdsm.tm
.   .   .   .   .   .   .   Child: 1 Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 1   |	entered: 216
.   .   .   .   .   .   Child: 1 Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 1]	   |	entered: 666
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 3]			   |	18
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 4]					   |	Bye.
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 5]			   <
.   .   Sibling: 1 Var: y of type int [mem: Local loc: -3 size: 1] [line: 5]			   <
.   .   Child: 1 Assign: = of type int [line: 7]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]			   <
.   .   .   Child: 1 Call: input of type int [line: 7]						   <
.   .   Sibling: 1 Assign: = of type int [line: 8]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 8]			   <
.   .   .   Child: 1 Call: input of type int [line: 8]						   <
.   .   Sibling: 2 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Call: gcd of type int [line: 9]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 9]		   <
.   .   .   .   Sibling: 1 Id: y of type int [mem: Local loc: -3 size: 1] [line: 9]		   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: global.c-
-rwxrwx--- 1 root vboxsf  102 Apr 30 16:30 global.c-
-rwxrwx--- 1 root vboxsf   35 May  2 10:26 global.expected
-rwxrwx--- 1 root vboxsf 1021 May  4  2021 global.mem
-rwxrwx--- 1 root vboxsf 1058 May  4  2021 global.out
global.out ztmp4778.txt differ: byte 1, line 1
global (Output DIFF)
Var: x of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: global.tm
Sibling: 1 Var: b of type bool [mem: Global loc: -1 size: 1] [line: 2]				   |	666 T
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]			   |	Bye.
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 5]					   <
.   .   Child: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 6]			   <
.   .   .   Child: 1 Const 666 of type int [line: 6]						   <
.   .   Sibling: 1 Assign: = of type bool [line: 7]						   <
.   .   .   Child: 0 Id: b of type bool [mem: Global loc: -1 size: 1] [line: 7]			   <
.   .   .   Child: 1 Const true of type bool [line: 7]						   <
.   .   Sibling: 2 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 9]			   <
.   .   Sibling: 3 Call: outputb of type void [line: 10]					   <
.   .   .   Child: 0 Id: b of type bool [mem: Global loc: -1 size: 1] [line: 10]		   <
.   .   Sibling: 4 Return [line: 12]								   <
Offset for end of global space: -2								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: globalArray.c-
-rwxrwx--- 1 root vboxsf  115 Apr 30 16:30 globalArray.c-
-rwxrwx--- 1 root vboxsf   40 May  2 10:26 globalArray.expected
-rwxrwx--- 1 root vboxsf 1514 May  4  2021 globalArray.mem
-rwxrwx--- 1 root vboxsf 1551 May  4  2021 globalArray.out
globalArray.out ztmp4778.txt differ: byte 1, line 1
globalArray (Output DIFF)
Var: x of array of type int [mem: Global loc: -1 size: 4] [line: 1]				   |	Loading file: globalArray.tm
Sibling: 1 Var: b of array of type bool [mem: Global loc: -5 size: 5] [line: 2]			   |	666 T
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]			   |	Bye.
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 5]					   <
.   .   Child: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Op: [ of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Global loc: -1 size: 4] [line: 6]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 6]						   <
.   .   .   Child: 1 Const 666 of type int [line: 6]						   <
.   .   Sibling: 1 Assign: = of type bool [line: 7]						   <
.   .   .   Child: 0 Op: [ of type bool [line: 7]						   <
.   .   .   .   Child: 0 Id: b of array of type bool [mem: Global loc: -5 size: 5] [line: 7]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 7]						   <
.   .   .   Child: 1 Const true of type bool [line: 7]						   <
.   .   Sibling: 2 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Op: [ of type int [line: 9]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Global loc: -1 size: 4] [line: 9]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 9]						   <
.   .   Sibling: 3 Call: outputb of type void [line: 10]					   <
.   .   .   Child: 0 Op: [ of type bool [line: 10]						   <
.   .   .   .   Child: 0 Id: b of array of type bool [mem: Global loc: -5 size: 5] [line: 10]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 10]						   <
.   .   Sibling: 4 Return [line: 12]								   <
Offset for end of global space: -9								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: if.c-
-rwxrwx--- 1 root vboxsf  145 Apr 30 16:30 if.c-
-rwxrwx--- 1 root vboxsf   32 May  2 10:26 if.expected
-rwxrwx--- 1 root vboxsf 2069 May  4  2021 if.mem
-rwxrwx--- 1 root vboxsf 2106 May  4  2021 if.out
if.out ztmp4778.txt differ: byte 1, line 1
if (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: if.tm
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 2]					   |	666 23
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 3]			   |	Bye.
.   .   Sibling: 1 Var: j of type int [mem: Local loc: -3 size: 1] [line: 3]			   <
.   .   Child: 1 Assign: = of type int [line: 5]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 5]			   <
.   .   .   Child: 1 Assign: = of type int [line: 5]						   <
.   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 5]		   <
.   .   .   .   Child: 1 Const 23 of type int [line: 5]						   <
.   .   Sibling: 1 If [line: 6]									   <
.   .   .   Child: 0 Op: > of type bool [line: 6]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 6]		   <
.   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -3 size: 1] [line: 6]		   <
.   .   .   Child: 1 Assign: = of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 6]		   <
.   .   .   .   Child: 1 Const 666 of type int [line: 6]					   <
.   .   Sibling: 2 If [line: 7]									   <
.   .   .   Child: 0 Op: == of type bool [line: 7]						   <
.   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 7]		   <
.   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -2 size: 1] [line: 7]		   <
.   .   .   Child: 1 Assign: = of type int [line: 7]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 7]		   <
.   .   .   .   Child: 1 Const 666 of type int [line: 7]					   <
.   .   .   Child: 2 Assign: = of type int [line: 8]						   <
.   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 8]		   <
.   .   .   .   Child: 1 Const 777 of type int [line: 8]					   <
.   .   Sibling: 3 Call: output of type void [line: 10]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 10]			   <
.   .   Sibling: 4 Call: output of type void [line: 11]						   <
.   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 11]			   <
.   .   Sibling: 5 Call: outnl of type void [line: 12]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: inc.c-
-rwxrwx--- 1 root vboxsf  423 Apr 30 16:30 inc.c-
-rwxrwx--- 1 root vboxsf   74 May  2 10:26 inc.expected
-rwxrwx--- 1 root vboxsf 4936 May  4  2021 inc.mem
-rwxrwx--- 1 root vboxsf 4973 May  4  2021 inc.out
inc.out ztmp4778.txt differ: byte 1, line 1
inc (Output DIFF)
Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: inc.tm
Sibling: 1 Func: cat returns type void [mem: Global loc: 0 size: -3] [line: 3]			   |	667 667 778 778 889 889 1024 1025 667 1024 1025
.   Child: 0 Parm: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 3]		   |	Bye.
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 4]					   <
.   .   Child: 0 Var: z of array of type int [mem: Local loc: -4 size: 2] [line: 5]		   <
.   .   Sibling: 1 Var: w of type int [mem: Local loc: -5 size: 1] [line: 6]			   <
.   .   Child: 1 Call: output of type void [line: 8]						   <
.   .   .   Child: 0 Assign: ++ of type int [line: 8]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 8]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Parameter loc: -2 size: 1] [line:    <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 8]					   <
.   .   Sibling: 1 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Op: [ of type int [line: 9]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 9]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 9]						   <
.   .   Sibling: 2 Assign: = of type int [line: 11]						   <
.   .   .   Child: 0 Id: w of type int [mem: Local loc: -5 size: 1] [line: 11]			   <
.   .   .   Child: 1 Const 777 of type int [line: 11]						   <
.   .   Sibling: 3 Assign: = of type int [line: 12]						   <
.   .   .   Child: 0 Op: [ of type int [line: 12]						   <
.   .   .   .   Child: 0 Id: z of array of type int [mem: Local loc: -4 size: 2] [line: 12]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 12]						   <
.   .   .   Child: 1 Const 888 of type int [line: 12]						   <
.   .   Sibling: 4 Call: output of type void [line: 13]						   <
.   .   .   Child: 0 Assign: ++ of type int [line: 13]						   <
.   .   .   .   Child: 0 Id: w of type int [mem: Local loc: -5 size: 1] [line: 13]		   <
.   .   Sibling: 5 Call: output of type void [line: 14]						   <
.   .   .   Child: 0 Id: w of type int [mem: Local loc: -5 size: 1] [line: 14]			   <
.   .   Sibling: 6 Call: output of type void [line: 15]						   <
.   .   .   Child: 0 Assign: ++ of type int [line: 15]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 15]						   <
.   .   .   .   .   Child: 0 Id: z of array of type int [mem: Local loc: -4 size: 2] [line: 15]	   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 15]					   <
.   .   Sibling: 7 Call: output of type void [line: 16]						   <
.   .   .   Child: 0 Op: [ of type int [line: 16]						   <
.   .   .   .   Child: 0 Id: z of array of type int [mem: Local loc: -4 size: 2] [line: 16]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 16]						   <
.   .   Sibling: 8 Assign: = of type int [line: 18]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 18]			   <
.   .   .   Child: 1 Const 1023 of type int [line: 18]						   <
.   .   Sibling: 9 Assign: ++ of type int [line: 19]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 19]			   <
.   .   Sibling: 10 Call: output of type void [line: 20]					   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 20]			   <
.   .   Sibling: 11 Call: output of type void [line: 21]					   <
.   .   .   Child: 0 Assign: ++ of type int [line: 21]						   <
.   .   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 21]		   <
Sibling: 2 Func: main returns type int [mem: Global loc: 0 size: -2] [line: 24]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 25]					   <
.   .   Child: 0 Var: x of array of type int [mem: Local loc: -3 size: 2] [line: 26]		   <
.   .   Sibling: 1 Var: s of static type int [mem: LocalStatic loc: -1 size: 1] [line: 27]	   <
.   .   Child: 1 Assign: = of type int [line: 29]						   <
.   .   .   Child: 0 Op: [ of type int [line: 29]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 2] [line: 29]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 29]						   <
.   .   .   Child: 1 Const 666 of type int [line: 29]						   <
.   .   Sibling: 1 Call: cat of type void [line: 30]						   <
.   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 2] [line: 30]		   <
.   .   Sibling: 2 Call: output of type void [line: 31]						   <
.   .   .   Child: 0 Op: [ of type int [line: 31]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 2] [line: 31]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 31]						   <
.   .   Sibling: 3 Assign: = of type int [line: 33]						   <
.   .   .   Child: 0 Id: s of static type int [mem: LocalStatic loc: -1 size: 1] [line: 33]	   <
.   .   .   Child: 1 Const 1023 of type int [line: 33]						   <
.   .   Sibling: 4 Assign: ++ of type int [line: 34]						   <
.   .   .   Child: 0 Id: s of static type int [mem: LocalStatic loc: -1 size: 1] [line: 34]	   <
.   .   Sibling: 5 Call: output of type void [line: 35]						   <
.   .   .   Child: 0 Id: s of static type int [mem: LocalStatic loc: -1 size: 1] [line: 35]	   <
.   .   Sibling: 6 Call: output of type void [line: 36]						   <
.   .   .   Child: 0 Assign: ++ of type int [line: 36]						   <
.   .   .   .   Child: 0 Id: s of static type int [mem: LocalStatic loc: -1 size: 1] [line: 36]	   <
.   .   Sibling: 7 Return [line: 38]								   <
.   .   .   Child: 0 Const 0 of type int [line: 38]						   <
Offset for end of global space: -2								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: initbig.c-
-rwxrwx--- 1 root vboxsf  735 Apr 30 16:48 initbig.c-
-rwxrwx--- 1 root vboxsf  199 May  2 10:26 initbig.expected
-rwxrwx--- 1 root vboxsf 6188 May  4  2021 initbig.mem
-rwxrwx--- 1 root vboxsf 6225 May  4  2021 initbig.out
initbig.out ztmp4778.txt differ: byte 127, line 3
initbig (Output DIFF)
WARNING(31): Variable 'x' may be uninitialized when used here.						WARNING(31): Variable 'x' may be uninitialized when used here.
WARNING(46): Variable 'y' may be uninitialized when used here.						WARNING(46): Variable 'y' may be uninitialized when used here.
Var: ga of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: initbig.tm
.   Child: 0 Const 111 of type int [line: 1]							   |	111
Sibling: 1 Var: gb of type bool [mem: Global loc: -1 size: 1] [line: 2]				   |	T
.   Child: 0 Const true of type bool [line: 2]							   |	13
Sibling: 2 Var: gc of array of type char [mem: Global loc: -3 size: 14] [line: 3]		   |	666
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 5]			   |	a
.   Child: 1 Compound [mem: None loc: 0 size: -20] [line: 5]					   |	T
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 6]			   |	T
.   .   .   Child: 0 Const 666 of type int [line: 6]						   |	T
.   .   Sibling: 1 Var: y of type char [mem: Local loc: -3 size: 1] [line: 7]			   |	10
.   .   .   Child: 0 Const 'a' of type char [line: 7]						   |	26
.   .   Sibling: 2 Var: ba of type bool [mem: Local loc: -4 size: 1] [line: 8]			   |	-46
.   .   .   Child: 0 Const true of type bool [line: 8]						   |	666
.   .   Sibling: 3 Var: bb of type bool [mem: Local loc: -5 size: 1] [line: 8]			   |	15
.   .   .   Child: 0 Op: and of type bool [line: 8]						   |	20
.   .   .   .   Child: 0 Const true of type bool [line: 8]					   |	F
.   .   .   .   Child: 1 Op: not of type bool [line: 8]						   |	Bye.
.   .   .   .   .   Child: 0 Const false of type bool [line: 8]					   <
.   .   Sibling: 4 Var: bc of type bool [mem: Local loc: -6 size: 1] [line: 8]			   <
.   .   .   Child: 0 Op: > of type bool [line: 8]						   <
.   .   .   .   Child: 0 Const 5 of type int [line: 8]						   <
.   .   .   .   Child: 1 Const 4 of type int [line: 8]						   <
.   .   Sibling: 5 Var: x of array of type int [mem: Local loc: -8 size: 11] [line: 9]		   <
.   .   Sibling: 6 Var: k of type int [mem: Local loc: -18 size: 1] [line: 10]			   <
.   .   .   Child: 0 Op: + of type int [line: 10]						   <
.   .   .   .   Child: 0 Op: * of type int [line: 10]						   <
.   .   .   .   .   Child: 0 Const 4 of type int [line: 10]					   <
.   .   .   .   .   Child: 1 Const 5 of type int [line: 10]					   <
.   .   .   .   Child: 1 Op: * of type int [line: 10]						   <
.   .   .   .   .   Child: 0 Const 3 of type int [line: 10]					   <
.   .   .   .   .   Child: 1 Const 2 of type int [line: 10]					   <
.   .   Sibling: 7 Var: l of type int [mem: Local loc: -19 size: 1] [line: 10]			   <
.   .   .   Child: 0 Op: chsign of type int [line: 10]						   <
.   .   .   .   Child: 0 Const 46 of type int [line: 10]					   <
.   .   Sibling: 8 Var: sia of static type int [mem: LocalStatic loc: -16 size: 1] [line: 12]	   <
.   .   .   Child: 0 Const 666 of type int [line: 12]						   <
.   .   Sibling: 9 Var: sib of static array of type int [mem: LocalStatic loc: -18 size: 16] [li   <
.   .   Child: 1 Call: output of type void [line: 15]						   <
.   .   .   Child: 0 Id: ga of type int [mem: Global loc: 0 size: 1] [line: 15]			   <
.   .   Sibling: 1 Call: outnl of type void [line: 16]						   <
.   .   Sibling: 2 Call: outputb of type void [line: 17]					   <
.   .   .   Child: 0 Id: gb of type bool [mem: Global loc: -1 size: 1] [line: 17]		   <
.   .   Sibling: 3 Call: outnl of type void [line: 18]						   <
.   .   Sibling: 4 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Op: sizeof of type int [line: 19]						   <
.   .   .   .   Child: 0 Id: gc of array of type char [mem: Global loc: -3 size: 14] [line: 19]	   <
.   .   Sibling: 5 Call: outnl of type void [line: 20]						   <
.   .   Sibling: 6 Call: output of type void [line: 21]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 21]			   <
.   .   Sibling: 7 Call: outnl of type void [line: 22]						   <
.   .   Sibling: 8 Call: outputc of type void [line: 23]					   <
.   .   .   Child: 0 Id: y of type char [mem: Local loc: -3 size: 1] [line: 23]			   <
.   .   Sibling: 9 Call: outnl of type void [line: 24]						   <
.   .   Sibling: 10 Call: outputb of type void [line: 25]					   <
.   .   .   Child: 0 Id: ba of type bool [mem: Local loc: -4 size: 1] [line: 25]		   <
.   .   Sibling: 11 Call: outnl of type void [line: 26]						   <
.   .   Sibling: 12 Call: outputb of type void [line: 27]					   <
.   .   .   Child: 0 Id: bb of type bool [mem: Local loc: -5 size: 1] [line: 27]		   <
.   .   Sibling: 13 Call: outnl of type void [line: 28]						   <
.   .   Sibling: 14 Call: outputb of type void [line: 29]					   <
.   .   .   Child: 0 Id: bc of type bool [mem: Local loc: -6 size: 1] [line: 29]		   <
.   .   Sibling: 15 Call: outnl of type void [line: 30]						   <
.   .   Sibling: 16 Call: output of type void [line: 31]					   <
.   .   .   Child: 0 Op: sizeof of type int [line: 31]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -8 size: 11] [line: 31]	   <
.   .   Sibling: 17 Call: outnl of type void [line: 32]						   <
.   .   Sibling: 18 Call: output of type void [line: 33]					   <
.   .   .   Child: 0 Id: k of type int [mem: Local loc: -18 size: 1] [line: 33]			   <
.   .   Sibling: 19 Call: outnl of type void [line: 34]						   <
.   .   Sibling: 20 Call: output of type void [line: 35]					   <
.   .   .   Child: 0 Id: l of type int [mem: Local loc: -19 size: 1] [line: 35]			   <
.   .   Sibling: 21 Call: outnl of type void [line: 36]						   <
.   .   Sibling: 22 Call: output of type void [line: 37]					   <
.   .   .   Child: 0 Id: sia of static type int [mem: LocalStatic loc: -16 size: 1] [line: 37]	   <
.   .   Sibling: 23 Call: outnl of type void [line: 38]						   <
.   .   Sibling: 24 Call: output of type void [line: 39]					   <
.   .   .   Child: 0 Op: sizeof of type int [line: 39]						   <
.   .   .   .   Child: 0 Id: sib of static array of type int [mem: LocalStatic loc: -18 size: 16   <
.   .   Sibling: 25 Call: outnl of type void [line: 40]						   <
.   .   Sibling: 26 Compound [mem: None loc: 0 size: -42] [line: 42]				   <
.   .   .   Child: 0 Var: y of array of type int [mem: Local loc: -21 size: 21] [line: 43]	   <
.   .   .   Sibling: 1 Var: t of type bool [mem: Local loc: -41 size: 1] [line: 44]		   <
.   .   .   .   Child: 0 Op: not of type bool [line: 44]					   <
.   .   .   .   .   Child: 0 Const true of type bool [line: 44]					   <
.   .   .   Child: 1 Call: output of type void [line: 46]					   <
.   .   .   .   Child: 0 Op: sizeof of type int [line: 46]					   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -21 size: 21] [line: 46   <
.   .   .   Sibling: 1 Call: outnl of type void [line: 47]					   <
.   .   .   Sibling: 2 Call: outputb of type void [line: 48]					   <
.   .   .   .   Child: 0 Id: t of type bool [mem: Local loc: -41 size: 1] [line: 48]		   <
.   .   .   Sibling: 3 Call: outnl of type void [line: 49]					   <
Offset for end of global space: -33								   <
Number of warnings: 2										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: io.c-
-rwxrwx--- 1 root vboxsf  617 Apr 30 16:30 io.c-
-rwxrwx--- 1 root vboxsf  134 May  2 10:26 io.expected
-rwxrwx--- 1 root vboxsf   28 Dec  1  2014 io.in
-rwxrwx--- 1 root vboxsf 3884 May  4  2021 io.mem
-rwxrwx--- 1 root vboxsf 3921 May  4  2021 io.out
io.out ztmp4778.txt differ: byte 1, line 1
io (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]				   |	Loading file: io.tm
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 5]					   |	777 F
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 6]			   |	666
.   .   Sibling: 1 Var: b of type bool [mem: Local loc: -3 size: 1] [line: 7]			   |	-666 -666
.   .   Child: 1 Call: output of type void [line: 9]						   |	666 666
.   .   .   Child: 0 Const 777 of type int [line: 9]						   |	entered: 667
.   .   Sibling: 1 Call: outputb of type void [line: 10]					   |	667
.   .   .   Child: 0 Const false of type bool [line: 10]					   |	entered: T
.   .   Sibling: 2 Call: outnl of type void [line: 11]						   |	T
.   .   Sibling: 3 Assign: = of type int [line: 13]						   |	entered: 6
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 13]			   |	entered: 36
.   .   .   Child: 1 Const 666 of type int [line: 13]						   |	216
.   .   Sibling: 4 Call: output of type void [line: 14]						   |	entered: T
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 14]			   |	entered: F
.   .   Sibling: 5 Call: outnl of type void [line: 15]						   |	F
.   .   Sibling: 6 Call: output of type void [line: 17]						   |	Bye.
.   .   .   Child: 0 Op: chsign of type int [line: 17]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 17]		   <
.   .   Sibling: 7 Call: output of type void [line: 18]						   <
.   .   .   Child: 0 Op: * of type int [line: 18]						   <
.   .   .   .   Child: 0 Op: chsign of type int [line: 18]					   <
.   .   .   .   .   Child: 0 Const 1 of type int [line: 18]					   <
.   .   .   .   Child: 1 Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]		   <
.   .   Sibling: 8 Call: outnl of type void [line: 19]						   <
.   .   Sibling: 9 Call: output of type void [line: 21]						   <
.   .   .   Child: 0 Op: + of type int [line: 21]						   <
.   .   .   .   Child: 0 Op: + of type int [line: 21]						   <
.   .   .   .   .   Child: 0 Const 111 of type int [line: 21]					   <
.   .   .   .   .   Child: 1 Const 222 of type int [line: 21]					   <
.   .   .   .   Child: 1 Const 333 of type int [line: 21]					   <
.   .   Sibling: 10 Call: output of type void [line: 22]					   <
.   .   .   Child: 0 Op: * of type int [line: 22]						   <
.   .   .   .   Child: 0 Op: * of type int [line: 22]						   <
.   .   .   .   .   Child: 0 Const 3 of type int [line: 22]					   <
.   .   .   .   .   Child: 1 Const 6 of type int [line: 22]					   <
.   .   .   .   Child: 1 Op: + of type int [line: 22]						   <
.   .   .   .   .   Child: 0 Op: * of type int [line: 22]					   <
.   .   .   .   .   .   Child: 0 Const 6 of type int [line: 22]					   <
.   .   .   .   .   .   Child: 1 Const 6 of type int [line: 22]					   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 22]					   <
.   .   Sibling: 11 Call: outnl of type void [line: 23]						   <
.   .   Sibling: 12 Assign: = of type int [line: 25]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 25]			   <
.   .   .   Child: 1 Call: input of type int [line: 25]						   <
.   .   Sibling: 13 Call: output of type void [line: 26]					   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 26]			   <
.   .   Sibling: 14 Call: outnl of type void [line: 27]						   <
.   .   Sibling: 15 Assign: = of type bool [line: 29]						   <
.   .   .   Child: 0 Id: b of type bool [mem: Local loc: -3 size: 1] [line: 29]			   <
.   .   .   Child: 1 Call: inputb of type bool [line: 29]					   <
.   .   Sibling: 16 Call: outputb of type void [line: 30]					   <
.   .   .   Child: 0 Id: b of type bool [mem: Local loc: -3 size: 1] [line: 30]			   <
.   .   Sibling: 17 Call: outnl of type void [line: 31]						   <
.   .   Sibling: 18 Call: output of type void [line: 33]					   <
.   .   .   Child: 0 Op: * of type int [line: 33]						   <
.   .   .   .   Child: 0 Call: input of type int [line: 33]					   <
.   .   .   .   Child: 1 Call: input of type int [line: 33]					   <
.   .   Sibling: 19 Call: outnl of type void [line: 34]						   <
.   .   Sibling: 20 Call: outputb of type void [line: 36]					   <
.   .   .   Child: 0 Op: and of type bool [line: 36]						   <
.   .   .   .   Child: 0 Call: inputb of type bool [line: 36]					   <
.   .   .   .   Child: 1 Call: inputb of type bool [line: 36]					   <
.   .   Sibling: 21 Call: outnl of type void [line: 37]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: local.c-
-rwxrwx--- 1 root vboxsf  103 Apr 30 16:30 local.c-
-rwxrwx--- 1 root vboxsf   34 May  2 10:26 local.expected
-rwxrwx--- 1 root vboxsf 1031 May  4  2021 local.mem
-rwxrwx--- 1 root vboxsf 1068 May  4  2021 local.out
local.out ztmp4778.txt differ: byte 1, line 1
local (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: local.tm
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 2]					   |	666 T
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 3]			   |	Bye.
.   .   Sibling: 1 Var: b of type bool [mem: Local loc: -3 size: 1] [line: 4]			   <
.   .   Child: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]			   <
.   .   .   Child: 1 Const 666 of type int [line: 6]						   <
.   .   Sibling: 1 Assign: = of type bool [line: 7]						   <
.   .   .   Child: 0 Id: b of type bool [mem: Local loc: -3 size: 1] [line: 7]			   <
.   .   .   Child: 1 Const true of type bool [line: 7]						   <
.   .   Sibling: 2 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 9]			   <
.   .   Sibling: 3 Call: outputb of type void [line: 10]					   <
.   .   .   Child: 0 Id: b of type bool [mem: Local loc: -3 size: 1] [line: 10]			   <
.   .   Sibling: 4 Return [line: 12]								   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: localArray.c-
-rwxrwx--- 1 root vboxsf  128 Apr 30 16:30 localArray.c-
-rwxrwx--- 1 root vboxsf   39 May  2 10:26 localArray.expected
-rwxrwx--- 1 root vboxsf 1522 May  4  2021 localArray.mem
-rwxrwx--- 1 root vboxsf 1559 May  4  2021 localArray.out
localArray.out ztmp4778.txt differ: byte 1, line 1
localArray (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: localArray.tm
.   Child: 1 Compound [mem: None loc: 0 size: -11] [line: 2]					   |	666 T
.   .   Child: 0 Var: x of array of type int [mem: Local loc: -3 size: 4] [line: 3]		   |	Bye.
.   .   Sibling: 1 Var: b of array of type bool [mem: Local loc: -7 size: 5] [line: 4]		   <
.   .   Child: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Op: [ of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 4] [line: 6]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 6]						   <
.   .   .   Child: 1 Const 666 of type int [line: 6]						   <
.   .   Sibling: 1 Assign: = of type bool [line: 7]						   <
.   .   .   Child: 0 Op: [ of type bool [line: 7]						   <
.   .   .   .   Child: 0 Id: b of array of type bool [mem: Local loc: -7 size: 5] [line: 7]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 7]						   <
.   .   .   Child: 1 Const true of type bool [line: 7]						   <
.   .   Sibling: 2 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Op: [ of type int [line: 9]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 4] [line: 9]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 9]						   <
.   .   Sibling: 3 Call: outputb of type void [line: 10]					   <
.   .   .   Child: 0 Op: [ of type bool [line: 10]						   <
.   .   .   .   Child: 0 Id: b of array of type bool [mem: Local loc: -7 size: 5] [line: 10]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 10]						   <
.   .   Sibling: 4 Return [line: 12]								   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: logic.c-
-rwxrwx--- 1 root vboxsf  266 Apr 30 16:30 logic.c-
-rwxrwx--- 1 root vboxsf   44 May  2 10:26 logic.expected
-rwxrwx--- 1 root vboxsf 2136 May  4  2021 logic.mem
-rwxrwx--- 1 root vboxsf 2173 May  4  2021 logic.out
logic.out ztmp4778.txt differ: byte 1, line 1
logic (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: logic.tm
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 2]					   |	F F F T
.   .   Child: 1 Call: outputb of type void [line: 3]						   |	F T T T
.   .   .   Child: 0 Op: and of type bool [line: 3]						   |	Bye.
.   .   .   .   Child: 0 Const false of type bool [line: 3]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 3]					   <
.   .   Sibling: 1 Call: outputb of type void [line: 4]						   <
.   .   .   Child: 0 Op: and of type bool [line: 4]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 4]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 4]					   <
.   .   Sibling: 2 Call: outputb of type void [line: 5]						   <
.   .   .   Child: 0 Op: and of type bool [line: 5]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 5]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 5]					   <
.   .   Sibling: 3 Call: outputb of type void [line: 6]						   <
.   .   .   Child: 0 Op: and of type bool [line: 6]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 6]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 6]					   <
.   .   Sibling: 4 Call: outnl of type void [line: 7]						   <
.   .   Sibling: 5 Call: outputb of type void [line: 9]						   <
.   .   .   Child: 0 Op: or of type bool [line: 9]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 9]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 9]					   <
.   .   Sibling: 6 Call: outputb of type void [line: 10]					   <
.   .   .   Child: 0 Op: or of type bool [line: 10]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 10]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 10]					   <
.   .   Sibling: 7 Call: outputb of type void [line: 11]					   <
.   .   .   Child: 0 Op: or of type bool [line: 11]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 11]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 11]					   <
.   .   Sibling: 8 Call: outputb of type void [line: 12]					   <
.   .   .   Child: 0 Op: or of type bool [line: 12]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 12]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 12]					   <
.   .   Sibling: 9 Call: outnl of type void [line: 13]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: logic2.c-
-rwxrwx--- 1 root vboxsf  319 Apr 30 16:30 logic2.c-
-rwxrwx--- 1 root vboxsf   51 May  2 10:26 logic2.expected
-rwxrwx--- 1 root vboxsf 3123 May  4  2021 logic2.mem
-rwxrwx--- 1 root vboxsf 3160 May  4  2021 logic2.out
logic2.out ztmp4778.txt differ: byte 1, line 1
logic2 (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: logic2.tm
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 2]					   |	T F
.   .   Child: 0 Var: a of type bool [mem: Local loc: -2 size: 1] [line: 3]			   |	F T F
.   .   Sibling: 1 Var: b of type bool [mem: Local loc: -3 size: 1] [line: 3]			   |	F T F F T T
.   .   Child: 1 Call: outputb of type void [line: 5]						   |	Bye.
.   .   .   Child: 0 Assign: = of type bool [line: 5]						   <
.   .   .   .   Child: 0 Id: a of type bool [mem: Local loc: -2 size: 1] [line: 5]		   <
.   .   .   .   Child: 1 Const true of type bool [line: 5]					   <
.   .   Sibling: 1 Call: outputb of type void [line: 6]						   <
.   .   .   Child: 0 Assign: = of type bool [line: 6]						   <
.   .   .   .   Child: 0 Id: b of type bool [mem: Local loc: -3 size: 1] [line: 6]		   <
.   .   .   .   Child: 1 Const false of type bool [line: 6]					   <
.   .   Sibling: 2 Call: outnl of type void [line: 7]						   <
.   .   Sibling: 3 Call: outputb of type void [line: 9]						   <
.   .   .   Child: 0 Op: and of type bool [line: 9]						   <
.   .   .   .   Child: 0 Id: a of type bool [mem: Local loc: -2 size: 1] [line: 9]		   <
.   .   .   .   Child: 1 Id: b of type bool [mem: Local loc: -3 size: 1] [line: 9]		   <
.   .   Sibling: 4 Call: outputb of type void [line: 10]					   <
.   .   .   Child: 0 Op: or of type bool [line: 10]						   <
.   .   .   .   Child: 0 Id: a of type bool [mem: Local loc: -2 size: 1] [line: 10]		   <
.   .   .   .   Child: 1 Id: b of type bool [mem: Local loc: -3 size: 1] [line: 10]		   <
.   .   Sibling: 5 Call: outputb of type void [line: 11]					   <
.   .   .   Child: 0 Op: not of type bool [line: 11]						   <
.   .   .   .   Child: 0 Id: a of type bool [mem: Local loc: -2 size: 1] [line: 11]		   <
.   .   Sibling: 6 Call: outnl of type void [line: 12]						   <
.   .   Sibling: 7 Call: outputb of type void [line: 14]					   <
.   .   .   Child: 0 Op: > of type bool [line: 14]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 14]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 14]					   <
.   .   Sibling: 8 Call: outputb of type void [line: 15]					   <
.   .   .   Child: 0 Op: < of type bool [line: 15]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 15]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 15]					   <
.   .   Sibling: 9 Call: outputb of type void [line: 16]					   <
.   .   .   Child: 0 Op: == of type bool [line: 16]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 16]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 16]					   <
.   .   Sibling: 10 Call: outputb of type void [line: 17]					   <
.   .   .   Child: 0 Op: >= of type bool [line: 17]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 17]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 17]					   <
.   .   Sibling: 11 Call: outputb of type void [line: 18]					   <
.   .   .   Child: 0 Op: <= of type bool [line: 18]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 18]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 18]					   <
.   .   Sibling: 12 Call: outputb of type void [line: 19]					   <
.   .   .   Child: 0 Op: != of type bool [line: 19]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 19]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 19]					   <
.   .   Sibling: 13 Call: outnl of type void [line: 20]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: main2.c-
-rwxrwx--- 1 root vboxsf 101 Apr 30 16:30 main2.c-
-rwxrwx--- 1 root vboxsf  58 May  2 10:26 main2.expected
-rwxrwx--- 1 root vboxsf  20 Dec  1  2014 main2.in
-rwxrwx--- 1 root vboxsf 620 May  4  2021 main2.mem
-rwxrwx--- 1 root vboxsf 657 May  4  2021 main2.out
main2.out ztmp4778.txt differ: byte 1, line 1
main2 (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: main2.tm
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 2]					   |	666 T
.   .   Child: 1 Call: output of type void [line: 3]						   |	entered: 666
.   .   .   Child: 0 Const 666 of type int [line: 3]						   |	entered: T
.   .   Sibling: 1 Call: outputb of type void [line: 4]						   |	Bye.
.   .   .   Child: 0 Const true of type bool [line: 4]						   <
.   .   Sibling: 2 Call: outnl of type void [line: 5]						   <
.   .   Sibling: 3 Call: input of type int [line: 6]						   <
.   .   Sibling: 4 Call: inputb of type bool [line: 7]						   <
.   .   Sibling: 5 Return [line: 9]								   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: mastermind.c-
-rwxrwx--- 1 root vboxsf 4008 Apr 30 16:30 mastermind.c-
-rwxrwx--- 1 root vboxsf 1091 May  2 10:26 mastermind.expected
-rwxrwx--- 1 root vboxsf  252 Dec  1  2014 mastermind.in
-rwxrwx--- 1 root vboxsf    0 May  4  2021 mastermind.mem
-rwxrwx--- 1 root vboxsf   37 May  4  2021 mastermind.out
mastermind.out ztmp4778.txt differ: byte 1, line 1
mastermind (Output DIFF)
------------------------------------								   |	Loading file: mastermind.tm
												   >	entered: 333331
												   >	1
												   >	entered: 1
												   >	entered: 2
												   >	entered: 3
												   >	entered: 4
												   >	1 1
												   >	2
												   >	entered: 2
												   >	entered: 3
												   >	entered: 4
												   >	entered: 5
												   >	2 0
												   >	3
												   >	entered: 3
												   >	entered: 4
												   >	entered: 5
												   >	entered: 6
												   >	1 0
												   >	4
												   >	entered: 7
												   >	entered: 8
												   >	entered: 9
												   >	entered: 0
												   >	2 0
												   >	5
												   >	entered: 1
												   >	entered: 2
												   >	entered: 3
												   >	entered: 4
												   >	1 1
												   >	6
												   >	entered: 2
												   >	entered: 3
												   >	entered: 4
												   >	entered: 5
												   >	2 0
												   >	7
												   >	entered: 3
												   >	entered: 4
												   >	entered: 5
												   >	entered: 6
												   >	1 0
												   >	8
												   >	entered: 7
												   >	entered: 8
												   >	entered: 9
												   >	entered: 0
												   >	2 0
												   >	9
												   >	entered: 1
												   >	entered: 2
												   >	entered: 3
												   >	entered: 4
												   >	1 1
												   >	10
												   >	entered: 2
												   >	entered: 3
												   >	entered: 4
												   >	entered: 5
												   >	2 0
												   >	11
												   >	entered: 3
												   >	entered: 4
												   >	entered: 5
												   >	entered: 6
												   >	1 0
												   >	12
												   >	entered: 7
												   >	entered: 8
												   >	entered: 9
												   >	entered: 0
												   >	2 0
												   >	13
												   >	entered: 1
												   >	entered: 2
												   >	entered: 3
												   >	entered: 4
												   >	1 1
												   >	14
												   >	entered: 2
												   >	entered: 3
												   >	entered: 4
												   >	entered: 5
												   >	2 0
												   >	15
												   >	entered: 3
												   >	entered: 4
												   >	entered: 5
												   >	entered: 6
												   >	1 0
												   >	16
												   >	entered: 7
												   >	entered: 8
												   >	entered: 9
												   >	entered: 0
												   >	2 0
												   >	17
												   >	entered: 1
												   >	entered: 2
												   >	entered: 3
												   >	entered: 4
												   >	1 1
												   >	18
												   >	entered: 2
												   >	entered: 3
												   >	entered: 4
												   >	entered: 5
												   >	2 0
												   >	19
												   >	entered: 3
												   >	entered: 4
												   >	entered: 5
												   >	entered: 6
												   >	1 0
												   >	20
												   >	entered: 7
												   >	entered: 8
												   >	entered: 9
												   >	entered: 0
												   >	2 0
												   >	21
												   >	F F F F F F F F F F
												   >	0
												   >	9
												   >	3
												   >	2
												   >	Bye.
====================================
FILE: miller.c-
-rwxrwx--- 1 root vboxsf  1606 Apr 30 16:30 miller.c-
-rwxrwx--- 1 root vboxsf   108 May  2 10:26 miller.expected
-rwxrwx--- 1 root vboxsf 25744 May  4  2021 miller.mem
-rwxrwx--- 1 root vboxsf 25781 May  4  2021 miller.out
miller.out ztmp4778.txt differ: byte 1, line 1
miller (Output DIFF)
Var: gl of array of type int [mem: Global loc: -1 size: 11] [line: 1]				   |	Loading file: miller.tm
Sibling: 1 Var: glx of type int [mem: Global loc: -11 size: 1] [line: 2]			   |	100
Sibling: 2 Func: showIntArray returns type void [mem: Global loc: 0 size: -4] [line: 4]		   |	50
.   Child: 0 Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 4]		   |	100
.   Sibling: 1 Parm: size of type int [mem: Parameter loc: -3 size: 1] [line: 4]		   |	12
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 5]					   |	66
.   .   Child: 0 Var: i of type int [mem: Local loc: -4 size: 1] [line: 6]			   |	25
.   .   Child: 1 Assign: = of type int [line: 7]						   |	777
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 7]			   |	123
.   .   .   Child: 1 Const 0 of type int [line: 7]						   |	888
.   .   Sibling: 1 While [line: 8]								   |	777
.   .   .   Child: 0 Op: < of type bool [line: 8]						   |	3
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 8]		   |	987
.   .   .   .   Child: 1 Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 8]	   |	774
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 8]				   |	987
.   .   .   .   Child: 1 Call: output of type void [line: 9]					   |	9
.   .   .   .   .   Child: 0 Op: [ of type int [line: 9]					   |	66
.   .   .   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [li   |	77
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 9]	   |	10 9 8 7 6 5 4 3 2 1
.   .   .   .   Sibling: 1 Assign: = of type int [line: 10]					   |	Bye.
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 10]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 10]					   <
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 10]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 10]					   <
.   .   Sibling: 2 Call: outnl of type void [line: 12]						   <
Sibling: 3 Func: dog returns type void [mem: Global loc: 0 size: -4] [line: 15]			   <
.   Child: 0 Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 15]			   <
.   Sibling: 1 Parm: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 15]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 16]					   <
.   .   Child: 1 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 17]		   <
.   .   .   Child: 1 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 17]		   <
.   .   Sibling: 1 Assign: = of type int [line: 18]						   <
.   .   .   Child: 0 Op: [ of type int [line: 18]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 18]	   <
.   .   .   .   Child: 1 Const 7 of type int [line: 18]						   <
.   .   .   Child: 1 Op: [ of type int [line: 18]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 18]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 18]						   <
.   .   Sibling: 2 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 19]		   <
.   .   Sibling: 3 Call: outnl of type void [line: 20]						   <
.   .   Sibling: 4 Call: output of type void [line: 21]						   <
.   .   .   Child: 0 Op: [ of type int [line: 21]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 21]	   <
.   .   .   .   Child: 1 Const 7 of type int [line: 21]						   <
.   .   Sibling: 5 Call: outnl of type void [line: 22]						   <
Sibling: 4 Func: getnxtindex returns type int [mem: Global loc: 0 size: -3] [line: 25]		   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 25]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 26]					   <
.   .   Child: 1 Return [line: 27]								   <
.   .   .   Child: 0 Op: + of type int [line: 27]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 27]		   <
.   .   .   .   Child: 1 Const 1 of type int [line: 27]						   <
Sibling: 5 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 30]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -58] [line: 31]					   <
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 32]			   <
.   .   Sibling: 1 Var: c of array of type int [mem: Local loc: -4 size: 11] [line: 33]		   <
.   .   Sibling: 2 Var: d of array of type int [mem: Local loc: -15 size: 11] [line: 34]	   <
.   .   Sibling: 3 Var: y of array of type int [mem: Local loc: -26 size: 11] [line: 35]	   <
.   .   Sibling: 4 Var: z of array of type int [mem: Local loc: -37 size: 11] [line: 36]	   <
.   .   Sibling: 5 Var: w of array of type int [mem: Local loc: -48 size: 11] [line: 37]	   <
.   .   Child: 1 Assign: = of type int [line: 39]						   <
.   .   .   Child: 0 Op: [ of type int [line: 39]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 39]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 39]						   <
.   .   .   Child: 1 Const 3 of type int [line: 39]						   <
.   .   Sibling: 1 Assign: = of type int [line: 40]						   <
.   .   .   Child: 0 Op: [ of type int [line: 40]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 40]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 40]						   <
.   .   .   Child: 1 Const 5 of type int [line: 40]						   <
.   .   Sibling: 2 Assign: = of type int [line: 41]						   <
.   .   .   Child: 0 Op: [ of type int [line: 41]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 41]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 41]						   <
.   .   .   Child: 1 Const 9 of type int [line: 41]						   <
.   .   Sibling: 3 Assign: = of type int [line: 42]						   <
.   .   .   Child: 0 Op: [ of type int [line: 42]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 42]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 42]						   <
.   .   .   Child: 1 Const 100 of type int [line: 42]						   <
.   .   Sibling: 4 Assign: = of type int [line: 43]						   <
.   .   .   Child: 0 Op: [ of type int [line: 43]						   <
.   .   .   .   Child: 0 Id: w of array of type int [mem: Local loc: -48 size: 11] [line: 43]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 43]						   <
.   .   .   Child: 1 Const 50 of type int [line: 43]						   <
.   .   Sibling: 5 Call: dog of type void [line: 44]						   <
.   .   .   Child: 0 Op: [ of type int [line: 44]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 44]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 44]						   <
.   .   .   Sibling: 1 Id: w of array of type int [mem: Local loc: -48 size: 11] [line: 44]	   <
.   .   Sibling: 6 Assign: = of type int [line: 46]						   <
.   .   .   Child: 0 Op: [ of type int [line: 46]						   <
.   .   .   .   Child: 0 Id: w of array of type int [mem: Local loc: -48 size: 11] [line: 46]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 46]						   <
.   .   .   Child: 1 Const 12 of type int [line: 46]						   <
.   .   Sibling: 7 Call: dog of type void [line: 47]						   <
.   .   .   Child: 0 Op: [ of type int [line: 47]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 47]	   <
.   .   .   .   Child: 1 Op: [ of type int [line: 47]						   <
.   .   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 47   <
.   .   .   .   .   Child: 1 Const 3 of type int [line: 47]					   <
.   .   .   Sibling: 1 Id: w of array of type int [mem: Local loc: -48 size: 11] [line: 47]	   <
.   .   Sibling: 8 Assign: = of type int [line: 49]						   <
.   .   .   Child: 0 Op: [ of type int [line: 49]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 49]	   <
.   .   .   .   Child: 1 Const 8 of type int [line: 49]						   <
.   .   .   Child: 1 Const 4 of type int [line: 49]						   <
.   .   Sibling: 9 Assign: = of type int [line: 50]						   <
.   .   .   Child: 0 Op: [ of type int [line: 50]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 50]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 50]						   <
.   .   .   Child: 1 Const 25 of type int [line: 50]						   <
.   .   Sibling: 10 Assign: = of type int [line: 51]						   <
.   .   .   Child: 0 Op: [ of type int [line: 51]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 51]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 51]						   <
.   .   .   Child: 1 Const 66 of type int [line: 51]						   <
.   .   Sibling: 11 Call: dog of type void [line: 52]						   <
.   .   .   Child: 0 Op: [ of type int [line: 52]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 52]	   <
.   .   .   .   Child: 1 Op: [ of type int [line: 52]						   <
.   .   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 52   <
.   .   .   .   .   Child: 1 Op: [ of type int [line: 52]					   <
.   .   .   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Const 8 of type int [line: 52]					   <
.   .   .   Sibling: 1 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 52]	   <
.   .   Sibling: 12 Assign: = of type int [line: 54]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 54]			   <
.   .   .   Child: 1 Const 777 of type int [line: 54]						   <
.   .   Sibling: 13 Assign: = of type int [line: 55]						   <
.   .   .   Child: 0 Op: [ of type int [line: 55]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 55]	   <
.   .   .   .   Child: 1 Const 7 of type int [line: 55]						   <
.   .   .   Child: 1 Const 123 of type int [line: 55]						   <
.   .   Sibling: 14 Assign: = of type int [line: 56]						   <
.   .   .   Child: 0 Op: [ of type int [line: 56]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 56]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 56]						   <
.   .   .   Child: 1 Op: [ of type int [line: 56]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 56]	   <
.   .   .   .   Child: 1 Const 7 of type int [line: 56]						   <
.   .   Sibling: 15 Call: dog of type void [line: 57]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 57]			   <
.   .   .   Sibling: 1 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 57]	   <
.   .   Sibling: 16 Assign: = of type int [line: 59]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 59]			   <
.   .   .   Child: 1 Id: x of type int [mem: Local loc: -2 size: 1] [line: 59]			   <
.   .   Sibling: 17 Assign: = of type int [line: 61]						   <
.   .   .   Child: 0 Op: [ of type int [line: 61]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 61]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 61]						   <
.   .   .   Child: 1 Id: x of type int [mem: Local loc: -2 size: 1] [line: 61]			   <
.   .   Sibling: 18 Assign: = of type int [line: 62]						   <
.   .   .   Child: 0 Id: glx of type int [mem: Global loc: -11 size: 1] [line: 62]		   <
.   .   .   Child: 1 Const 888 of type int [line: 62]						   <
.   .   Sibling: 19 Assign: = of type int [line: 63]						   <
.   .   .   Child: 0 Op: [ of type int [line: 63]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 63]	   <
.   .   .   .   Child: 1 Const 7 of type int [line: 63]						   <
.   .   .   Child: 1 Id: glx of type int [mem: Global loc: -11 size: 1] [line: 63]		   <
.   .   Sibling: 20 Assign: = of type int [line: 64]						   <
.   .   .   Child: 0 Op: [ of type int [line: 64]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 64]	   <
.   .   .   .   Child: 1 Const 6 of type int [line: 64]						   <
.   .   .   Child: 1 Const 2 of type int [line: 64]						   <
.   .   Sibling: 21 Assign: = of type int [line: 65]						   <
.   .   .   Child: 0 Op: [ of type int [line: 65]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 65]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 65]						   <
.   .   .   Child: 1 Const 4 of type int [line: 65]						   <
.   .   Sibling: 22 Assign: = of type int [line: 66]						   <
.   .   .   Child: 0 Op: [ of type int [line: 66]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 66]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 66]						   <
.   .   .   Child: 1 Const 7 of type int [line: 66]						   <
.   .   Sibling: 23 Assign: = of type int [line: 67]						   <
.   .   .   Child: 0 Op: [ of type int [line: 67]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 67]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 67]						   <
.   .   .   Child: 1 Op: [ of type int [line: 67]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 67]	   <
.   .   .   .   Child: 1 Op: [ of type int [line: 67]						   <
.   .   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 67   <
.   .   .   .   .   Child: 1 Op: [ of type int [line: 67]					   <
.   .   .   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Op: [ of type int [line: 67]					   <
.   .   .   .   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [   <
.   .   .   .   .   .   .   Child: 1 Const 6 of type int [line: 67]				   <
.   .   Sibling: 24 Call: dog of type void [line: 68]						   <
.   .   .   Child: 0 Op: [ of type int [line: 68]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 68]	   <
.   .   .   .   Child: 1 Op: [ of type int [line: 68]						   <
.   .   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 68   <
.   .   .   .   .   Child: 1 Op: [ of type int [line: 68]					   <
.   .   .   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Const 8 of type int [line: 68]					   <
.   .   .   Sibling: 1 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 68]	   <
.   .   Sibling: 25 Assign: = of type int [line: 70]						   <
.   .   .   Child: 0 Op: [ of type int [line: 70]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 70]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 70]						   <
.   .   .   Child: 1 Op: [ of type int [line: 70]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 70]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 70]						   <
.   .   Sibling: 26 Assign: = of type int [line: 71]						   <
.   .   .   Child: 0 Op: [ of type int [line: 71]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 71]	   <
.   .   .   .   Child: 1 Const 7 of type int [line: 71]						   <
.   .   .   Child: 1 Op: [ of type int [line: 71]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 71]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 71]						   <
.   .   Sibling: 27 Assign: = of type int [line: 72]						   <
.   .   .   Child: 0 Op: [ of type int [line: 72]						   <
.   .   .   .   Child: 0 Id: gl of array of type int [mem: Global loc: -1 size: 11] [line: 72]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 72]						   <
.   .   .   Child: 1 Const 3 of type int [line: 72]						   <
.   .   Sibling: 28 Assign: = of type int [line: 73]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 73]			   <
.   .   .   Child: 1 Op: [ of type int [line: 73]						   <
.   .   .   .   Child: 0 Id: gl of array of type int [mem: Global loc: -1 size: 11] [line: 73]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 73]						   <
.   .   Sibling: 29 Assign: = of type int [line: 74]						   <
.   .   .   Child: 0 Op: [ of type int [line: 74]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 74]	   <
.   .   .   .   Child: 1 Const 7 of type int [line: 74]						   <
.   .   .   Child: 1 Op: [ of type int [line: 74]						   <
.   .   .   .   Child: 0 Id: gl of array of type int [mem: Global loc: -1 size: 11] [line: 74]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 74]						   <
.   .   Sibling: 30 Assign: = of type int [line: 75]						   <
.   .   .   Child: 0 Op: [ of type int [line: 75]						   <
.   .   .   .   Child: 0 Id: gl of array of type int [mem: Global loc: -1 size: 11] [line: 75]	   <
.   .   .   .   Child: 1 Const 7 of type int [line: 75]						   <
.   .   .   Child: 1 Op: [ of type int [line: 75]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 75]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 75]						   <
.   .   Sibling: 31 Assign: = of type int [line: 76]						   <
.   .   .   Child: 0 Op: [ of type int [line: 76]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 76]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 76]						   <
.   .   .   Child: 1 Const 5 of type int [line: 76]						   <
.   .   Sibling: 32 Assign: = of type int [line: 77]						   <
.   .   .   Child: 0 Op: [ of type int [line: 77]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 77]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 77]						   <
.   .   .   Child: 1 Const 3 of type int [line: 77]						   <
.   .   Sibling: 33 Assign: = of type int [line: 78]						   <
.   .   .   Child: 0 Op: [ of type int [line: 78]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 78]	   <
.   .   .   .   Child: 1 Const 8 of type int [line: 78]						   <
.   .   .   Child: 1 Op: [ of type int [line: 78]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 78]	   <
.   .   .   .   Child: 1 Op: [ of type int [line: 78]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 78   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 78]					   <
.   .   Sibling: 34 Call: output of type void [line: 79]					   <
.   .   .   Child: 0 Op: [ of type int [line: 79]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 79]	   <
.   .   .   .   Child: 1 Const 8 of type int [line: 79]						   <
.   .   Sibling: 35 Call: outnl of type void [line: 79]						   <
.   .   Sibling: 36 Assign: = of type int [line: 80]						   <
.   .   .   Child: 0 Op: [ of type int [line: 80]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 80]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 80]						   <
.   .   .   Child: 1 Const 4 of type int [line: 80]						   <
.   .   Sibling: 37 Assign: = of type int [line: 81]						   <
.   .   .   Child: 0 Op: [ of type int [line: 81]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 81]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 81]						   <
.   .   .   Child: 1 Const 987 of type int [line: 81]						   <
.   .   Sibling: 38 Assign: -= of type int [line: 82]						   <
.   .   .   Child: 0 Op: [ of type int [line: 82]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 82]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 82]						   <
.   .   .   Child: 1 Const 3 of type int [line: 82]						   <
.   .   Sibling: 39 Call: dog of type void [line: 84]						   <
.   .   .   Child: 0 Op: [ of type int [line: 84]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 84]	   <
.   .   .   .   Child: 1 Op: [ of type int [line: 84]						   <
.   .   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 84   <
.   .   .   .   .   Child: 1 Op: [ of type int [line: 84]					   <
.   .   .   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line:   <
.   .   .   .   .   .   Child: 1 Const 8 of type int [line: 84]					   <
.   .   .   Sibling: 1 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 84]	   <
.   .   Sibling: 40 Assign: += of type int [line: 86]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 86]			   <
.   .   .   Child: 1 Op: [ of type int [line: 86]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 86]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 86]						   <
.   .   Sibling: 41 Assign: -= of type int [line: 87]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 87]			   <
.   .   .   Child: 1 Op: [ of type int [line: 87]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 87]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 87]						   <
.   .   Sibling: 42 Assign: = of type int [line: 88]						   <
.   .   .   Child: 0 Op: [ of type int [line: 88]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 88]	   <
.   .   .   .   Child: 1 Const 8 of type int [line: 88]						   <
.   .   .   Child: 1 Const 8 of type int [line: 88]						   <
.   .   Sibling: 43 Assign: = of type int [line: 89]						   <
.   .   .   Child: 0 Op: [ of type int [line: 89]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 89]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 89]						   <
.   .   .   Child: 1 Op: + of type int [line: 89]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 89]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 89   <
.   .   .   .   .   Child: 1 Call: getnxtindex of type int [line: 89]				   <
.   .   .   .   .   .   Child: 0 Const 7 of type int [line: 89]					   <
.   .   .   .   Child: 1 Const 1 of type int [line: 89]						   <
.   .   Sibling: 44 Call: dog of type void [line: 91]						   <
.   .   .   Child: 0 Op: [ of type int [line: 91]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 91]	   <
.   .   .   .   Child: 1 Const 4 of type int [line: 91]						   <
.   .   .   Sibling: 1 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 91]	   <
.   .   Sibling: 45 Assign: = of type int [line: 93]						   <
.   .   .   Child: 0 Op: [ of type int [line: 93]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 93]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 93]						   <
.   .   .   Child: 1 Const 0 of type int [line: 93]						   <
.   .   Sibling: 46 Assign: = of type int [line: 94]						   <
.   .   .   Child: 0 Op: [ of type int [line: 94]						   <
.   .   .   .   Child: 0 Id: w of array of type int [mem: Local loc: -48 size: 11] [line: 94]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 94]						   <
.   .   .   Child: 1 Const 3 of type int [line: 94]						   <
.   .   Sibling: 47 Assign: = of type int [line: 95]						   <
.   .   .   Child: 0 Op: [ of type int [line: 95]						   <
.   .   .   .   Child: 0 Id: z of array of type int [mem: Local loc: -37 size: 11] [line: 95]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 95]						   <
.   .   .   Child: 1 Const 9 of type int [line: 95]						   <
.   .   Sibling: 48 Assign: = of type int [line: 96]						   <
.   .   .   Child: 0 Op: [ of type int [line: 96]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 96]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 96]						   <
.   .   .   Child: 1 Const 1 of type int [line: 96]						   <
.   .   Sibling: 49 Assign: = of type int [line: 98]						   <
.   .   .   Child: 0 Op: [ of type int [line: 98]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 98]	   <
.   .   .   .   Child: 1 Op: [ of type int [line: 98]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -26 size: 11] [line: 98   <
.   .   .   .   .   Child: 1 Op: [ of type int [line: 98]					   <
.   .   .   .   .   .   Child: 0 Id: z of array of type int [mem: Local loc: -37 size: 11] [line   <
.   .   .   .   .   .   Child: 1 Op: [ of type int [line: 98]					   <
.   .   .   .   .   .   .   Child: 0 Id: w of array of type int [mem: Local loc: -48 size: 11] [   <
.   .   .   .   .   .   .   Child: 1 Op: [ of type int [line: 98]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11   <
.   .   .   .   .   .   .   .   Child: 1 Const 5 of type int [line: 98]				   <
.   .   .   Child: 1 Const 77 of type int [line: 98]						   <
.   .   Sibling: 50 Assign: = of type int [line: 99]						   <
.   .   .   Child: 0 Op: [ of type int [line: 99]						   <
.   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 99]	   <
.   .   .   .   Child: 1 Const 9 of type int [line: 99]						   <
.   .   .   Child: 1 Op: [ of type int [line: 99]						   <
.   .   .   .   Child: 0 Id: d of array of type int [mem: Local loc: -15 size: 11] [line: 99]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 99]						   <
.   .   Sibling: 51 Call: dog of type void [line: 101]						   <
.   .   .   Child: 0 Const 66 of type int [line: 101]						   <
.   .   .   Sibling: 1 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 101]	   <
.   .   Sibling: 52 Compound [mem: None loc: 0 size: -60] [line: 103]				   <
.   .   .   Child: 0 Var: p of type int [mem: Local loc: -58 size: 1] [line: 104]		   <
.   .   .   Sibling: 1 Var: q of type int [mem: Local loc: -59 size: 1] [line: 104]		   <
.   .   .   Child: 1 Assign: = of type int [line: 106]						   <
.   .   .   .   Child: 0 Id: p of type int [mem: Local loc: -58 size: 1] [line: 106]		   <
.   .   .   .   Child: 1 Const 0 of type int [line: 106]					   <
.   .   .   Sibling: 1 While [line: 107]							   <
.   .   .   .   Child: 0 Op: < of type bool [line: 107]						   <
.   .   .   .   .   Child: 0 Id: p of type int [mem: Local loc: -58 size: 1] [line: 107]	   <
.   .   .   .   .   Child: 1 Const 10 of type int [line: 107]					   <
.   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -60] [line: 107]			   <
.   .   .   .   .   Child: 1 Assign: = of type int [line: 108]					   <
.   .   .   .   .   .   Child: 0 Id: q of type int [mem: Local loc: -59 size: 1] [line: 108]	   <
.   .   .   .   .   .   Child: 1 Id: p of type int [mem: Local loc: -58 size: 1] [line: 108]	   <
.   .   .   .   .   Sibling: 1 Assign: = of type int [line: 109]				   <
.   .   .   .   .   .   Child: 0 Op: [ of type int [line: 109]					   <
.   .   .   .   .   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [l   <
.   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 109]				   <
.   .   .   .   .   .   .   .   Child: 0 Const 9 of type int [line: 109]			   <
.   .   .   .   .   .   .   .   Child: 1 Id: q of type int [mem: Local loc: -59 size: 1] [line:    <
.   .   .   .   .   .   Child: 1 Assign: += of type int [line: 109]				   <
.   .   .   .   .   .   .   Child: 0 Id: p of type int [mem: Local loc: -58 size: 1] [line: 109]   <
.   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 109]				   <
.   .   Sibling: 53 Call: showIntArray of type void [line: 113]					   <
.   .   .   Child: 0 Id: c of array of type int [mem: Local loc: -4 size: 11] [line: 113]	   <
.   .   .   Sibling: 1 Const 10 of type int [line: 113]						   <
Offset for end of global space: -12								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: nest.c-
-rwxrwx--- 1 root vboxsf  1333 Apr 30 16:30 nest.c-
-rwxrwx--- 1 root vboxsf   147 May  2 10:26 nest.expected
-rwxrwx--- 1 root vboxsf 12409 May  4  2021 nest.mem
-rwxrwx--- 1 root vboxsf 12446 May  4  2021 nest.out
nest.out ztmp4778.txt differ: byte 1, line 1
nest (Output DIFF)
Var: x of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: nest.tm
Sibling: 1 Var: y of type int [mem: Global loc: -1 size: 1] [line: 2]				   |	6 7 8 9 10 666 666 8 9 666 11 12 13 14 15 11 12 13 14 15 16 17 18 19 20 16 17 18 19 20 666 666 6
Sibling: 2 Var: z of type int [mem: Global loc: -2 size: 1] [line: 3]				   |	Bye.
Sibling: 3 Func: agamemnon returns type void [mem: Global loc: 0 size: -2] [line: 5]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 6]					   <
.   .   Child: 0 Var: a of type int [mem: Local loc: -2 size: 1] [line: 7]			   <
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -3 size: 1] [line: 8]			   <
.   .   Sibling: 2 Var: x of type int [mem: Local loc: -4 size: 1] [line: 9]			   <
.   .   Child: 1 Assign: = of type int [line: 11]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 11]			   <
.   .   .   Child: 1 Const 666 of type int [line: 11]						   <
.   .   Sibling: 1 Assign: = of type int [line: 12]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 12]			   <
.   .   .   Child: 1 Const 666 of type int [line: 12]						   <
.   .   Sibling: 2 Assign: = of type int [line: 13]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -4 size: 1] [line: 13]			   <
.   .   .   Child: 1 Const 666 of type int [line: 13]						   <
.   .   Sibling: 3 Assign: = of type int [line: 14]						   <
.   .   .   Child: 0 Id: z of type int [mem: Global loc: -2 size: 1] [line: 14]			   <
.   .   .   Child: 1 Const 666 of type int [line: 14]						   <
.   .   Sibling: 4 Call: output of type void [line: 16]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 16]			   <
.   .   Sibling: 5 Call: output of type void [line: 17]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 17]			   <
.   .   Sibling: 6 Call: output of type void [line: 18]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -4 size: 1] [line: 18]			   <
.   .   Sibling: 7 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 19]			   <
.   .   Sibling: 8 Call: output of type void [line: 20]						   <
.   .   .   Child: 0 Id: z of type int [mem: Global loc: -2 size: 1] [line: 20]			   <
.   .   Sibling: 9 Assign: = of type int [line: 21]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 21]			   <
.   .   .   Child: 1 Const 1 of type int [line: 21]						   <
.   .   Sibling: 10 Assign: = of type int [line: 22]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 22]			   <
.   .   .   Child: 1 Const 2 of type int [line: 22]						   <
.   .   Sibling: 11 Assign: = of type int [line: 23]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -4 size: 1] [line: 23]			   <
.   .   .   Child: 1 Const 3 of type int [line: 23]						   <
.   .   Sibling: 12 Assign: = of type int [line: 24]						   <
.   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 24]			   <
.   .   .   Child: 1 Const 4 of type int [line: 24]						   <
.   .   Sibling: 13 Assign: = of type int [line: 25]						   <
.   .   .   Child: 0 Id: z of type int [mem: Global loc: -2 size: 1] [line: 25]			   <
.   .   .   Child: 1 Const 5 of type int [line: 25]						   <
Sibling: 4 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 28]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 29]					   <
.   .   Child: 0 Var: a of type int [mem: Local loc: -2 size: 1] [line: 30]			   <
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -3 size: 1] [line: 31]			   <
.   .   Sibling: 2 Var: z of type int [mem: Local loc: -4 size: 1] [line: 32]			   <
.   .   Child: 1 Assign: = of type int [line: 34]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 34]			   <
.   .   .   Child: 1 Const 6 of type int [line: 34]						   <
.   .   Sibling: 1 Assign: = of type int [line: 35]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 35]			   <
.   .   .   Child: 1 Const 7 of type int [line: 35]						   <
.   .   Sibling: 2 Assign: = of type int [line: 36]						   <
.   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 36]			   <
.   .   .   Child: 1 Const 8 of type int [line: 36]						   <
.   .   Sibling: 3 Assign: = of type int [line: 37]						   <
.   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 37]			   <
.   .   .   Child: 1 Const 9 of type int [line: 37]						   <
.   .   Sibling: 4 Assign: = of type int [line: 38]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 38]			   <
.   .   .   Child: 1 Const 10 of type int [line: 38]						   <
.   .   Sibling: 5 Call: output of type void [line: 40]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 40]			   <
.   .   Sibling: 6 Call: output of type void [line: 41]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 41]			   <
.   .   Sibling: 7 Call: output of type void [line: 42]						   <
.   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 42]			   <
.   .   Sibling: 8 Call: output of type void [line: 43]						   <
.   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 43]			   <
.   .   Sibling: 9 Call: output of type void [line: 44]						   <
.   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 44]			   <
.   .   Sibling: 10 Compound [mem: None loc: 0 size: -8] [line: 45]				   <
.   .   .   Child: 0 Var: a of type int [mem: Local loc: -5 size: 1] [line: 46]			   <
.   .   .   Sibling: 1 Var: b of type int [mem: Local loc: -6 size: 1] [line: 47]		   <
.   .   .   Sibling: 2 Var: z of type int [mem: Local loc: -7 size: 1] [line: 48]		   <
.   .   .   Child: 1 Assign: = of type int [line: 50]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 50]		   <
.   .   .   .   Child: 1 Const 666 of type int [line: 50]					   <
.   .   .   Sibling: 1 Assign: = of type int [line: 51]						   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 51]		   <
.   .   .   .   Child: 1 Const 666 of type int [line: 51]					   <
.   .   .   Sibling: 2 Assign: = of type int [line: 52]						   <
.   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -7 size: 1] [line: 52]		   <
.   .   .   .   Child: 1 Const 666 of type int [line: 52]					   <
.   .   .   Sibling: 3 Call: output of type void [line: 54]					   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 54]		   <
.   .   .   Sibling: 4 Call: output of type void [line: 55]					   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 55]		   <
.   .   .   Sibling: 5 Call: output of type void [line: 56]					   <
.   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 56]		   <
.   .   .   Sibling: 6 Call: output of type void [line: 57]					   <
.   .   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 57]		   <
.   .   .   Sibling: 7 Call: output of type void [line: 58]					   <
.   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -7 size: 1] [line: 58]		   <
.   .   .   Sibling: 8 Assign: = of type int [line: 60]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 60]		   <
.   .   .   .   Child: 1 Const 11 of type int [line: 60]					   <
.   .   .   Sibling: 9 Assign: = of type int [line: 61]						   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 61]		   <
.   .   .   .   Child: 1 Const 12 of type int [line: 61]					   <
.   .   .   Sibling: 10 Assign: = of type int [line: 62]					   <
.   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 62]		   <
.   .   .   .   Child: 1 Const 13 of type int [line: 62]					   <
.   .   .   Sibling: 11 Assign: = of type int [line: 63]					   <
.   .   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 63]		   <
.   .   .   .   Child: 1 Const 14 of type int [line: 63]					   <
.   .   .   Sibling: 12 Assign: = of type int [line: 64]					   <
.   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -7 size: 1] [line: 64]		   <
.   .   .   .   Child: 1 Const 15 of type int [line: 64]					   <
.   .   .   Sibling: 13 Call: output of type void [line: 65]					   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 65]		   <
.   .   .   Sibling: 14 Call: output of type void [line: 66]					   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 66]		   <
.   .   .   Sibling: 15 Call: output of type void [line: 67]					   <
.   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 67]		   <
.   .   .   Sibling: 16 Call: output of type void [line: 68]					   <
.   .   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 68]		   <
.   .   .   Sibling: 17 Call: output of type void [line: 69]					   <
.   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -7 size: 1] [line: 69]		   <
.   .   .   Sibling: 18 Compound [mem: None loc: 0 size: -8] [line: 70]				   <
.   .   .   .   Child: 1 Call: output of type void [line: 71]					   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 71]		   <
.   .   .   .   Sibling: 1 Call: output of type void [line: 72]					   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 72]		   <
.   .   .   .   Sibling: 2 Call: output of type void [line: 73]					   <
.   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 73]		   <
.   .   .   .   Sibling: 3 Call: output of type void [line: 74]					   <
.   .   .   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 74]		   <
.   .   .   .   Sibling: 4 Call: output of type void [line: 75]					   <
.   .   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -7 size: 1] [line: 75]		   <
.   .   .   .   Sibling: 5 Assign: = of type int [line: 77]					   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 77]		   <
.   .   .   .   .   Child: 1 Const 16 of type int [line: 77]					   <
.   .   .   .   Sibling: 6 Assign: = of type int [line: 78]					   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 78]		   <
.   .   .   .   .   Child: 1 Const 17 of type int [line: 78]					   <
.   .   .   .   Sibling: 7 Assign: = of type int [line: 79]					   <
.   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 79]		   <
.   .   .   .   .   Child: 1 Const 18 of type int [line: 79]					   <
.   .   .   .   Sibling: 8 Assign: = of type int [line: 80]					   <
.   .   .   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 80]		   <
.   .   .   .   .   Child: 1 Const 19 of type int [line: 80]					   <
.   .   .   .   Sibling: 9 Assign: = of type int [line: 81]					   <
.   .   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -7 size: 1] [line: 81]		   <
.   .   .   .   .   Child: 1 Const 20 of type int [line: 81]					   <
.   .   .   .   Sibling: 10 Call: output of type void [line: 82]				   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 82]		   <
.   .   .   .   Sibling: 11 Call: output of type void [line: 83]				   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 83]		   <
.   .   .   .   Sibling: 12 Call: output of type void [line: 84]				   <
.   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 84]		   <
.   .   .   .   Sibling: 13 Call: output of type void [line: 85]				   <
.   .   .   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 85]		   <
.   .   .   .   Sibling: 14 Call: output of type void [line: 86]				   <
.   .   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -7 size: 1] [line: 86]		   <
.   .   .   Sibling: 19 Call: output of type void [line: 88]					   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 88]		   <
.   .   .   Sibling: 20 Call: output of type void [line: 89]					   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 89]		   <
.   .   .   Sibling: 21 Call: output of type void [line: 90]					   <
.   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 90]		   <
.   .   .   Sibling: 22 Call: output of type void [line: 91]					   <
.   .   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 91]		   <
.   .   .   Sibling: 23 Call: output of type void [line: 92]					   <
.   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -7 size: 1] [line: 92]		   <
.   .   .   Sibling: 24 Call: agamemnon of type void [line: 94]					   <
.   .   .   Sibling: 25 Call: output of type void [line: 96]					   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 96]		   <
.   .   .   Sibling: 26 Call: output of type void [line: 97]					   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 97]		   <
.   .   .   Sibling: 27 Call: output of type void [line: 98]					   <
.   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 1] [line: 98]		   <
.   .   .   Sibling: 28 Call: output of type void [line: 99]					   <
.   .   .   .   Child: 0 Id: y of type int [mem: Global loc: -1 size: 1] [line: 99]		   <
.   .   .   Sibling: 29 Call: output of type void [line: 100]					   <
.   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -7 size: 1] [line: 100]		   <
Offset for end of global space: -3								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: op1.c-
-rwxrwx--- 1 root vboxsf 1058 Apr 30 16:30 op1.c-
-rwxrwx--- 1 root vboxsf  115 May  2 10:26 op1.expected
-rwxrwx--- 1 root vboxsf 8991 May  4  2021 op1.mem
-rwxrwx--- 1 root vboxsf 9028 May  4  2021 op1.out
op1.out ztmp4778.txt differ: byte 1, line 1
op1 (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: op1.tm
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 2]					   |	T F T
.   .   Child: 1 Call: outputb of type void [line: 3]						   |	T F F
.   .   .   Child: 0 Op: <= of type bool [line: 3]						   |	F T F
.   .   .   .   Child: 0 Const 111 of type int [line: 3]					   |	F T T
.   .   .   .   Child: 1 Const 222 of type int [line: 3]					   |	F F T
.   .   Sibling: 1 Call: outputb of type void [line: 4]						   |	T T F
.   .   .   Child: 0 Op: <= of type bool [line: 4]						   |	T T F
.   .   .   .   Child: 0 Const 222 of type int [line: 4]					   |	F F F T
.   .   .   .   Child: 1 Const 111 of type int [line: 4]					   |	F T T T
.   .   Sibling: 2 Call: outputb of type void [line: 5]						   |	T F
.   .   .   Child: 0 Op: <= of type bool [line: 5]						   |	777 -111 147852 0 225 -444
.   .   .   .   Child: 0 Const 111 of type int [line: 5]					   |	Bye.
.   .   .   .   Child: 1 Const 111 of type int [line: 5]					   <
.   .   Sibling: 3 Call: outnl of type void [line: 6]						   <
.   .   Sibling: 4 Call: outputb of type void [line: 8]						   <
.   .   .   Child: 0 Op: < of type bool [line: 8]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 8]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 8]					   <
.   .   Sibling: 5 Call: outputb of type void [line: 9]						   <
.   .   .   Child: 0 Op: < of type bool [line: 9]						   <
.   .   .   .   Child: 0 Const 222 of type int [line: 9]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 9]					   <
.   .   Sibling: 6 Call: outputb of type void [line: 10]					   <
.   .   .   Child: 0 Op: < of type bool [line: 10]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 10]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 10]					   <
.   .   Sibling: 7 Call: outnl of type void [line: 11]						   <
.   .   Sibling: 8 Call: outputb of type void [line: 13]					   <
.   .   .   Child: 0 Op: > of type bool [line: 13]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 13]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 13]					   <
.   .   Sibling: 9 Call: outputb of type void [line: 14]					   <
.   .   .   Child: 0 Op: > of type bool [line: 14]						   <
.   .   .   .   Child: 0 Const 222 of type int [line: 14]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 14]					   <
.   .   Sibling: 10 Call: outputb of type void [line: 15]					   <
.   .   .   Child: 0 Op: > of type bool [line: 15]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 15]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 15]					   <
.   .   Sibling: 11 Call: outnl of type void [line: 16]						   <
.   .   Sibling: 12 Call: outputb of type void [line: 18]					   <
.   .   .   Child: 0 Op: >= of type bool [line: 18]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 18]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 18]					   <
.   .   Sibling: 13 Call: outputb of type void [line: 19]					   <
.   .   .   Child: 0 Op: >= of type bool [line: 19]						   <
.   .   .   .   Child: 0 Const 222 of type int [line: 19]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 19]					   <
.   .   Sibling: 14 Call: outputb of type void [line: 20]					   <
.   .   .   Child: 0 Op: >= of type bool [line: 20]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 20]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 20]					   <
.   .   Sibling: 15 Call: outnl of type void [line: 21]						   <
.   .   Sibling: 16 Call: outputb of type void [line: 23]					   <
.   .   .   Child: 0 Op: == of type bool [line: 23]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 23]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 23]					   <
.   .   Sibling: 17 Call: outputb of type void [line: 24]					   <
.   .   .   Child: 0 Op: == of type bool [line: 24]						   <
.   .   .   .   Child: 0 Const 222 of type int [line: 24]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 24]					   <
.   .   Sibling: 18 Call: outputb of type void [line: 25]					   <
.   .   .   Child: 0 Op: == of type bool [line: 25]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 25]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 25]					   <
.   .   Sibling: 19 Call: outnl of type void [line: 26]						   <
.   .   Sibling: 20 Call: outputb of type void [line: 28]					   <
.   .   .   Child: 0 Op: != of type bool [line: 28]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 28]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 28]					   <
.   .   Sibling: 21 Call: outputb of type void [line: 29]					   <
.   .   .   Child: 0 Op: != of type bool [line: 29]						   <
.   .   .   .   Child: 0 Const 222 of type int [line: 29]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 29]					   <
.   .   Sibling: 22 Call: outputb of type void [line: 30]					   <
.   .   .   Child: 0 Op: != of type bool [line: 30]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 30]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 30]					   <
.   .   Sibling: 23 Call: outnl of type void [line: 31]						   <
.   .   Sibling: 24 Call: outputb of type void [line: 33]					   <
.   .   .   Child: 0 Op: != of type bool [line: 33]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 33]					   <
.   .   .   .   Child: 1 Const 222 of type int [line: 33]					   <
.   .   Sibling: 25 Call: outputb of type void [line: 34]					   <
.   .   .   Child: 0 Op: != of type bool [line: 34]						   <
.   .   .   .   Child: 0 Const 222 of type int [line: 34]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 34]					   <
.   .   Sibling: 26 Call: outputb of type void [line: 35]					   <
.   .   .   Child: 0 Op: != of type bool [line: 35]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 35]					   <
.   .   .   .   Child: 1 Const 111 of type int [line: 35]					   <
.   .   Sibling: 27 Call: outnl of type void [line: 36]						   <
.   .   Sibling: 28 Call: outputb of type void [line: 38]					   <
.   .   .   Child: 0 Op: and of type bool [line: 38]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 38]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 38]					   <
.   .   Sibling: 29 Call: outputb of type void [line: 39]					   <
.   .   .   Child: 0 Op: and of type bool [line: 39]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 39]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 39]					   <
.   .   Sibling: 30 Call: outputb of type void [line: 40]					   <
.   .   .   Child: 0 Op: and of type bool [line: 40]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 40]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 40]					   <
.   .   Sibling: 31 Call: outputb of type void [line: 41]					   <
.   .   .   Child: 0 Op: and of type bool [line: 41]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 41]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 41]					   <
.   .   Sibling: 32 Call: outnl of type void [line: 42]						   <
.   .   Sibling: 33 Call: outputb of type void [line: 44]					   <
.   .   .   Child: 0 Op: or of type bool [line: 44]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 44]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 44]					   <
.   .   Sibling: 34 Call: outputb of type void [line: 45]					   <
.   .   .   Child: 0 Op: or of type bool [line: 45]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 45]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 45]					   <
.   .   Sibling: 35 Call: outputb of type void [line: 46]					   <
.   .   .   Child: 0 Op: or of type bool [line: 46]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 46]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 46]					   <
.   .   Sibling: 36 Call: outputb of type void [line: 47]					   <
.   .   .   Child: 0 Op: or of type bool [line: 47]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 47]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 47]					   <
.   .   Sibling: 37 Call: outnl of type void [line: 48]						   <
.   .   Sibling: 38 Call: outputb of type void [line: 50]					   <
.   .   .   Child: 0 Op: not of type bool [line: 50]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 50]					   <
.   .   Sibling: 39 Call: outputb of type void [line: 51]					   <
.   .   .   Child: 0 Op: not of type bool [line: 51]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 51]					   <
.   .   Sibling: 40 Call: outnl of type void [line: 52]						   <
.   .   Sibling: 41 Call: output of type void [line: 54]					   <
.   .   .   Child: 0 Op: + of type int [line: 54]						   <
.   .   .   .   Child: 0 Const 333 of type int [line: 54]					   <
.   .   .   .   Child: 1 Const 444 of type int [line: 54]					   <
.   .   Sibling: 42 Call: output of type void [line: 55]					   <
.   .   .   Child: 0 Op: - of type int [line: 55]						   <
.   .   .   .   Child: 0 Const 333 of type int [line: 55]					   <
.   .   .   .   Child: 1 Const 444 of type int [line: 55]					   <
.   .   Sibling: 43 Call: output of type void [line: 56]					   <
.   .   .   Child: 0 Op: * of type int [line: 56]						   <
.   .   .   .   Child: 0 Const 333 of type int [line: 56]					   <
.   .   .   .   Child: 1 Const 444 of type int [line: 56]					   <
.   .   Sibling: 44 Call: output of type void [line: 57]					   <
.   .   .   Child: 0 Op: / of type int [line: 57]						   <
.   .   .   .   Child: 0 Const 333 of type int [line: 57]					   <
.   .   .   .   Child: 1 Const 444 of type int [line: 57]					   <
.   .   Sibling: 45 Call: output of type void [line: 58]					   <
.   .   .   Child: 0 Op: % of type int [line: 58]						   <
.   .   .   .   Child: 0 Const 3333 of type int [line: 58]					   <
.   .   .   .   Child: 1 Const 444 of type int [line: 58]					   <
.   .   Sibling: 46 Call: output of type void [line: 59]					   <
.   .   .   Child: 0 Op: chsign of type int [line: 59]						   <
.   .   .   .   Child: 0 Const 444 of type int [line: 59]					   <
.   .   Sibling: 47 Return [line: 61]								   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: ops.c-
-rwxrwx--- 1 root vboxsf  2931 Apr 30 16:30 ops.c-
-rwxrwx--- 1 root vboxsf   174 May  2 10:26 ops.expected
-rwxrwx--- 1 root vboxsf 21891 May  4  2021 ops.mem
-rwxrwx--- 1 root vboxsf 21928 May  4  2021 ops.out
ops.out ztmp4778.txt differ: byte 1, line 1
ops (Output DIFF)
Var: y of array of type int [mem: Global loc: -1 size: 11] [line: 3]				   |	Loading file: ops.tm
Sibling: 1 Var: x of type bool [mem: Global loc: -11 size: 1] [line: 4]				   |	F T T
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 6]			   |	F T F
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 7]					   |	T F F
.   .   Child: 0 Var: a of type int [mem: Local loc: -2 size: 1] [line: 8]			   |	T F T
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -3 size: 1] [line: 9]			   |	F F T
.   .   Sibling: 2 Var: c of type int [mem: Local loc: -4 size: 1] [line: 10]			   |	F T T F
.   .   Sibling: 3 Var: z of type bool [mem: Local loc: -5 size: 1] [line: 11]			   |	T F F F
.   .   Child: 1 Assign: = of type int [line: 13]						   |	T T T F
.   .   .   Child: 0 Op: [ of type int [line: 13]						   |	F T
.   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 13]	   |	55 52
.   .   .   .   Child: 1 Const 0 of type int [line: 13]						   |	-45 -25
.   .   .   Child: 1 Const 50 of type int [line: 13]						   |	-50 0 -1
.   .   Sibling: 1 Assign: = of type int [line: 14]						   |	2310 100 100
.   .   .   Child: 0 Op: [ of type int [line: 14]						   |	25 0 2 10
.   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 14]	   |	1 1 1 3 2
.   .   .   .   Child: 1 Const 5 of type int [line: 14]						   |	43 43 12
.   .   .   Child: 1 Const 1 of type int [line: 14]						   |	46 44 0 12
.   .   Sibling: 2 Assign: = of type int [line: 15]						   |	-6 2 70 F T T
.   .   .   Child: 0 Op: [ of type int [line: 15]						   |	Bye.
.   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 15]	   <
.   .   .   .   Child: 1 Const 8 of type int [line: 15]						   <
.   .   .   Child: 1 Const 2 of type int [line: 15]						   <
.   .   Sibling: 3 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 17]			   <
.   .   .   Child: 1 Const 50 of type int [line: 17]						   <
.   .   Sibling: 4 Assign: = of type int [line: 18]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 18]			   <
.   .   .   Child: 1 Const 1 of type int [line: 18]						   <
.   .   Sibling: 5 Assign: = of type int [line: 19]						   <
.   .   .   Child: 0 Id: c of type int [mem: Local loc: -4 size: 1] [line: 19]			   <
.   .   .   Child: 1 Const 8 of type int [line: 19]						   <
.   .   Sibling: 6 Assign: = of type bool [line: 21]						   <
.   .   .   Child: 0 Id: x of type bool [mem: Global loc: -11 size: 1] [line: 21]		   <
.   .   .   Child: 1 Const false of type bool [line: 21]					   <
.   .   Sibling: 7 Assign: = of type bool [line: 22]						   <
.   .   .   Child: 0 Id: z of type bool [mem: Local loc: -5 size: 1] [line: 22]			   <
.   .   .   Child: 1 Const true of type bool [line: 22]						   <
.   .   Sibling: 8 Call: outputb of type void [line: 24]					   <
.   .   .   Child: 0 Op: <= of type bool [line: 24]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 24]		   <
.   .   .   .   Child: 1 Const 1 of type int [line: 24]						   <
.   .   Sibling: 9 Call: outputb of type void [line: 25]					   <
.   .   .   Child: 0 Op: <= of type bool [line: 25]						   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 25]		   <
.   .   .   .   Child: 1 Const 50 of type int [line: 25]					   <
.   .   Sibling: 10 Call: outputb of type void [line: 26]					   <
.   .   .   Child: 0 Op: <= of type bool [line: 26]						   <
.   .   .   .   Child: 0 Const 50 of type int [line: 26]					   <
.   .   .   .   Child: 1 Const 50 of type int [line: 26]					   <
.   .   Sibling: 11 Call: outnl of type void [line: 27]						   <
.   .   Sibling: 12 Call: outputb of type void [line: 29]					   <
.   .   .   Child: 0 Op: < of type bool [line: 29]						   <
.   .   .   .   Child: 0 Const 50 of type int [line: 29]					   <
.   .   .   .   Child: 1 Const 1 of type int [line: 29]						   <
.   .   Sibling: 13 Call: outputb of type void [line: 30]					   <
.   .   .   Child: 0 Op: < of type bool [line: 30]						   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 30]		   <
.   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -2 size: 1] [line: 30]		   <
.   .   Sibling: 14 Call: outputb of type void [line: 31]					   <
.   .   .   Child: 0 Op: < of type bool [line: 31]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 31]		   <
.   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -2 size: 1] [line: 31]		   <
.   .   Sibling: 15 Call: outnl of type void [line: 32]						   <
.   .   Sibling: 16 Call: outputb of type void [line: 34]					   <
.   .   .   Child: 0 Op: > of type bool [line: 34]						   <
.   .   .   .   Child: 0 Const 50 of type int [line: 34]					   <
.   .   .   .   Child: 1 Const 1 of type int [line: 34]						   <
.   .   Sibling: 17 Call: outputb of type void [line: 35]					   <
.   .   .   Child: 0 Op: > of type bool [line: 35]						   <
.   .   .   .   Child: 0 Const 1 of type int [line: 35]						   <
.   .   .   .   Child: 1 Const 50 of type int [line: 35]					   <
.   .   Sibling: 18 Call: outputb of type void [line: 36]					   <
.   .   .   Child: 0 Op: > of type bool [line: 36]						   <
.   .   .   .   Child: 0 Const 50 of type int [line: 36]					   <
.   .   .   .   Child: 1 Const 50 of type int [line: 36]					   <
.   .   Sibling: 19 Call: outnl of type void [line: 37]						   <
.   .   Sibling: 20 Call: outputb of type void [line: 39]					   <
.   .   .   Child: 0 Op: >= of type bool [line: 39]						   <
.   .   .   .   Child: 0 Const 50 of type int [line: 39]					   <
.   .   .   .   Child: 1 Const 1 of type int [line: 39]						   <
.   .   Sibling: 21 Call: outputb of type void [line: 40]					   <
.   .   .   Child: 0 Op: >= of type bool [line: 40]						   <
.   .   .   .   Child: 0 Const 1 of type int [line: 40]						   <
.   .   .   .   Child: 1 Const 50 of type int [line: 40]					   <
.   .   Sibling: 22 Call: outputb of type void [line: 41]					   <
.   .   .   Child: 0 Op: >= of type bool [line: 41]						   <
.   .   .   .   Child: 0 Const 50 of type int [line: 41]					   <
.   .   .   .   Child: 1 Const 50 of type int [line: 41]					   <
.   .   Sibling: 23 Call: outnl of type void [line: 42]						   <
.   .   Sibling: 24 Call: outputb of type void [line: 44]					   <
.   .   .   Child: 0 Op: == of type bool [line: 44]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 44]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 44   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 44]					   <
.   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 44]		   <
.   .   Sibling: 25 Call: outputb of type void [line: 45]					   <
.   .   .   Child: 0 Op: == of type bool [line: 45]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 45]		   <
.   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 45]		   <
.   .   Sibling: 26 Call: outputb of type void [line: 46]					   <
.   .   .   Child: 0 Op: == of type bool [line: 46]						   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 46]		   <
.   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 46]		   <
.   .   Sibling: 27 Call: outnl of type void [line: 47]						   <
.   .   Sibling: 28 Call: outputb of type void [line: 49]					   <
.   .   .   Child: 0 Op: != of type bool [line: 49]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 49]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 49   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 49]					   <
.   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -2 size: 1] [line: 49]		   <
.   .   Sibling: 29 Call: outputb of type void [line: 50]					   <
.   .   .   Child: 0 Op: != of type bool [line: 50]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 50]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 50   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 50]					   <
.   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 50]		   <
.   .   Sibling: 30 Call: outputb of type void [line: 51]					   <
.   .   .   Child: 0 Op: != of type bool [line: 51]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 51]		   <
.   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 51]		   <
.   .   Sibling: 31 Call: outputb of type void [line: 52]					   <
.   .   .   Child: 0 Op: != of type bool [line: 52]						   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 52]		   <
.   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 52]		   <
.   .   Sibling: 32 Call: outnl of type void [line: 53]						   <
.   .   Sibling: 33 Call: outputb of type void [line: 55]					   <
.   .   .   Child: 0 Op: and of type bool [line: 55]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 55]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 55]					   <
.   .   Sibling: 34 Call: outputb of type void [line: 56]					   <
.   .   .   Child: 0 Op: and of type bool [line: 56]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 56]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 56]					   <
.   .   Sibling: 35 Call: outputb of type void [line: 57]					   <
.   .   .   Child: 0 Op: and of type bool [line: 57]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 57]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 57]					   <
.   .   Sibling: 36 Call: outputb of type void [line: 58]					   <
.   .   .   Child: 0 Op: and of type bool [line: 58]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 58]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 58]					   <
.   .   Sibling: 37 Call: outnl of type void [line: 59]						   <
.   .   Sibling: 38 Call: outputb of type void [line: 61]					   <
.   .   .   Child: 0 Op: or of type bool [line: 61]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 61]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 61]					   <
.   .   Sibling: 39 Call: outputb of type void [line: 62]					   <
.   .   .   Child: 0 Op: or of type bool [line: 62]						   <
.   .   .   .   Child: 0 Id: z of type bool [mem: Local loc: -5 size: 1] [line: 62]		   <
.   .   .   .   Child: 1 Const false of type bool [line: 62]					   <
.   .   Sibling: 40 Call: outputb of type void [line: 63]					   <
.   .   .   Child: 0 Op: or of type bool [line: 63]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 63]					   <
.   .   .   .   Child: 1 Const true of type bool [line: 63]					   <
.   .   Sibling: 41 Call: outputb of type void [line: 64]					   <
.   .   .   Child: 0 Op: or of type bool [line: 64]						   <
.   .   .   .   Child: 0 Const false of type bool [line: 64]					   <
.   .   .   .   Child: 1 Const false of type bool [line: 64]					   <
.   .   Sibling: 42 Call: outnl of type void [line: 65]						   <
.   .   Sibling: 43 Call: outputb of type void [line: 67]					   <
.   .   .   Child: 0 Op: not of type bool [line: 67]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 67]					   <
.   .   Sibling: 44 Call: outputb of type void [line: 68]					   <
.   .   .   Child: 0 Op: not of type bool [line: 68]						   <
.   .   .   .   Child: 0 Id: x of type bool [mem: Global loc: -11 size: 1] [line: 68]		   <
.   .   Sibling: 45 Call: outnl of type void [line: 69]						   <
.   .   Sibling: 46 Call: output of type void [line: 71]					   <
.   .   .   Child: 0 Op: + of type int [line: 71]						   <
.   .   .   .   Child: 0 Const 5 of type int [line: 71]						   <
.   .   .   .   Child: 1 Const 50 of type int [line: 71]					   <
.   .   Sibling: 47 Call: output of type void [line: 72]					   <
.   .   .   Child: 0 Op: + of type int [line: 72]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 72]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 72   <
.   .   .   .   .   Child: 1 Id: c of type int [mem: Local loc: -4 size: 1] [line: 72]		   <
.   .   .   .   Child: 1 Const 50 of type int [line: 72]					   <
.   .   Sibling: 48 Call: outnl of type void [line: 73]						   <
.   .   Sibling: 49 Call: output of type void [line: 75]					   <
.   .   .   Child: 0 Op: - of type int [line: 75]						   <
.   .   .   .   Child: 0 Const 5 of type int [line: 75]						   <
.   .   .   .   Child: 1 Const 50 of type int [line: 75]					   <
.   .   Sibling: 50 Call: output of type void [line: 76]					   <
.   .   .   Child: 0 Op: - of type int [line: 76]						   <
.   .   .   .   Child: 0 Op: - of type int [line: 76]						   <
.   .   .   .   .   Child: 0 Const 30 of type int [line: 76]					   <
.   .   .   .   .   Child: 1 Const 5 of type int [line: 76]					   <
.   .   .   .   Child: 1 Const 50 of type int [line: 76]					   <
.   .   Sibling: 51 Call: outnl of type void [line: 77]						   <
.   .   Sibling: 52 Call: output of type void [line: 79]					   <
.   .   .   Child: 0 Op: chsign of type int [line: 79]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 79]		   <
.   .   Sibling: 53 Call: output of type void [line: 80]					   <
.   .   .   Child: 0 Op: chsign of type int [line: 80]						   <
.   .   .   .   Child: 0 Const 0 of type int [line: 80]						   <
.   .   Sibling: 54 Call: output of type void [line: 81]					   <
.   .   .   Child: 0 Op: chsign of type int [line: 81]						   <
.   .   .   .   Child: 0 Const 1 of type int [line: 81]						   <
.   .   Sibling: 55 Call: outnl of type void [line: 82]						   <
.   .   Sibling: 56 Call: output of type void [line: 84]					   <
.   .   .   Child: 0 Op: * of type int [line: 84]						   <
.   .   .   .   Child: 0 Op: * of type int [line: 84]						   <
.   .   .   .   .   Child: 0 Op: * of type int [line: 84]					   <
.   .   .   .   .   .   Child: 0 Op: * of type int [line: 84]					   <
.   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 84]				   <
.   .   .   .   .   .   .   Child: 1 Const 3 of type int [line: 84]				   <
.   .   .   .   .   .   Child: 1 Const 5 of type int [line: 84]					   <
.   .   .   .   .   Child: 1 Const 7 of type int [line: 84]					   <
.   .   .   .   Child: 1 Const 11 of type int [line: 84]					   <
.   .   Sibling: 57 Call: output of type void [line: 85]					   <
.   .   .   Child: 0 Op: * of type int [line: 85]						   <
.   .   .   .   Child: 0 Const 50 of type int [line: 85]					   <
.   .   .   .   Child: 1 Op: [ of type int [line: 85]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 85   <
.   .   .   .   .   Child: 1 Const 8 of type int [line: 85]					   <
.   .   Sibling: 58 Call: output of type void [line: 86]					   <
.   .   .   Child: 0 Op: * of type int [line: 86]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 86]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 86   <
.   .   .   .   .   Child: 1 Const 8 of type int [line: 86]					   <
.   .   .   .   Child: 1 Const 50 of type int [line: 86]					   <
.   .   Sibling: 59 Call: outnl of type void [line: 87]						   <
.   .   Sibling: 60 Call: output of type void [line: 89]					   <
.   .   .   Child: 0 Op: / of type int [line: 89]						   <
.   .   .   .   Child: 0 Const 50 of type int [line: 89]					   <
.   .   .   .   Child: 1 Op: [ of type int [line: 89]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 89   <
.   .   .   .   .   Child: 1 Const 8 of type int [line: 89]					   <
.   .   Sibling: 61 Call: output of type void [line: 90]					   <
.   .   .   Child: 0 Op: / of type int [line: 90]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 90]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 90   <
.   .   .   .   .   Child: 1 Const 8 of type int [line: 90]					   <
.   .   .   .   Child: 1 Const 50 of type int [line: 90]					   <
.   .   Sibling: 62 Call: output of type void [line: 91]					   <
.   .   .   Child: 0 Op: / of type int [line: 91]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 91]						   <
.   .   .   .   .   Child: 0 Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 91   <
.   .   .   .   .   Child: 1 Const 8 of type int [line: 91]					   <
.   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 91]		   <
.   .   Sibling: 63 Call: output of type void [line: 92]					   <
.   .   .   Child: 0 Op: / of type int [line: 92]						   <
.   .   .   .   Child: 0 Op: / of type int [line: 92]						   <
.   .   .   .   .   Child: 0 Const 210 of type int [line: 92]					   <
.   .   .   .   .   Child: 1 Const 7 of type int [line: 92]					   <
.   .   .   .   Child: 1 Const 3 of type int [line: 92]						   <
.   .   Sibling: 64 Call: outnl of type void [line: 93]						   <
.   .   Sibling: 65 Call: output of type void [line: 95]					   <
.   .   .   Child: 0 Op: % of type int [line: 95]						   <
.   .   .   .   Child: 0 Const 211 of type int [line: 95]					   <
.   .   .   .   Child: 1 Const 7 of type int [line: 95]						   <
.   .   Sibling: 66 Call: output of type void [line: 96]					   <
.   .   .   Child: 0 Op: % of type int [line: 96]						   <
.   .   .   .   Child: 0 Const 211 of type int [line: 96]					   <
.   .   .   .   Child: 1 Const 6 of type int [line: 96]						   <
.   .   Sibling: 67 Call: output of type void [line: 97]					   <
.   .   .   Child: 0 Op: % of type int [line: 97]						   <
.   .   .   .   Child: 0 Const 211 of type int [line: 97]					   <
.   .   .   .   Child: 1 Const 5 of type int [line: 97]						   <
.   .   Sibling: 68 Call: output of type void [line: 98]					   <
.   .   .   Child: 0 Op: % of type int [line: 98]						   <
.   .   .   .   Child: 0 Const 211 of type int [line: 98]					   <
.   .   .   .   Child: 1 Const 4 of type int [line: 98]						   <
.   .   Sibling: 69 Call: output of type void [line: 99]					   <
.   .   .   Child: 0 Op: % of type int [line: 99]						   <
.   .   .   .   Child: 0 Op: % of type int [line: 99]						   <
.   .   .   .   .   Child: 0 Const 211 of type int [line: 99]					   <
.   .   .   .   .   Child: 1 Const 100 of type int [line: 99]					   <
.   .   .   .   Child: 1 Const 3 of type int [line: 99]						   <
.   .   Sibling: 70 Call: outnl of type void [line: 100]					   <
.   .   Sibling: 71 Call: output of type void [line: 102]					   <
.   .   .   Child: 0 Assign: = of type int [line: 102]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 102]		   <
.   .   .   .   Child: 1 Assign: = of type int [line: 102]					   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 102]		   <
.   .   .   .   .   Child: 1 Assign: = of type int [line: 102]					   <
.   .   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -4 size: 1] [line: 102]	   <
.   .   .   .   .   .   Child: 1 Const 43 of type int [line: 102]				   <
.   .   Sibling: 72 Call: output of type void [line: 103]					   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 103]			   <
.   .   Sibling: 73 Assign: = of type int [line: 104]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 104]			   <
.   .   .   Child: 1 Op: * of type int [line: 104]						   <
.   .   .   .   Child: 0 Assign: = of type int [line: 104]					   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 104]		   <
.   .   .   .   .   Child: 1 Const 3 of type int [line: 104]					   <
.   .   .   .   Child: 1 Assign: = of type int [line: 104]					   <
.   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -4 size: 1] [line: 104]		   <
.   .   .   .   .   Child: 1 Const 4 of type int [line: 104]					   <
.   .   Sibling: 74 Call: output of type void [line: 105]					   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 105]			   <
.   .   Sibling: 75 Call: outnl of type void [line: 106]					   <
.   .   Sibling: 76 Assign: = of type int [line: 108]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 108]			   <
.   .   .   Child: 1 Const 44 of type int [line: 108]						   <
.   .   Sibling: 77 Assign: = of type int [line: 109]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 109]			   <
.   .   .   Child: 1 Const 2 of type int [line: 109]						   <
.   .   Sibling: 78 Call: output of type void [line: 110]					   <
.   .   .   Child: 0 Assign: += of type int [line: 110]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 110]		   <
.   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 110]		   <
.   .   Sibling: 79 Call: output of type void [line: 111]					   <
.   .   .   Child: 0 Assign: -= of type int [line: 111]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 111]		   <
.   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 111]		   <
.   .   Sibling: 80 Call: output of type void [line: 112]					   <
.   .   .   Child: 0 Assign: -= of type int [line: 112]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 112]		   <
.   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -2 size: 1] [line: 112]		   <
.   .   Sibling: 81 Call: output of type void [line: 113]					   <
.   .   .   Child: 0 Assign: += of type int [line: 113]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 113]		   <
.   .   .   .   Child: 1 Assign: += of type int [line: 113]					   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 113]		   <
.   .   .   .   .   Child: 1 Const 10 of type int [line: 113]					   <
.   .   Sibling: 82 Call: outnl of type void [line: 114]					   <
.   .   Sibling: 83 Call: output of type void [line: 116]					   <
.   .   .   Child: 0 Op: - of type int [line: 116]						   <
.   .   .   .   Child: 0 Op: - of type int [line: 116]						   <
.   .   .   .   .   Child: 0 Const 3 of type int [line: 116]					   <
.   .   .   .   .   Child: 1 Const 4 of type int [line: 116]					   <
.   .   .   .   Child: 1 Const 5 of type int [line: 116]					   <
.   .   Sibling: 84 Call: output of type void [line: 117]					   <
.   .   .   Child: 0 Op: / of type int [line: 117]						   <
.   .   .   .   Child: 0 Op: / of type int [line: 117]						   <
.   .   .   .   .   Child: 0 Const 211 of type int [line: 117]					   <
.   .   .   .   .   Child: 1 Const 17 of type int [line: 117]					   <
.   .   .   .   Child: 1 Const 5 of type int [line: 117]					   <
.   .   Sibling: 85 Call: output of type void [line: 118]					   <
.   .   .   Child: 0 Op: / of type int [line: 118]						   <
.   .   .   .   Child: 0 Const 211 of type int [line: 118]					   <
.   .   .   .   Child: 1 Op: / of type int [line: 118]						   <
.   .   .   .   .   Child: 0 Const 17 of type int [line: 118]					   <
.   .   .   .   .   Child: 1 Const 5 of type int [line: 118]					   <
.   .   Sibling: 86 Call: outputb of type void [line: 119]					   <
.   .   .   Child: 0 Op: and of type bool [line: 119]						   <
.   .   .   .   Child: 0 Op: or of type bool [line: 119]					   <
.   .   .   .   .   Child: 0 Const true of type bool [line: 119]				   <
.   .   .   .   .   Child: 1 Const false of type bool [line: 119]				   <
.   .   .   .   Child: 1 Const false of type bool [line: 119]					   <
.   .   Sibling: 87 Call: outputb of type void [line: 120]					   <
.   .   .   Child: 0 Op: or of type bool [line: 120]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 120]					   <
.   .   .   .   Child: 1 Op: and of type bool [line: 120]					   <
.   .   .   .   .   Child: 0 Const false of type bool [line: 120]				   <
.   .   .   .   .   Child: 1 Const false of type bool [line: 120]				   <
.   .   Sibling: 88 Call: outputb of type void [line: 121]					   <
.   .   .   Child: 0 Op: or of type bool [line: 121]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 121]					   <
.   .   .   .   Child: 1 Op: and of type bool [line: 121]					   <
.   .   .   .   .   Child: 0 Const false of type bool [line: 121]				   <
.   .   .   .   .   Child: 1 Const false of type bool [line: 121]				   <
.   .   Sibling: 89 Call: outnl of type void [line: 122]					   <
Offset for end of global space: -12								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: permlist.c-
-rwxrwx--- 1 root vboxsf   795 Apr 30 16:30 permlist.c-
-rwxrwx--- 1 root vboxsf   762 May  2 10:26 permlist.expected
-rwxrwx--- 1 root vboxsf    19 Dec  1  2014 permlist.in
-rwxrwx--- 1 root vboxsf 12717 May  4  2021 permlist.mem
-rwxrwx--- 1 root vboxsf 12754 May  4  2021 permlist.out
permlist.out ztmp4778.txt differ: byte 1, line 1
permlist (Output DIFF)
Var: n of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: permlist.tm
Sibling: 1 Func: put returns type void [mem: Global loc: 0 size: -3] [line: 3]			   |	entered: 5
.   Child: 0 Parm: p of array of type int [mem: Parameter loc: -2 size: 1] [line: 3]		   |	12345
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 4]					   |	12354
.   .   Child: 0 Var: j of type int [mem: Local loc: -3 size: 1] [line: 5]			   |	12435
.   .   Sibling: 1 Var: sum of type int [mem: Local loc: -4 size: 1] [line: 6]			   |	12453
.   .   Child: 1 Assign: = of type int [line: 8]						   |	12534
.   .   .   Child: 0 Id: sum of type int [mem: Local loc: -4 size: 1] [line: 8]			   |	12543
.   .   .   Child: 1 Op: [ of type int [line: 8]						   |	13245
.   .   .   .   Child: 0 Id: p of array of type int [mem: Parameter loc: -2 size: 1] [line: 8]	   |	13254
.   .   .   .   Child: 1 Const 1 of type int [line: 8]						   |	13425
.   .   Sibling: 1 Assign: = of type int [line: 9]						   |	13452
.   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 9]			   |	13524
.   .   .   Child: 1 Const 2 of type int [line: 9]						   |	13542
.   .   Sibling: 2 While [line: 10]								   |	14235
.   .   .   Child: 0 Op: <= of type bool [line: 10]						   |	14253
.   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 10]		   |	14325
.   .   .   .   Child: 1 Id: n of type int [mem: Global loc: 0 size: 1] [line: 10]		   |	14352
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 10]				   |	14523
.   .   .   .   Child: 1 Assign: = of type int [line: 11]					   |	14532
.   .   .   .   .   Child: 0 Id: sum of type int [mem: Local loc: -4 size: 1] [line: 11]	   |	15234
.   .   .   .   .   Child: 1 Op: + of type int [line: 11]					   |	15243
.   .   .   .   .   .   Child: 0 Op: * of type int [line: 11]					   |	15324
.   .   .   .   .   .   .   Child: 0 Id: sum of type int [mem: Local loc: -4 size: 1] [line: 11]   |	15342
.   .   .   .   .   .   .   Child: 1 Const 10 of type int [line: 11]				   |	15423
.   .   .   .   .   .   Child: 1 Op: [ of type int [line: 11]					   |	15432
.   .   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Parameter loc: -2 size: 1]   |	21345
.   .   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -3 size: 1] [line: 11]	   |	21354
.   .   .   .   Sibling: 1 Assign: = of type int [line: 12]					   |	21435
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 12]		   |	21453
.   .   .   .   .   Child: 1 Op: + of type int [line: 12]					   |	21534
.   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 12]	   |	21543
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 12]					   |	23145
.   .   Sibling: 3 Call: output of type void [line: 14]						   |	23154
.   .   .   Child: 0 Id: sum of type int [mem: Local loc: -4 size: 1] [line: 14]		   |	23415
.   .   Sibling: 4 Call: outnl of type void [line: 15]						   |	23451
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 19]		   |	23514
.   Child: 1 Compound [mem: None loc: 0 size: -25] [line: 20]					   |	23541
.   .   Child: 0 Var: p of array of type int [mem: Local loc: -3 size: 21] [line: 21]		   |	24135
.   .   Sibling: 1 Var: i of type int [mem: Local loc: -23 size: 1] [line: 22]			   |	24153
.   .   Sibling: 2 Var: j of type int [mem: Local loc: -24 size: 1] [line: 23]			   |	24315
.   .   Child: 1 Assign: = of type int [line: 25]						   |	24351
.   .   .   Child: 0 Id: n of type int [mem: Global loc: 0 size: 1] [line: 25]			   |	24513
.   .   .   Child: 1 Call: input of type int [line: 25]						   |	24531
.   .   Sibling: 1 Assign: = of type int [line: 27]						   |	25134
.   .   .   Child: 0 Id: j of type int [mem: Local loc: -24 size: 1] [line: 27]			   |	25143
.   .   .   Child: 1 Const 0 of type int [line: 27]						   |	25314
.   .   Sibling: 2 While [line: 28]								   |	25341
.   .   .   Child: 0 Op: <= of type bool [line: 28]						   |	25413
.   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -24 size: 1] [line: 28]		   |	25431
.   .   .   .   Child: 1 Id: n of type int [mem: Global loc: 0 size: 1] [line: 28]		   |	31245
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -25] [line: 28]				   |	31254
.   .   .   .   Child: 1 Assign: = of type int [line: 29]					   |	31425
.   .   .   .   .   Child: 0 Op: [ of type int [line: 29]					   |	31452
.   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21] [line:   |	31524
.   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -24 size: 1] [line: 29]	   |	31542
.   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -24 size: 1] [line: 29]		   |	32145
.   .   .   .   Sibling: 1 Assign: = of type int [line: 30]					   |	32154
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -24 size: 1] [line: 30]		   |	32415
.   .   .   .   .   Child: 1 Op: + of type int [line: 30]					   |	32451
.   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -24 size: 1] [line: 30]	   |	32514
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 30]					   |	32541
.   .   Sibling: 3 Assign: = of type int [line: 33]						   |	34125
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -23 size: 1] [line: 33]			   |	34152
.   .   .   Child: 1 Const 1 of type int [line: 33]						   |	34215
.   .   Sibling: 4 While [line: 34]								   |	34251
.   .   .   Child: 0 Op: > of type bool [line: 34]						   |	34512
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -23 size: 1] [line: 34]		   |	34521
.   .   .   .   Child: 1 Const 0 of type int [line: 34]						   |	35124
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -28] [line: 34]				   |	35142
.   .   .   .   Child: 0 Var: r of type int [mem: Local loc: -25 size: 1] [line: 35]		   |	35214
.   .   .   .   Sibling: 1 Var: s of type int [mem: Local loc: -26 size: 1] [line: 36]		   |	35241
.   .   .   .   Sibling: 2 Var: tmp of type int [mem: Local loc: -27 size: 1] [line: 37]	   |	35412
.   .   .   .   Child: 1 Call: put of type void [line: 39]					   |	35421
.   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 39]   |	41235
.   .   .   .   Sibling: 1 Assign: = of type int [line: 42]					   |	41253
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -23 size: 1] [line: 42]		   |	41325
.   .   .   .   .   Child: 1 Op: - of type int [line: 42]					   |	41352
.   .   .   .   .   .   Child: 0 Id: n of type int [mem: Global loc: 0 size: 1] [line: 42]	   |	41523
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 42]					   |	41532
.   .   .   .   Sibling: 2 While [line: 43]							   |	42135
.   .   .   .   .   Child: 0 Op: > of type bool [line: 43]					   |	42153
.   .   .   .   .   .   Child: 0 Op: [ of type int [line: 43]					   |	42315
.   .   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21] [l   |	42351
.   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -23 size: 1] [line: 43]	   |	42513
.   .   .   .   .   .   Child: 1 Op: [ of type int [line: 43]					   |	42531
.   .   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21] [l   |	43125
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 43]				   |	43152
.   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -23 size: 1] [line:    |	43215
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 43]				   |	43251
.   .   .   .   .   Child: 1 Assign: = of type int [line: 43]					   |	43512
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -23 size: 1] [line: 43]	   |	43521
.   .   .   .   .   .   Child: 1 Op: - of type int [line: 43]					   |	45123
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -23 size: 1] [line: 43]	   |	45132
.   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 43]				   |	45213
.   .   .   .   Sibling: 3 Assign: = of type int [line: 45]					   |	45231
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -24 size: 1] [line: 45]		   |	45312
.   .   .   .   .   Child: 1 Id: n of type int [mem: Global loc: 0 size: 1] [line: 45]		   |	45321
.   .   .   .   Sibling: 4 While [line: 46]							   |	51234
.   .   .   .   .   Child: 0 Op: > of type bool [line: 46]					   |	51243
.   .   .   .   .   .   Child: 0 Op: [ of type int [line: 46]					   |	51324
.   .   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21] [l   |	51342
.   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -23 size: 1] [line: 46]	   |	51423
.   .   .   .   .   .   Child: 1 Op: [ of type int [line: 46]					   |	51432
.   .   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21] [l   |	52134
.   .   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -24 size: 1] [line: 46]	   |	52143
.   .   .   .   .   Child: 1 Assign: = of type int [line: 46]					   |	52314
.   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -24 size: 1] [line: 46]	   |	52341
.   .   .   .   .   .   Child: 1 Op: - of type int [line: 46]					   |	52413
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -24 size: 1] [line: 46]	   |	52431
.   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 46]				   |	53124
.   .   .   .   Sibling: 5 Assign: = of type int [line: 48]					   |	53142
.   .   .   .   .   Child: 0 Id: tmp of type int [mem: Local loc: -27 size: 1] [line: 48]	   |	53214
.   .   .   .   .   Child: 1 Op: [ of type int [line: 48]					   |	53241
.   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21] [line:   |	53412
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -23 size: 1] [line: 48]	   |	53421
.   .   .   .   Sibling: 6 Assign: = of type int [line: 48]					   |	54123
.   .   .   .   .   Child: 0 Op: [ of type int [line: 48]					   |	54132
.   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21] [line:   |	54213
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -23 size: 1] [line: 48]	   |	54231
.   .   .   .   .   Child: 1 Op: [ of type int [line: 48]					   |	54312
.   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21] [line:   |	54321
.   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -24 size: 1] [line: 48]	   |	Bye.
.   .   .   .   Sibling: 7 Assign: = of type int [line: 48]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 48]					   <
.   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21] [line:   <
.   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -24 size: 1] [line: 48]	   <
.   .   .   .   .   Child: 1 Id: tmp of type int [mem: Local loc: -27 size: 1] [line: 48]	   <
.   .   .   .   Sibling: 8 Assign: = of type int [line: 50]					   <
.   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -25 size: 1] [line: 50]		   <
.   .   .   .   .   Child: 1 Id: n of type int [mem: Global loc: 0 size: 1] [line: 50]		   <
.   .   .   .   Sibling: 9 Assign: = of type int [line: 51]					   <
.   .   .   .   .   Child: 0 Id: s of type int [mem: Local loc: -26 size: 1] [line: 51]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 51]					   <
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -23 size: 1] [line: 51]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 51]					   <
.   .   .   .   Sibling: 10 While [line: 52]							   <
.   .   .   .   .   Child: 0 Op: > of type bool [line: 52]					   <
.   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -25 size: 1] [line: 52]	   <
.   .   .   .   .   .   Child: 1 Id: s of type int [mem: Local loc: -26 size: 1] [line: 52]	   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -28] [line: 52]			   <
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 53]				   <
.   .   .   .   .   .   .   Child: 0 Id: tmp of type int [mem: Local loc: -27 size: 1] [line: 53   <
.   .   .   .   .   .   .   Child: 1 Op: [ of type int [line: 53]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21   <
.   .   .   .   .   .   .   .   Child: 1 Id: r of type int [mem: Local loc: -25 size: 1] [line:    <
.   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 53]				   <
.   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 53]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21   <
.   .   .   .   .   .   .   .   Child: 1 Id: r of type int [mem: Local loc: -25 size: 1] [line:    <
.   .   .   .   .   .   .   Child: 1 Op: [ of type int [line: 53]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21   <
.   .   .   .   .   .   .   .   Child: 1 Id: s of type int [mem: Local loc: -26 size: 1] [line:    <
.   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 53]				   <
.   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 53]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: p of array of type int [mem: Local loc: -3 size: 21   <
.   .   .   .   .   .   .   .   Child: 1 Id: s of type int [mem: Local loc: -26 size: 1] [line:    <
.   .   .   .   .   .   .   Child: 1 Id: tmp of type int [mem: Local loc: -27 size: 1] [line: 53   <
.   .   .   .   .   .   Sibling: 3 Assign: = of type int [line: 54]				   <
.   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -25 size: 1] [line: 54]	   <
.   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 54]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -25 size: 1] [line:    <
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 54]				   <
.   .   .   .   .   .   Sibling: 4 Assign: = of type int [line: 55]				   <
.   .   .   .   .   .   .   Child: 0 Id: s of type int [mem: Local loc: -26 size: 1] [line: 55]	   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 55]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: s of type int [mem: Local loc: -26 size: 1] [line:    <
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 55]				   <
Offset for end of global space: -1								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: pi.c-
-rwxrwx--- 1 root vboxsf  1058 Apr 30 16:30 pi.c-
-rwxrwx--- 1 root vboxsf   278 May  2 10:26 pi.expected
-rwxrwx--- 1 root vboxsf    17 Dec  1  2014 pi.in
-rwxrwx--- 1 root vboxsf 12755 May  4  2021 pi.mem
-rwxrwx--- 1 root vboxsf 12792 May  4  2021 pi.out
pi.out ztmp4778.txt differ: byte 52, line 2
pi (Output DIFF)
WARNING(4): The variable 'k' seems not to be used.							WARNING(4): The variable 'k' seems not to be used.
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: pi.tm
.   Child: 1 Compound [mem: None loc: 0 size: -352] [line: 2]					   |	0
.   .   Child: 0 Var: N of type int [mem: Local loc: -2 size: 1] [line: 3]			   |	3
.   .   Sibling: 1 Var: LEN of type int [mem: Local loc: -3 size: 1] [line: 3]			   |	1
.   .   Sibling: 2 Var: i of type int [mem: Local loc: -4 size: 1] [line: 4]			   |	4
.   .   Sibling: 3 Var: j of type int [mem: Local loc: -5 size: 1] [line: 4]			   |	1
.   .   Sibling: 4 Var: k of type int [mem: Local loc: -6 size: 1] [line: 4]			   |	5
.   .   Sibling: 5 Var: q of type int [mem: Local loc: -7 size: 1] [line: 4]			   |	9
.   .   Sibling: 6 Var: x of type int [mem: Local loc: -8 size: 1] [line: 4]			   |	2
.   .   Sibling: 7 Var: nines of type int [mem: Local loc: -9 size: 1] [line: 4]		   |	6
.   .   Sibling: 8 Var: predigit of type int [mem: Local loc: -10 size: 1] [line: 4]		   |	5
.   .   Sibling: 9 Var: a of array of type int [mem: Local loc: -12 size: 341] [line: 5]	   |	3
.   .   Child: 1 Assign: = of type int [line: 7]						   |	5
.   .   .   Child: 0 Id: N of type int [mem: Local loc: -2 size: 1] [line: 7]			   |	8
.   .   .   Child: 1 Const 100 of type int [line: 7]						   |	9
.   .   Sibling: 1 Assign: = of type int [line: 8]						   |	7
.   .   .   Child: 0 Id: LEN of type int [mem: Local loc: -3 size: 1] [line: 8]			   |	9
.   .   .   Child: 1 Op: / of type int [line: 8]						   |	3
.   .   .   .   Child: 0 Op: * of type int [line: 8]						   |	2
.   .   .   .   .   Child: 0 Id: N of type int [mem: Local loc: -2 size: 1] [line: 8]		   |	3
.   .   .   .   .   Child: 1 Const 10 of type int [line: 8]					   |	8
.   .   .   .   Child: 1 Const 3 of type int [line: 8]						   |	4
.   .   Sibling: 2 Assign: = of type int [line: 10]						   |	6
.   .   .   Child: 0 Id: j of type int [mem: Local loc: -5 size: 1] [line: 10]			   |	2
.   .   .   Child: 1 Const 0 of type int [line: 10]						   |	6
.   .   Sibling: 3 While [line: 11]								   |	4
.   .   .   Child: 0 Op: < of type bool [line: 11]						   |	3
.   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -5 size: 1] [line: 11]		   |	3
.   .   .   .   Child: 1 Id: LEN of type int [mem: Local loc: -3 size: 1] [line: 11]		   |	8
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -352] [line: 11]				   |	3
.   .   .   .   Child: 1 Assign: = of type int [line: 12]					   |	2
.   .   .   .   .   Child: 0 Op: [ of type int [line: 12]					   |	7
.   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -12 size: 341] [lin   |	9
.   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -5 size: 1] [line: 12]	   |	5
.   .   .   .   .   Child: 1 Const 2 of type int [line: 12]					   |	0
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 13]					   |	2
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -5 size: 1] [line: 13]		   |	8
.   .   Sibling: 4 Assign: = of type int [line: 16]						   |	8
.   .   .   Child: 0 Id: nines of type int [mem: Local loc: -9 size: 1] [line: 16]		   |	4
.   .   .   Child: 1 Const 0 of type int [line: 16]						   |	1
.   .   Sibling: 5 Assign: = of type int [line: 16]						   |	9
.   .   .   Child: 0 Id: predigit of type int [mem: Local loc: -10 size: 1] [line: 16]		   |	7
.   .   .   Child: 1 Const 0 of type int [line: 16]						   |	1
.   .   Sibling: 6 Assign: = of type int [line: 17]						   |	6
.   .   .   Child: 0 Id: j of type int [mem: Local loc: -5 size: 1] [line: 17]			   |	9
.   .   .   Child: 1 Const 0 of type int [line: 17]						   |	3
.   .   Sibling: 7 While [line: 18]								   |	9
.   .   .   Child: 0 Op: < of type bool [line: 18]						   |	9
.   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -5 size: 1] [line: 18]		   |	3
.   .   .   .   Child: 1 Id: N of type int [mem: Local loc: -2 size: 1] [line: 18]		   |	7
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -352] [line: 18]				   |	5
.   .   .   .   Child: 1 Assign: = of type int [line: 19]					   |	1
.   .   .   .   .   Child: 0 Id: q of type int [mem: Local loc: -7 size: 1] [line: 19]		   |	0
.   .   .   .   .   Child: 1 Const 0 of type int [line: 19]					   |	5
.   .   .   .   Sibling: 1 Assign: = of type int [line: 20]					   |	8
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 20]		   |	2
.   .   .   .   .   Child: 1 Id: LEN of type int [mem: Local loc: -3 size: 1] [line: 20]	   |	0
.   .   .   .   Sibling: 2 While [line: 21]							   |	9
.   .   .   .   .   Child: 0 Op: > of type bool [line: 21]					   |	7
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 21]	   |	4
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 21]					   |	9
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -352] [line: 21]			   |	4
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 22]				   |	4
.   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -8 size: 1] [line: 22]	   |	5
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 22]				   |	9
.   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 22]				   |	2
.   .   .   .   .   .   .   .   .   Child: 0 Const 10 of type int [line: 22]			   |	3
.   .   .   .   .   .   .   .   .   Child: 1 Op: [ of type int [line: 22]			   |	0
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -12   |	7
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 22]			   |	8
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size:   |	1
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 22]		   |	6
.   .   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 22]				   |	4
.   .   .   .   .   .   .   .   .   Child: 0 Id: q of type int [mem: Local loc: -7 size: 1] [lin   |	0
.   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [lin   |	6
.   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 23]				   |	2
.   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 23]				   |	8
.   .   .   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -12 size: 3   |	6
.   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 23]				   |	2
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [lin   |	0
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 23]			   |	8
.   .   .   .   .   .   .   Child: 1 Op: % of type int [line: 23]				   |	9
.   .   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -8 size: 1] [line: 2   |	9
.   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 23]				   |	8
.   .   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 23]			   |	6
.   .   .   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 23]			   |	2
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1]    |	8
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 23]			   |	0
.   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 24]				   |	3
.   .   .   .   .   .   .   Child: 0 Id: q of type int [mem: Local loc: -7 size: 1] [line: 24]	   |	4
.   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 24]				   |	8
.   .   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -8 size: 1] [line: 2   |	2
.   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 24]				   |	5
.   .   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 24]			   |	3
.   .   .   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 24]			   |	4
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1]    |	2
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 24]			   |	1
.   .   .   .   .   .   Sibling: 3 Assign: -= of type int [line: 25]				   |	1
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 25]	   |	7
.   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 25]				   |	0
.   .   .   .   Sibling: 3 Assign: = of type int [line: 28]					   |	6
.   .   .   .   .   Child: 0 Op: [ of type int [line: 28]					   |	7
.   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Local loc: -12 size: 341] [lin   |	Bye.
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 28]					   <
.   .   .   .   .   Child: 1 Op: % of type int [line: 28]					   <
.   .   .   .   .   .   Child: 0 Id: q of type int [mem: Local loc: -7 size: 1] [line: 28]	   <
.   .   .   .   .   .   Child: 1 Const 10 of type int [line: 28]				   <
.   .   .   .   Sibling: 4 Assign: = of type int [line: 28]					   <
.   .   .   .   .   Child: 0 Id: q of type int [mem: Local loc: -7 size: 1] [line: 28]		   <
.   .   .   .   .   Child: 1 Op: / of type int [line: 28]					   <
.   .   .   .   .   .   Child: 0 Id: q of type int [mem: Local loc: -7 size: 1] [line: 28]	   <
.   .   .   .   .   .   Child: 1 Const 10 of type int [line: 28]				   <
.   .   .   .   Sibling: 5 If [line: 30]							   <
.   .   .   .   .   Child: 0 Op: == of type bool [line: 30]					   <
.   .   .   .   .   .   Child: 0 Id: q of type int [mem: Local loc: -7 size: 1] [line: 30]	   <
.   .   .   .   .   .   Child: 1 Const 9 of type int [line: 30]					   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -352] [line: 30]			   <
.   .   .   .   .   .   Child: 1 Assign: ++ of type int [line: 31]				   <
.   .   .   .   .   .   .   Child: 0 Id: nines of type int [mem: Local loc: -9 size: 1] [line: 3   <
.   .   .   .   .   Child: 2 Compound [mem: None loc: 0 size: -352] [line: 33]			   <
.   .   .   .   .   .   Child: 1 If [line: 34]							   <
.   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 34]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: q of type int [mem: Local loc: -7 size: 1] [line: 3   <
.   .   .   .   .   .   .   .   Child: 1 Const 10 of type int [line: 34]			   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -352] [line: 34]		   <
.   .   .   .   .   .   .   .   Child: 1 Call: output of type void [line: 35]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 35]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: predigit of type int [mem: Local loc: -10 s   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 35]			   <
.   .   .   .   .   .   .   .   Sibling: 1 Call: outnl of type void [line: 35]			   <
.   .   .   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 36]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: predigit of type int [mem: Local loc: -10 size:   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 36]			   <
.   .   .   .   .   .   .   .   Sibling: 3 While [line: 37]					   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: > of type bool [line: 37]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: nines of type int [mem: Local loc: -9 size:   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 37]			   <
.   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -352] [line: 37]	   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Call: output of type void [line: 38]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Const 0 of type int [line: 38]		   <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 Call: outnl of type void [line: 38]		   <
.   .   .   .   .   .   .   .   .   .   Sibling: 2 Assign: -- of type int [line: 39]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: nines of type int [mem: Local loc: -9 s   <
.   .   .   .   .   .   .   Child: 2 Compound [mem: None loc: 0 size: -352] [line: 42]		   <
.   .   .   .   .   .   .   .   Child: 1 Call: output of type void [line: 43]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: predigit of type int [mem: Local loc: -10 size:   <
.   .   .   .   .   .   .   .   Sibling: 1 Call: outnl of type void [line: 43]			   <
.   .   .   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 44]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: predigit of type int [mem: Local loc: -10 size:   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: q of type int [mem: Local loc: -7 size: 1] [lin   <
.   .   .   .   .   .   .   .   Sibling: 3 While [line: 45]					   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: > of type bool [line: 45]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: nines of type int [mem: Local loc: -9 size:   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 45]			   <
.   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -352] [line: 45]	   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Call: output of type void [line: 46]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Const 9 of type int [line: 46]		   <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 Call: outnl of type void [line: 46]		   <
.   .   .   .   .   .   .   .   .   .   Sibling: 2 Assign: -- of type int [line: 47]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: nines of type int [mem: Local loc: -9 s   <
.   .   .   .   Sibling: 6 Assign: ++ of type int [line: 51]					   <
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -5 size: 1] [line: 51]		   <
.   .   Sibling: 8 Call: output of type void [line: 53]						   <
.   .   .   Child: 0 Id: predigit of type int [mem: Local loc: -10 size: 1] [line: 53]		   <
.   .   Sibling: 9 Call: outnl of type void [line: 54]						   <
Offset for end of global space: 0								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: poker.c-
-rwxrwx--- 1 root vboxsf  2980 May  2 09:28 poker.c-
-rwxrwx--- 1 root vboxsf   151 May  2 10:26 poker.expected
-rwxrwx--- 1 root vboxsf    19 Dec  1  2014 poker.in
-rwxrwx--- 1 root vboxsf 37423 May  4  2021 poker.mem
-rwxrwx--- 1 root vboxsf 37460 May  4  2021 poker.out
poker.out ztmp4778.txt differ: byte 1, line 1
poker (Output DIFF)
Var: numSuits of type int [mem: Global loc: 0 size: 1] [line: 4]				   |	Loading file: poker.tm
Sibling: 1 Var: numPips of type int [mem: Global loc: -1 size: 1] [line: 4]			   |	0
Sibling: 2 Var: numCards of type int [mem: Global loc: -2 size: 1] [line: 4]			   |	1
Sibling: 3 Func: suit returns type int [mem: Global loc: 0 size: -3] [line: 6]			   |	2
.   Child: 0 Parm: c of type int [mem: Parameter loc: -2 size: 1] [line: 6]			   |	3
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 6]					   |	4
.   .   Child: 1 Return [line: 6]								   |	5
.   .   .   Child: 0 Op: % of type int [line: 6]						   |	6
.   .   .   .   Child: 0 Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 6]		   |	7
.   .   .   .   Child: 1 Id: numSuits of type int [mem: Global loc: 0 size: 1] [line: 6]	   |	8
Sibling: 4 Func: pips returns type int [mem: Global loc: 0 size: -3] [line: 7]			   |	9
.   Child: 0 Parm: c of type int [mem: Parameter loc: -2 size: 1] [line: 7]			   |	10
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 7]					   |	11
.   .   Child: 1 Return [line: 7]								   |	12
.   .   .   Child: 0 Op: / of type int [line: 7]						   |	13
.   .   .   .   Child: 0 Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 7]		   |	14
.   .   .   .   Child: 1 Id: numSuits of type int [mem: Global loc: 0 size: 1] [line: 7]	   |	15
Sibling: 5 Func: p returns type bool [mem: Global loc: 0 size: -4] [line: 9]			   |	16
.   Child: 0 Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 9]			   |	17
.   Sibling: 1 Parm: b of type int [mem: Parameter loc: -3 size: 1] [line: 9]			   |	18
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 9]					   |	19
.   .   Child: 1 Return [line: 9]								   |	20
.   .   .   Child: 0 Op: == of type bool [line: 9]						   |	21
.   .   .   .   Child: 0 Call: pips of type int [line: 9]					   |	22
.   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 9]	   |	23
.   .   .   .   Child: 1 Call: pips of type int [line: 9]					   |	0 4
.   .   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 9]	   |	1 8
Sibling: 6 Func: ppp returns type bool [mem: Global loc: 0 size: -5] [line: 10]			   |	2 120
.   Child: 0 Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 10]			   |	3 720
.   Sibling: 1 Parm: b of type int [mem: Parameter loc: -3 size: 1] [line: 10]			   |	4 12
.   Sibling: 2 Parm: c of type int [mem: Parameter loc: -4 size: 1] [line: 10]			   |	5 3060
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 10]					   |	6 3840
.   .   Child: 1 Return [line: 10]								   |	7 8640
.   .   .   Child: 0 Op: and of type bool [line: 10]						   |	8 23040
.   .   .   .   Child: 0 Call: p of type bool [line: 10]					   |	9 3060
.   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 10]	   |	Bye.
.   .   .   .   .   Sibling: 1 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 10]	   <
.   .   .   .   Child: 1 Call: p of type bool [line: 10]					   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 10]	   <
.   .   .   .   .   Sibling: 1 Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 10]	   <
Sibling: 7 Func: pppp returns type bool [mem: Global loc: 0 size: -6] [line: 11]		   <
.   Child: 0 Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 11]			   <
.   Sibling: 1 Parm: b of type int [mem: Parameter loc: -3 size: 1] [line: 11]			   <
.   Sibling: 2 Parm: c of type int [mem: Parameter loc: -4 size: 1] [line: 11]			   <
.   Sibling: 3 Parm: d of type int [mem: Parameter loc: -5 size: 1] [line: 11]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 11]					   <
.   .   Child: 1 Return [line: 11]								   <
.   .   .   Child: 0 Op: and of type bool [line: 11]						   <
.   .   .   .   Child: 0 Op: and of type bool [line: 11]					   <
.   .   .   .   .   Child: 0 Call: p of type bool [line: 11]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 11]	   <
.   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 11]   <
.   .   .   .   .   Child: 1 Call: p of type bool [line: 11]					   <
.   .   .   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 11]	   <
.   .   .   .   .   .   Sibling: 1 Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 11]   <
.   .   .   .   Child: 1 Call: p of type bool [line: 11]					   <
.   .   .   .   .   Child: 0 Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 11]	   <
.   .   .   .   .   Sibling: 1 Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 11]	   <
Sibling: 8 Func: handtype returns type int [mem: Global loc: 0 size: -7] [line: 13]		   <
.   Child: 0 Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 13]			   <
.   Sibling: 1 Parm: b of type int [mem: Parameter loc: -3 size: 1] [line: 13]			   <
.   Sibling: 2 Parm: c of type int [mem: Parameter loc: -4 size: 1] [line: 13]			   <
.   Sibling: 3 Parm: d of type int [mem: Parameter loc: -5 size: 1] [line: 13]			   <
.   Sibling: 4 Parm: e of type int [mem: Parameter loc: -6 size: 1] [line: 13]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 14]					   <
.   .   Child: 0 Var: isflush of type bool [mem: Local loc: -7 size: 1] [line: 15]		   <
.   .   Child: 1 Assign: = of type bool [line: 17]						   <
.   .   .   Child: 0 Id: isflush of type bool [mem: Local loc: -7 size: 1] [line: 17]		   <
.   .   .   Child: 1 Op: and of type bool [line: 19]						   <
.   .   .   .   Child: 0 Op: and of type bool [line: 18]					   <
.   .   .   .   .   Child: 0 Op: and of type bool [line: 17]					   <
.   .   .   .   .   .   Child: 0 Op: == of type bool [line: 17]					   <
.   .   .   .   .   .   .   Child: 0 Call: suit of type int [line: 17]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   Child: 1 Call: suit of type int [line: 17]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [lin   <
.   .   .   .   .   .   Child: 1 Op: == of type bool [line: 18]					   <
.   .   .   .   .   .   .   Child: 0 Call: suit of type int [line: 18]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   Child: 1 Call: suit of type int [line: 18]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Parameter loc: -4 size: 1] [lin   <
.   .   .   .   .   Child: 1 Op: == of type bool [line: 19]					   <
.   .   .   .   .   .   Child: 0 Call: suit of type int [line: 19]				   <
.   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 1   <
.   .   .   .   .   .   Child: 1 Call: suit of type int [line: 19]				   <
.   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 1   <
.   .   .   .   Child: 1 Op: == of type bool [line: 20]						   <
.   .   .   .   .   Child: 0 Call: suit of type int [line: 20]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 20]	   <
.   .   .   .   .   Child: 1 Call: suit of type int [line: 20]					   <
.   .   .   .   .   .   Child: 0 Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 20]	   <
.   .   Sibling: 1 If [line: 23]								   <
.   .   .   Child: 0 Op: and of type bool [line: 23]						   <
.   .   .   .   Child: 0 Op: and of type bool [line: 23]					   <
.   .   .   .   .   Child: 0 Op: and of type bool [line: 23]					   <
.   .   .   .   .   .   Child: 0 Id: isflush of type bool [mem: Local loc: -7 size: 1] [line: 23   <
.   .   .   .   .   .   Child: 1 Op: == of type bool [line: 23]					   <
.   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 23]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 23]				   <
.   .   .   .   .   Child: 1 Op: == of type bool [line: 23]					   <
.   .   .   .   .   .   Child: 0 Call: pips of type int [line: 23]				   <
.   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 2   <
.   .   .   .   .   .   Child: 1 Op: - of type int [line: 23]					   <
.   .   .   .   .   .   .   Child: 0 Id: numPips of type int [mem: Global loc: -1 size: 1] [line   <
.   .   .   .   .   .   .   Child: 1 Const 4 of type int [line: 23]				   <
.   .   .   .   Child: 1 Op: == of type bool [line: 23]						   <
.   .   .   .   .   Child: 0 Call: pips of type int [line: 23]					   <
.   .   .   .   .   .   Child: 0 Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 23]	   <
.   .   .   .   .   Child: 1 Op: - of type int [line: 23]					   <
.   .   .   .   .   .   Child: 0 Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 23   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 23]					   <
.   .   .   Child: 1 Return [line: 24]								   <
.   .   .   .   Child: 0 Const 0 of type int [line: 24]						   <
.   .   .   Child: 2 If [line: 27]								   <
.   .   .   .   Child: 0 Op: and of type bool [line: 27]					   <
.   .   .   .   .   Child: 0 Id: isflush of type bool [mem: Local loc: -7 size: 1] [line: 27]	   <
.   .   .   .   .   Child: 1 Op: == of type bool [line: 27]					   <
.   .   .   .   .   .   Child: 0 Call: pips of type int [line: 27]				   <
.   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 2   <
.   .   .   .   .   .   Child: 1 Op: - of type int [line: 27]					   <
.   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 27]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: e of type int [mem: Parameter loc: -6 size: 1] [lin   <
.   .   .   .   .   .   .   Child: 1 Const 4 of type int [line: 27]				   <
.   .   .   .   Child: 1 Return [line: 28]							   <
.   .   .   .   .   Child: 0 Const 1 of type int [line: 28]					   <
.   .   .   .   Child: 2 If [line: 31]								   <
.   .   .   .   .   Child: 0 Op: or of type bool [line: 31]					   <
.   .   .   .   .   .   Child: 0 Call: pppp of type bool [line: 31]				   <
.   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 3   <
.   .   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: Parameter loc: -3 size: 1] [line:   <
.   .   .   .   .   .   .   Sibling: 2 Id: c of type int [mem: Parameter loc: -4 size: 1] [line:   <
.   .   .   .   .   .   .   Sibling: 3 Id: d of type int [mem: Parameter loc: -5 size: 1] [line:   <
.   .   .   .   .   .   Child: 1 Call: pppp of type bool [line: 31]				   <
.   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 3   <
.   .   .   .   .   .   .   Sibling: 1 Id: c of type int [mem: Parameter loc: -4 size: 1] [line:   <
.   .   .   .   .   .   .   Sibling: 2 Id: d of type int [mem: Parameter loc: -5 size: 1] [line:   <
.   .   .   .   .   .   .   Sibling: 3 Id: e of type int [mem: Parameter loc: -6 size: 1] [line:   <
.   .   .   .   .   Child: 1 Return [line: 32]							   <
.   .   .   .   .   .   Child: 0 Const 2 of type int [line: 32]					   <
.   .   .   .   .   Child: 2 If [line: 35]							   <
.   .   .   .   .   .   Child: 0 Op: or of type bool [line: 35]					   <
.   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 35]				   <
.   .   .   .   .   .   .   .   Child: 0 Call: ppp of type bool [line: 35]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1]    <
.   .   .   .   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: Parameter loc: -3 size: 1   <
.   .   .   .   .   .   .   .   .   Sibling: 2 Id: c of type int [mem: Parameter loc: -4 size: 1   <
.   .   .   .   .   .   .   .   Child: 1 Call: p of type bool [line: 35]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Parameter loc: -5 size: 1]    <
.   .   .   .   .   .   .   .   .   Sibling: 1 Id: e of type int [mem: Parameter loc: -6 size: 1   <
.   .   .   .   .   .   .   Child: 1 Op: and of type bool [line: 35]				   <
.   .   .   .   .   .   .   .   Child: 0 Call: p of type bool [line: 35]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1]    <
.   .   .   .   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: Parameter loc: -3 size: 1   <
.   .   .   .   .   .   .   .   Child: 1 Call: ppp of type bool [line: 35]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Parameter loc: -4 size: 1]    <
.   .   .   .   .   .   .   .   .   Sibling: 1 Id: d of type int [mem: Parameter loc: -5 size: 1   <
.   .   .   .   .   .   .   .   .   Sibling: 2 Id: e of type int [mem: Parameter loc: -6 size: 1   <
.   .   .   .   .   .   Child: 1 Return [line: 36]						   <
.   .   .   .   .   .   .   Child: 0 Const 3 of type int [line: 36]				   <
.   .   .   .   .   .   Child: 2 If [line: 39]							   <
.   .   .   .   .   .   .   Child: 0 Id: isflush of type bool [mem: Local loc: -7 size: 1] [line   <
.   .   .   .   .   .   .   Child: 1 Return [line: 40]						   <
.   .   .   .   .   .   .   .   Child: 0 Const 4 of type int [line: 40]				   <
.   .   .   .   .   .   .   Child: 2 If [line: 43]						   <
.   .   .   .   .   .   .   .   Child: 0 Op: or of type bool [line: 43]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 43]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 43]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 43]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 43]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Paramet   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 4   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Par   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 43]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Paramet   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 4   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Par   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 43]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Parameter l   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 43]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Paramet   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 43]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 43]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Parameter loc:    <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 43]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: e of type int [mem: Parameter l   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 43]		   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: and of type bool [line: 44]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 44]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 44]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 44]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 44]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 4   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Par   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 44]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 44]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 4   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Par   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 44]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: numPips of type int [me   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 4 of type int [line:    <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 44]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 44]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Paramet   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 44]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: numPips of type int [mem: G   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 3 of type int [line: 44]	   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 44]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 44]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Parameter l   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 44]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: numPips of type int [mem: Globa   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 44]	   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 44]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: pips of type int [line: 44]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: e of type int [mem: Parameter loc:    <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 44]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: numPips of type int [mem: Global lo   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 44]		   <
.   .   .   .   .   .   .   .   Child: 1 Return [line: 46]					   <
.   .   .   .   .   .   .   .   .   Child: 0 Const 5 of type int [line: 46]			   <
.   .   .   .   .   .   .   .   Child: 2 If [line: 49]						   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: or of type bool [line: 49]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: or of type bool [line: 49]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: ppp of type bool [line: 49]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc:    <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: Parameter loc   <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2 Id: c of type int [mem: Parameter loc   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: ppp of type bool [line: 49]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc:    <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: c of type int [mem: Parameter loc   <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2 Id: d of type int [mem: Parameter loc   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Call: ppp of type bool [line: 49]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Parameter loc: -4 s   <
.   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: d of type int [mem: Parameter loc: -5   <
.   .   .   .   .   .   .   .   .   .   .   Sibling: 2 Id: e of type int [mem: Parameter loc: -6   <
.   .   .   .   .   .   .   .   .   Child: 1 Return [line: 50]					   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Const 6 of type int [line: 50]			   <
.   .   .   .   .   .   .   .   .   Child: 2 If [line: 53]					   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: or of type bool [line: 53]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: or of type bool [line: 53]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 53]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: p of type bool [line: 53]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Paramet   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: Param   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: p of type bool [line: 53]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Paramet   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: d of type int [mem: Param   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: and of type bool [line: 53]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: p of type bool [line: 53]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Paramet   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: Param   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: p of type bool [line: 53]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Paramet   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: e of type int [mem: Param   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: and of type bool [line: 53]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: p of type bool [line: 53]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Parameter l   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: c of type int [mem: Parameter   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: p of type bool [line: 53]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Parameter l   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: e of type int [mem: Parameter   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Return [line: 54]				   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Const 7 of type int [line: 54]		   <
.   .   .   .   .   .   .   .   .   .   Child: 2 If [line: 57]					   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: or of type bool [line: 57]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: or of type bool [line: 57]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: or of type bool [line: 57]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: p of type bool [line: 57]   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Par   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: P   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: p of type bool [line: 57]   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Par   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: c of type int [mem: P   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: p of type bool [line: 57]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Paramet   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: d of type int [mem: Param   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: p of type bool [line: 57]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Parameter l   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: e of type int [mem: Parameter   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Return [line: 58]				   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Const 8 of type int [line: 58]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 2 Return [line: 60]				   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Const 9 of type int [line: 60]		   <
Sibling: 9 Func: main returns type int [mem: Global loc: 0 size: -2] [line: 63]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -21] [line: 64]					   <
.   .   Child: 0 Var: hands of array of type int [mem: Local loc: -3 size: 11] [line: 65]	   <
.   .   Sibling: 1 Var: a of type int [mem: Local loc: -13 size: 1] [line: 66]			   <
.   .   Sibling: 2 Var: b of type int [mem: Local loc: -14 size: 1] [line: 66]			   <
.   .   Sibling: 3 Var: c of type int [mem: Local loc: -15 size: 1] [line: 66]			   <
.   .   Sibling: 4 Var: d of type int [mem: Local loc: -16 size: 1] [line: 66]			   <
.   .   Sibling: 5 Var: e of type int [mem: Local loc: -17 size: 1] [line: 66]			   <
.   .   Sibling: 6 Var: h of type int [mem: Local loc: -18 size: 1] [line: 66]			   <
.   .   Sibling: 7 Var: possible of type int [mem: Local loc: -19 size: 1] [line: 66]		   <
.   .   Sibling: 8 Var: i of type int [mem: Local loc: -20 size: 1] [line: 66]			   <
.   .   Child: 1 Assign: = of type int [line: 68]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -20 size: 1] [line: 68]			   <
.   .   .   Child: 1 Const 0 of type int [line: 68]						   <
.   .   Sibling: 1 While [line: 69]								   <
.   .   .   Child: 0 Op: < of type bool [line: 69]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -20 size: 1] [line: 69]		   <
.   .   .   .   Child: 1 Const 10 of type int [line: 69]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -21] [line: 69]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 70]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 70]					   <
.   .   .   .   .   .   Child: 0 Id: hands of array of type int [mem: Local loc: -3 size: 11] [l   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -20 size: 1] [line: 70]	   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 70]					   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 71]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -20 size: 1] [line: 71]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 71]					   <
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -20 size: 1] [line: 71]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 71]					   <
.   .   Sibling: 2 Assign: = of type int [line: 74]						   <
.   .   .   Child: 0 Id: numSuits of type int [mem: Global loc: 0 size: 1] [line: 74]		   <
.   .   .   Child: 1 Const 4 of type int [line: 74]						   <
.   .   Sibling: 3 Assign: = of type int [line: 75]						   <
.   .   .   Child: 0 Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 75]		   <
.   .   .   Child: 1 Const 6 of type int [line: 75]						   <
.   .   Sibling: 4 Assign: = of type int [line: 76]						   <
.   .   .   Child: 0 Id: numCards of type int [mem: Global loc: -2 size: 1] [line: 76]		   <
.   .   .   Child: 1 Op: - of type int [line: 76]						   <
.   .   .   .   Child: 0 Op: * of type int [line: 76]						   <
.   .   .   .   .   Child: 0 Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 76]	   <
.   .   .   .   .   Child: 1 Id: numSuits of type int [mem: Global loc: 0 size: 1] [line: 76]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 76]						   <
.   .   Sibling: 5 Assign: = of type int [line: 78]						   <
.   .   .   Child: 0 Id: possible of type int [mem: Local loc: -19 size: 1] [line: 78]		   <
.   .   .   Child: 1 Const 0 of type int [line: 78]						   <
.   .   Sibling: 6 Assign: = of type int [line: 79]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -13 size: 1] [line: 79]			   <
.   .   .   Child: 1 Const 0 of type int [line: 79]						   <
.   .   Sibling: 7 While [line: 80]								   <
.   .   .   Child: 0 Op: <= of type bool [line: 80]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -13 size: 1] [line: 80]		   <
.   .   .   .   Child: 1 Id: numCards of type int [mem: Global loc: -2 size: 1] [line: 80]	   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -21] [line: 80]				   <
.   .   .   .   Child: 1 Call: output of type void [line: 81]					   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -13 size: 1] [line: 81]		   <
.   .   .   .   Sibling: 1 Call: outnl of type void [line: 81]					   <
.   .   .   .   Sibling: 2 Assign: = of type int [line: 82]					   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -14 size: 1] [line: 82]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 82]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -13 size: 1] [line: 82]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 82]					   <
.   .   .   .   Sibling: 3 While [line: 83]							   <
.   .   .   .   .   Child: 0 Op: <= of type bool [line: 83]					   <
.   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -14 size: 1] [line: 83]	   <
.   .   .   .   .   .   Child: 1 Id: numCards of type int [mem: Global loc: -2 size: 1] [line: 8   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -21] [line: 83]			   <
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 84]				   <
.   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -15 size: 1] [line: 84]	   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 84]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -14 size: 1] [line:    <
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 84]				   <
.   .   .   .   .   .   Sibling: 1 While [line: 85]						   <
.   .   .   .   .   .   .   Child: 0 Op: <= of type bool [line: 85]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -15 size: 1] [line:    <
.   .   .   .   .   .   .   .   Child: 1 Id: numCards of type int [mem: Global loc: -2 size: 1]    <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -21] [line: 85]		   <
.   .   .   .   .   .   .   .   Child: 1 Assign: = of type int [line: 86]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Local loc: -16 size: 1] [li   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 86]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -15 size: 1]   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 86]			   <
.   .   .   .   .   .   .   .   Sibling: 1 While [line: 87]					   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: <= of type bool [line: 87]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Local loc: -16 size: 1]   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: numCards of type int [mem: Global loc: -2 s   <
.   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -21] [line: 87]	   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Assign: = of type int [line: 88]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: e of type int [mem: Local loc: -17 size   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 88]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Local loc: -16    <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 88]		   <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 While [line: 89]				   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: <= of type bool [line: 89]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: e of type int [mem: Local loc: -17    <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: numCards of type int [mem: Global l   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -21] [line   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Assign: = of type int [line: 90]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: possible of type int [mem: Loca   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 90]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: possible of type int [mem:    <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 90]	   <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 91]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: h of type int [mem: Local loc:    <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: handtype of type int [line: 9   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local l   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: Local   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2 Id: c of type int [mem: Local   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 3 Id: d of type int [mem: Local   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 4 Id: e of type int [mem: Local   <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 92]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 92]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: hands of array of type int    <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: h of type int [mem: Local l   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 92]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 92]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: hands of array of type    <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: h of type int [mem: Loc   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 92]	   <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 3 Assign: ++ of type int [line: 93]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: e of type int [mem: Local loc:    <
.   .   .   .   .   .   .   .   .   .   Sibling: 2 Assign: ++ of type int [line: 95]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: d of type int [mem: Local loc: -16 size   <
.   .   .   .   .   .   .   .   Sibling: 2 Assign: ++ of type int [line: 97]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -15 size: 1] [li   <
.   .   .   .   .   .   Sibling: 2 Assign: ++ of type int [line: 99]				   <
.   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -14 size: 1] [line: 99]	   <
.   .   .   .   Sibling: 4 Assign: ++ of type int [line: 101]					   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -13 size: 1] [line: 101]	   <
.   .   Sibling: 8 Assign: = of type int [line: 103]						   <
.   .   .   Child: 0 Id: h of type int [mem: Local loc: -18 size: 1] [line: 103]		   <
.   .   .   Child: 1 Const 0 of type int [line: 103]						   <
.   .   Sibling: 9 While [line: 104]								   <
.   .   .   Child: 0 Op: < of type bool [line: 104]						   <
.   .   .   .   Child: 0 Id: h of type int [mem: Local loc: -18 size: 1] [line: 104]		   <
.   .   .   .   Child: 1 Const 10 of type int [line: 104]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -21] [line: 104]				   <
.   .   .   .   Child: 1 Call: output of type void [line: 106]					   <
.   .   .   .   .   Child: 0 Id: h of type int [mem: Local loc: -18 size: 1] [line: 106]	   <
.   .   .   .   Sibling: 1 Call: output of type void [line: 107]				   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 107]					   <
.   .   .   .   .   .   Child: 0 Id: hands of array of type int [mem: Local loc: -3 size: 11] [l   <
.   .   .   .   .   .   Child: 1 Id: h of type int [mem: Local loc: -18 size: 1] [line: 107]	   <
.   .   .   .   Sibling: 2 Call: outnl of type void [line: 108]					   <
.   .   .   .   Sibling: 3 Assign: = of type int [line: 109]					   <
.   .   .   .   .   Child: 0 Id: h of type int [mem: Local loc: -18 size: 1] [line: 109]	   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 109]					   <
.   .   .   .   .   .   Child: 0 Id: h of type int [mem: Local loc: -18 size: 1] [line: 109]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 109]				   <
.   .   Sibling: 10 Return [line: 112]								   <
.   .   .   Child: 0 Const 0 of type int [line: 112]						   <
Offset for end of global space: -3								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: polynum.c-
-rwxrwx--- 1 root vboxsf   793 Apr 30 16:30 polynum.c-
-rwxrwx--- 1 root vboxsf    30 May  2 10:26 polynum.expected
-rwxrwx--- 1 root vboxsf 10081 May  4  2021 polynum.mem
-rwxrwx--- 1 root vboxsf 10118 May  4  2021 polynum.out
polynum.out ztmp4778.txt differ: byte 1, line 1
polynum (Output DIFF)
Func: main returns type int [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: polynum.tm
.   Child: 1 Compound [mem: None loc: 0 size: -11] [line: 2]					   |	Bye.
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 3]			   <
.   .   Sibling: 1 Var: m of type int [mem: Local loc: -3 size: 1] [line: 4]			   <
.   .   Sibling: 2 Var: t of type int [mem: Local loc: -4 size: 1] [line: 5]			   <
.   .   Sibling: 3 Var: x of type int [mem: Local loc: -5 size: 1] [line: 6]			   <
.   .   Sibling: 4 Var: tm of type int [mem: Local loc: -6 size: 1] [line: 7]			   <
.   .   Sibling: 5 Var: num of type int [mem: Local loc: -7 size: 1] [line: 8]			   <
.   .   Sibling: 6 Var: min of type int [mem: Local loc: -8 size: 1] [line: 9]			   <
.   .   Sibling: 7 Var: a of type int [mem: Local loc: -9 size: 1] [line: 10]			   <
.   .   Sibling: 8 Var: b of type int [mem: Local loc: -10 size: 1] [line: 11]			   <
.   .   Child: 1 Assign: = of type int [line: 13]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 13]			   <
.   .   .   Child: 1 Const 1 of type int [line: 13]						   <
.   .   Sibling: 1 Assign: = of type int [line: 14]						   <
.   .   .   Child: 0 Id: min of type int [mem: Local loc: -8 size: 1] [line: 14]		   <
.   .   .   Child: 1 Const 1 of type int [line: 14]						   <
.   .   Sibling: 2 While [line: 15]								   <
.   .   .   Child: 0 Op: < of type bool [line: 15]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 15]		   <
.   .   .   .   Child: 1 Const 2000 of type int [line: 15]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -11] [line: 15]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 16]					   <
.   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1] [line: 16]		   <
.   .   .   .   .   Child: 1 Const 2 of type int [line: 16]					   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 17]					   <
.   .   .   .   .   Child: 0 Id: tm of type int [mem: Local loc: -6 size: 1] [line: 17]		   <
.   .   .   .   .   Child: 1 Op: / of type int [line: 17]					   <
.   .   .   .   .   .   Child: 0 Op: * of type int [line: 17]					   <
.   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1] [line: 17]	   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 17]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1] [line: 1   <
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 17]				   <
.   .   .   .   .   .   Child: 1 Const 2 of type int [line: 17]					   <
.   .   .   .   Sibling: 2 Assign: = of type int [line: 18]					   <
.   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -5 size: 1] [line: 18]		   <
.   .   .   .   .   Child: 1 Op: - of type int [line: 18]					   <
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 18]	   <
.   .   .   .   .   .   Child: 1 Op: + of type int [line: 18]					   <
.   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1] [line: 18]	   <
.   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 18]				   <
.   .   .   .   Sibling: 3 Assign: = of type int [line: 19]					   <
.   .   .   .   .   Child: 0 Id: t of type int [mem: Local loc: -4 size: 1] [line: 19]		   <
.   .   .   .   .   Child: 1 Op: / of type int [line: 19]					   <
.   .   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -5 size: 1] [line: 19]	   <
.   .   .   .   .   .   Child: 1 Id: tm of type int [mem: Local loc: -6 size: 1] [line: 19]	   <
.   .   .   .   Sibling: 4 Assign: = of type int [line: 20]					   <
.   .   .   .   .   Child: 0 Id: num of type int [mem: Local loc: -7 size: 1] [line: 20]	   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 20]					   <
.   .   .   .   Sibling: 5 While [line: 21]							   <
.   .   .   .   .   Child: 0 Op: > of type bool [line: 21]					   <
.   .   .   .   .   .   Child: 0 Id: t of type int [mem: Local loc: -4 size: 1] [line: 21]	   <
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 21]					   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -11] [line: 21]			   <
.   .   .   .   .   .   Child: 1 If [line: 22]							   <
.   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 22]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 22]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: t of type int [mem: Local loc: -4 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: tm of type int [mem: Local loc: -6 size: 1] [li   <
.   .   .   .   .   .   .   .   Child: 1 Id: x of type int [mem: Local loc: -5 size: 1] [line: 2   <
.   .   .   .   .   .   .   Child: 1 Assign: = of type int [line: 22]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: num of type int [mem: Local loc: -7 size: 1] [line:   <
.   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 22]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: num of type int [mem: Local loc: -7 size: 1] [l   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 22]			   <
.   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 23]				   <
.   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1] [line: 23]	   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 23]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1] [line: 2   <
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 23]				   <
.   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 24]				   <
.   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -9 size: 1] [line: 24]	   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 24]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1] [line: 2   <
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 24]				   <
.   .   .   .   .   .   Sibling: 3 Assign: = of type int [line: 25]				   <
.   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -10 size: 1] [line: 25]	   <
.   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 25]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1] [line: 2   <
.   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 25]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 25]			   <
.   .   .   .   .   .   Sibling: 4 Assign: = of type int [line: 26]				   <
.   .   .   .   .   .   .   Child: 0 Id: tm of type int [mem: Local loc: -6 size: 1] [line: 26]	   <
.   .   .   .   .   .   .   Child: 1 Op: / of type int [line: 26]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 26]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 26]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1]    <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 26]			   <
.   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 26]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Const 1 of type int [line: 26]			   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 26]			   <
.   .   .   .   .   .   Sibling: 5 Assign: = of type int [line: 27]				   <
.   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -5 size: 1] [line: 27]	   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 27]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: - of type int [line: 27]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 27]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: m of type int [mem: Local loc: -3 size: 1]    <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 27]			   <
.   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 27]				   <
.   .   .   .   .   .   Sibling: 6 Assign: = of type int [line: 28]				   <
.   .   .   .   .   .   .   Child: 0 Id: t of type int [mem: Local loc: -4 size: 1] [line: 28]	   <
.   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 28]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: / of type int [line: 28]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -5 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: tm of type int [mem: Local loc: -6 size: 1] [li   <
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 28]				   <
.   .   .   .   Sibling: 6 If [line: 30]							   <
.   .   .   .   .   Child: 0 Op: >= of type bool [line: 30]					   <
.   .   .   .   .   .   Child: 0 Id: num of type int [mem: Local loc: -7 size: 1] [line: 30]	   <
.   .   .   .   .   .   Child: 1 Id: min of type int [mem: Local loc: -8 size: 1] [line: 30]	   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -11] [line: 30]			   <
.   .   .   .   .   .   Child: 1 Call: output of type void [line: 31]				   <
.   .   .   .   .   .   .   Child: 0 Id: num of type int [mem: Local loc: -7 size: 1] [line: 31]   <
.   .   .   .   .   .   Sibling: 1 Call: output of type void [line: 32]				   <
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 32]	   <
.   .   .   .   .   .   Sibling: 2 Call: output of type void [line: 33]				   <
.   .   .   .   .   .   .   Child: 0 Const 11111111 of type int [line: 33]			   <
.   .   .   .   .   .   Sibling: 3 Assign: = of type int [line: 34]				   <
.   .   .   .   .   .   .   Child: 0 Id: min of type int [mem: Local loc: -8 size: 1] [line: 34]   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 34]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: num of type int [mem: Local loc: -7 size: 1] [line:   <
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 34]				   <
.   .   .   .   Sibling: 7 Assign: = of type int [line: 36]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 36]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 36]					   <
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 36]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 36]					   <
.   .   Sibling: 3 Return [line: 38]								   <
.   .   .   Child: 0 Const 0 of type int [line: 38]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: proc.c-
-rwxrwx--- 1 root vboxsf  741 Apr 30 16:30 proc.c-
-rwxrwx--- 1 root vboxsf  155 May  2 10:26 proc.expected
-rwxrwx--- 1 root vboxsf 7239 May  4  2021 proc.mem
-rwxrwx--- 1 root vboxsf 7276 May  4  2021 proc.out
proc.out ztmp4778.txt differ: byte 103, line 3
proc (Output DIFF)
WARNING(8): The variable 'b' seems not to be used.							WARNING(8): The variable 'b' seems not to be used.
WARNING(9): The variable 'y' seems not to be used.							WARNING(9): The variable 'y' seems not to be used.
Func: square returns type int [mem: Global loc: 0 size: -3] [line: 1]				   |	Loading file: proc.tm
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]			   |	961
.   Child: 1 Return [line: 1]									   |	131
.   .   Child: 0 Op: * of type int [line: 1]							   |	1 T 666 0 666 7 7
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]		   |	Bye.
.   .   .   Child: 1 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]		   <
Sibling: 1 Func: max returns type int [mem: Global loc: 0 size: -4] [line: 2]			   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]			   <
.   Sibling: 1 Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 2]			   <
.   Child: 1 If [line: 2]									   <
.   .   Child: 0 Op: > of type bool [line: 2]							   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]		   <
.   .   .   Child: 1 Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 2]		   <
.   .   Child: 1 Return [line: 2]								   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]		   <
.   .   Child: 2 Return [line: 2]								   <
.   .   .   Child: 0 Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 2]		   <
Sibling: 2 Func: toInt returns type int [mem: Global loc: 0 size: -3] [line: 3]			   <
.   Child: 0 Parm: b of type bool [mem: Parameter loc: -2 size: 1] [line: 3]			   <
.   Child: 1 If [line: 3]									   <
.   .   Child: 0 Id: b of type bool [mem: Parameter loc: -2 size: 1] [line: 3]			   <
.   .   Child: 1 Return [line: 3]								   <
.   .   .   Child: 0 Const 1 of type int [line: 3]						   <
.   .   Child: 2 Return [line: 3]								   <
.   .   .   Child: 0 Const 0 of type int [line: 3]						   <
Sibling: 3 Func: toBool returns type bool [mem: Global loc: 0 size: -3] [line: 4]		   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 4]			   <
.   Child: 1 If [line: 4]									   <
.   .   Child: 0 Op: == of type bool [line: 4]							   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 4]		   <
.   .   .   Child: 1 Const 0 of type int [line: 4]						   <
.   .   Child: 1 Return [line: 4]								   <
.   .   .   Child: 0 Const false of type bool [line: 4]						   <
.   .   Child: 2 Return [line: 4]								   <
.   .   .   Child: 0 Const true of type bool [line: 4]						   <
Sibling: 4 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 6]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 7]					   <
.   .   Child: 0 Var: a of type bool [mem: Local loc: -2 size: 1] [line: 8]			   <
.   .   Sibling: 1 Var: b of type bool [mem: Local loc: -3 size: 1] [line: 8]			   <
.   .   Sibling: 2 Var: x of type int [mem: Local loc: -4 size: 1] [line: 9]			   <
.   .   Sibling: 3 Var: y of type int [mem: Local loc: -5 size: 1] [line: 9]			   <
.   .   Child: 1 Call: output of type void [line: 11]						   <
.   .   .   Child: 0 Call: square of type int [line: 11]					   <
.   .   .   .   Child: 0 Const 31 of type int [line: 11]					   <
.   .   Sibling: 1 Call: outnl of type void [line: 12]						   <
.   .   Sibling: 2 Call: output of type void [line: 13]						   <
.   .   .   Child: 0 Call: max of type int [line: 13]						   <
.   .   .   .   Child: 0 Const 131 of type int [line: 13]					   <
.   .   .   .   Sibling: 1 Const 42 of type int [line: 13]					   <
.   .   Sibling: 3 Call: outnl of type void [line: 14]						   <
.   .   Sibling: 4 Assign: = of type bool [line: 16]						   <
.   .   .   Child: 0 Id: a of type bool [mem: Local loc: -2 size: 1] [line: 16]			   <
.   .   .   Child: 1 Call: toBool of type bool [line: 16]					   <
.   .   .   .   Child: 0 Const 42 of type int [line: 16]					   <
.   .   Sibling: 5 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -4 size: 1] [line: 17]			   <
.   .   .   Child: 1 Call: toInt of type int [line: 17]						   <
.   .   .   .   Child: 0 Const true of type bool [line: 17]					   <
.   .   Sibling: 6 Call: output of type void [line: 18]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -4 size: 1] [line: 18]			   <
.   .   Sibling: 7 Call: outputb of type void [line: 19]					   <
.   .   .   Child: 0 Id: a of type bool [mem: Local loc: -2 size: 1] [line: 19]			   <
.   .   Sibling: 8 If [line: 21]								   <
.   .   .   Child: 0 Op: not of type bool [line: 21]						   <
.   .   .   .   Child: 0 Op: > of type bool [line: 21]						   <
.   .   .   .   .   Child: 0 Op: + of type int [line: 21]					   <
.   .   .   .   .   .   Child: 0 Const 666 of type int [line: 21]				   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 21]					   <
.   .   .   .   .   Child: 1 Const 13 of type int [line: 21]					   <
.   .   .   Child: 1 Call: output of type void [line: 21]					   <
.   .   .   .   Child: 0 Const 0 of type int [line: 21]						   <
.   .   .   Child: 2 Call: output of type void [line: 21]					   <
.   .   .   .   Child: 0 Const 666 of type int [line: 21]					   <
.   .   Sibling: 9 If [line: 22]								   <
.   .   .   Child: 0 Op: not of type bool [line: 22]						   <
.   .   .   .   Child: 0 Op: > of type bool [line: 22]						   <
.   .   .   .   .   Child: 0 Op: + of type int [line: 22]					   <
.   .   .   .   .   .   Child: 0 Op: chsign of type int [line: 22]				   <
.   .   .   .   .   .   .   Child: 0 Const 666 of type int [line: 22]				   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 22]					   <
.   .   .   .   .   Child: 1 Op: chsign of type int [line: 22]					   <
.   .   .   .   .   .   Child: 0 Const 13 of type int [line: 22]				   <
.   .   .   Child: 1 Call: output of type void [line: 22]					   <
.   .   .   .   Child: 0 Const 0 of type int [line: 22]						   <
.   .   .   Child: 2 Call: output of type void [line: 22]					   <
.   .   .   .   Child: 0 Const 666 of type int [line: 22]					   <
.   .   Sibling: 10 If [line: 23]								   <
.   .   .   Child: 0 Op: not of type bool [line: 23]						   <
.   .   .   .   Child: 0 Op: not of type bool [line: 23]					   <
.   .   .   .   .   Child: 0 Op: > of type bool [line: 23]					   <
.   .   .   .   .   .   Child: 0 Op: + of type int [line: 23]					   <
.   .   .   .   .   .   .   Child: 0 Op: chsign of type int [line: 23]				   <
.   .   .   .   .   .   .   .   Child: 0 Const 666 of type int [line: 23]			   <
.   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 23]				   <
.   .   .   .   .   .   Child: 1 Op: chsign of type int [line: 23]				   <
.   .   .   .   .   .   .   Child: 0 Const 13 of type int [line: 23]				   <
.   .   .   Child: 1 Call: output of type void [line: 23]					   <
.   .   .   .   Child: 0 Const 0 of type int [line: 23]						   <
.   .   .   Child: 2 Call: output of type void [line: 23]					   <
.   .   .   .   Child: 0 Const 666 of type int [line: 23]					   <
.   .   Sibling: 11 If [line: 24]								   <
.   .   .   Child: 0 Op: and of type bool [line: 24]						   <
.   .   .   .   Child: 0 Op: not of type bool [line: 24]					   <
.   .   .   .   .   Child: 0 Const false of type bool [line: 24]				   <
.   .   .   .   Child: 1 Const true of type bool [line: 24]					   <
.   .   .   Child: 1 Call: output of type void [line: 24]					   <
.   .   .   .   Child: 0 Const 7 of type int [line: 24]						   <
.   .   Sibling: 12 If [line: 25]								   <
.   .   .   Child: 0 Op: and of type bool [line: 25]						   <
.   .   .   .   Child: 0 Op: not of type bool [line: 25]					   <
.   .   .   .   .   Child: 0 Op: > of type bool [line: 25]					   <
.   .   .   .   .   .   Child: 0 Const 4 of type int [line: 25]					   <
.   .   .   .   .   .   Child: 1 Const 6 of type int [line: 25]					   <
.   .   .   .   Child: 1 Op: > of type bool [line: 25]						   <
.   .   .   .   .   Child: 0 Const 6 of type int [line: 25]					   <
.   .   .   .   .   Child: 1 Const 4 of type int [line: 25]					   <
.   .   .   Child: 1 Call: output of type void [line: 25]					   <
.   .   .   .   Child: 0 Const 7 of type int [line: 25]						   <
.   .   Sibling: 13 Call: outnl of type void [line: 26]						   <
Offset for end of global space: 0								   <
Number of warnings: 2										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: ptriangle.c-
-rwxrwx--- 1 root vboxsf  590 Apr 30 16:49 ptriangle.c-
-rwxrwx--- 1 root vboxsf  190 May  2 10:26 ptriangle.expected
-rwxrwx--- 1 root vboxsf   22 Dec  1  2014 ptriangle.in
-rwxrwx--- 1 root vboxsf 5291 May  4  2021 ptriangle.mem
-rwxrwx--- 1 root vboxsf 5328 May  4  2021 ptriangle.out
ptriangle.out ztmp4778.txt differ: byte 1, line 1
ptriangle (Output DIFF)
Func: comb returns type int [mem: Global loc: 0 size: -4] [line: 4]				   |	Loading file: ptriangle.tm
.   Child: 0 Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]			   |	entered: 5
.   Sibling: 1 Parm: b of type int [mem: Parameter loc: -3 size: 1] [line: 4]			   |	1
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 5]					   |	1 1
.   .   Child: 1 If [line: 6]									   |	1 2 1
.   .   .   Child: 0 Op: == of type bool [line: 6]						   |	1 3 3 1
.   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 6]		   |	1 4 6 4 1
.   .   .   .   Child: 1 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 6]		   |	1 5 10 10 5 1
.   .   .   Child: 1 Return [line: 7]								   |	entered: 7
.   .   .   .   Child: 0 Const 1 of type int [line: 7]						   |	1
.   .   Sibling: 1 If [line: 8]									   |	1 1
.   .   .   Child: 0 Op: == of type bool [line: 8]						   |	1 2 1
.   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 8]		   |	1 3 3 1
.   .   .   .   Child: 1 Const 0 of type int [line: 8]						   |	1 4 6 4 1
.   .   .   Child: 1 Return [line: 9]								   |	1 5 10 10 5 1
.   .   .   .   Child: 0 Const 1 of type int [line: 9]						   |	1 6 15 20 15 6 1
.   .   Sibling: 2 If [line: 10]								   |	1 7 21 35 35 21 7 1
.   .   .   Child: 0 Op: == of type bool [line: 10]						   |	entered: 0
.   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 10]		   |	Bye.
.   .   .   .   Child: 1 Const 1 of type int [line: 10]						   <
.   .   .   Child: 1 Return [line: 11]								   <
.   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 11]		   <
.   .   Sibling: 3 Return [line: 13]								   <
.   .   .   Child: 0 Op: + of type int [line: 13]						   <
.   .   .   .   Child: 0 Call: comb of type int [line: 13]					   <
.   .   .   .   .   Child: 0 Op: - of type int [line: 13]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 13]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 13]					   <
.   .   .   .   .   Sibling: 1 Op: - of type int [line: 13]					   <
.   .   .   .   .   .   Child: 0 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 13]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 13]					   <
.   .   .   .   Child: 1 Call: comb of type int [line: 13]					   <
.   .   .   .   .   Child: 0 Op: - of type int [line: 13]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 13]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 13]					   <
.   .   .   .   .   Sibling: 1 Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 13]	   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 16]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 17]					   <
.   .   Child: 0 Var: a of type int [mem: Local loc: -2 size: 1] [line: 18]			   <
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -3 size: 1] [line: 18]			   <
.   .   Sibling: 2 Var: n of type int [mem: Local loc: -4 size: 1] [line: 18]			   <
.   .   Child: 1 While [line: 20]								   <
.   .   .   Child: 0 Const true of type bool [line: 20]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 20]				   <
.   .   .   .   Child: 1 If [line: 21]								   <
.   .   .   .   .   Child: 0 Op: == of type bool [line: 21]					   <
.   .   .   .   .   .   Child: 0 Assign: = of type int [line: 21]				   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -4 size: 1] [line: 21]	   <
.   .   .   .   .   .   .   Child: 1 Call: input of type int [line: 21]				   <
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 21]					   <
.   .   .   .   .   Child: 1 Break [line: 21]							   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 22]					   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 22]		   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 22]					   <
.   .   .   .   Sibling: 2 While [line: 23]							   <
.   .   .   .   .   Child: 0 Op: <= of type bool [line: 23]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 23]	   <
.   .   .   .   .   .   Child: 1 Id: n of type int [mem: Local loc: -4 size: 1] [line: 23]	   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 23]			   <
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 24]				   <
.   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 24]	   <
.   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 24]				   <
.   .   .   .   .   .   Sibling: 1 While [line: 25]						   <
.   .   .   .   .   .   .   Child: 0 Op: <= of type bool [line: 25]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 2   <
.   .   .   .   .   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -2 size: 1] [line: 2   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 25]		   <
.   .   .   .   .   .   .   .   Child: 1 Call: output of type void [line: 26]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Call: comb of type int [line: 26]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1]    <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: b of type int [mem: Local loc: -3 size: 1   <
.   .   .   .   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 27]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   Sibling: 2 Call: outnl of type void [line: 29]				   <
.   .   .   .   .   .   Sibling: 3 Assign: ++ of type int [line: 30]				   <
.   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 30]	   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: pushpoparray.c-
-rwxrwx--- 1 root vboxsf  605 Apr 30 23:37 pushpoparray.c-
-rwxrwx--- 1 root vboxsf  136 May  2 10:26 pushpoparray.expected
-rwxrwx--- 1 root vboxsf 8863 May  4  2021 pushpoparray.mem
-rwxrwx--- 1 root vboxsf 8900 May  4  2021 pushpoparray.out
pushpoparray.out ztmp4778.txt differ: byte 53, line 2
pushpoparray (Output DIFF)
WARNING(16): The variable 'b' seems not to be used.							WARNING(16): The variable 'b' seems not to be used.
Var: a of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: pushpoparray.tm
Sibling: 1 Var: aa of array of type int [mem: Global loc: -2 size: 101] [line: 1]		   |	11 22 100 100
Sibling: 2 Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 3]			   |	33 33
.   Child: 0 Parm: pa of array of type int [mem: Parameter loc: -2 size: 1] [line: 3]		   |	22 6776
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 4]					   |	22 89 66 89 22 90 66
.   .   Child: 1 Op: [ of type int [line: 5]							   |	Bye.
.   .   .   Child: 0 Id: pa of array of type int [mem: Parameter loc: -2 size: 1] [line: 5]	   <
.   .   .   Child: 1 Const 66 of type int [line: 5]						   <
.   .   Sibling: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Id: a of type int [mem: Global loc: 0 size: 1] [line: 6]			   <
.   .   .   Child: 1 Op: [ of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: pa of array of type int [mem: Parameter loc: -2 size: 1] [line: 6]	   <
.   .   .   .   Child: 1 Const 22 of type int [line: 6]						   <
.   .   Sibling: 2 Assign: ++ of type int [line: 7]						   <
.   .   .   Child: 0 Op: [ of type int [line: 7]						   <
.   .   .   .   Child: 0 Id: pa of array of type int [mem: Parameter loc: -2 size: 1] [line: 7]	   <
.   .   .   .   Child: 1 Const 88 of type int [line: 7]						   <
.   .   Sibling: 3 Call: output of type void [line: 8]						   <
.   .   .   Child: 0 Id: a of type int [mem: Global loc: 0 size: 1] [line: 8]			   <
.   .   Sibling: 4 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Op: [ of type int [line: 9]						   <
.   .   .   .   Child: 0 Id: pa of array of type int [mem: Parameter loc: -2 size: 1] [line: 9]	   <
.   .   .   .   Child: 1 Const 88 of type int [line: 9]						   <
.   .   Sibling: 5 Return [line: 10]								   <
.   .   .   Child: 0 Op: + of type int [line: 10]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 10]						   <
.   .   .   .   .   Child: 0 Id: pa of array of type int [mem: Parameter loc: -2 size: 1] [line:   <
.   .   .   .   .   Child: 1 Const 22 of type int [line: 10]					   <
.   .   .   .   Child: 1 Op: [ of type int [line: 10]						   <
.   .   .   .   .   Child: 0 Id: pa of array of type int [mem: Parameter loc: -2 size: 1] [line:   <
.   .   .   .   .   Child: 1 Const 44 of type int [line: 10]					   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 14]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -104] [line: 15]					   <
.   .   Child: 0 Var: b of type int [mem: Local loc: -2 size: 1] [line: 16]			   <
.   .   Sibling: 1 Var: bb of array of type int [mem: Local loc: -4 size: 101] [line: 16]	   <
.   .   Child: 1 Assign: = of type int [line: 18]						   <
.   .   .   Child: 0 Op: [ of type int [line: 18]						   <
.   .   .   .   Child: 0 Id: aa of array of type int [mem: Global loc: -2 size: 101] [line: 18]	   <
.   .   .   .   Child: 1 Const 11 of type int [line: 18]					   <
.   .   .   Child: 1 Const 11 of type int [line: 18]						   <
.   .   Sibling: 1 Assign: = of type int [line: 19]						   <
.   .   .   Child: 0 Op: [ of type int [line: 19]						   <
.   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 19]	   <
.   .   .   .   Child: 1 Const 22 of type int [line: 19]					   <
.   .   .   Child: 1 Const 22 of type int [line: 19]						   <
.   .   Sibling: 2 Assign: = of type int [line: 20]						   <
.   .   .   Child: 0 Op: [ of type int [line: 20]						   <
.   .   .   .   Child: 0 Id: aa of array of type int [mem: Global loc: -2 size: 101] [line: 20]	   <
.   .   .   .   Child: 1 Const 33 of type int [line: 20]					   <
.   .   .   Child: 1 Const 33 of type int [line: 20]						   <
.   .   Sibling: 3 Assign: = of type int [line: 21]						   <
.   .   .   Child: 0 Op: [ of type int [line: 21]						   <
.   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 21]	   <
.   .   .   .   Child: 1 Const 44 of type int [line: 21]					   <
.   .   .   Child: 1 Const 44 of type int [line: 21]						   <
.   .   Sibling: 4 Assign: = of type int [line: 22]						   <
.   .   .   Child: 0 Op: [ of type int [line: 22]						   <
.   .   .   .   Child: 0 Id: aa of array of type int [mem: Global loc: -2 size: 101] [line: 22]	   <
.   .   .   .   Child: 1 Const 55 of type int [line: 22]					   <
.   .   .   Child: 1 Const 55 of type int [line: 22]						   <
.   .   Sibling: 5 Assign: = of type int [line: 23]						   <
.   .   .   Child: 0 Op: [ of type int [line: 23]						   <
.   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 23]	   <
.   .   .   .   Child: 1 Const 66 of type int [line: 23]					   <
.   .   .   Child: 1 Const 66 of type int [line: 23]						   <
.   .   Sibling: 6 Assign: = of type int [line: 24]						   <
.   .   .   Child: 0 Op: [ of type int [line: 24]						   <
.   .   .   .   Child: 0 Id: aa of array of type int [mem: Global loc: -2 size: 101] [line: 24]	   <
.   .   .   .   Child: 1 Const 77 of type int [line: 24]					   <
.   .   .   Child: 1 Const 77 of type int [line: 24]						   <
.   .   Sibling: 7 Assign: = of type int [line: 25]						   <
.   .   .   Child: 0 Op: [ of type int [line: 25]						   <
.   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 25]	   <
.   .   .   .   Child: 1 Const 88 of type int [line: 25]					   <
.   .   .   Child: 1 Const 88 of type int [line: 25]						   <
.   .   Sibling: 8 Assign: = of type int [line: 26]						   <
.   .   .   Child: 0 Op: [ of type int [line: 26]						   <
.   .   .   .   Child: 0 Id: aa of array of type int [mem: Global loc: -2 size: 101] [line: 26]	   <
.   .   .   .   Child: 1 Const 99 of type int [line: 26]					   <
.   .   .   Child: 1 Const 99 of type int [line: 26]						   <
.   .   Sibling: 9 Call: output of type void [line: 28]						   <
.   .   .   Child: 0 Op: [ of type int [line: 28]						   <
.   .   .   .   Child: 0 Id: aa of array of type int [mem: Global loc: -2 size: 101] [line: 28]	   <
.   .   .   .   Child: 1 Const 11 of type int [line: 28]					   <
.   .   Sibling: 10 Call: output of type void [line: 29]					   <
.   .   .   Child: 0 Op: [ of type int [line: 29]						   <
.   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 29]	   <
.   .   .   .   Child: 1 Const 22 of type int [line: 29]					   <
.   .   Sibling: 11 Call: output of type void [line: 30]					   <
.   .   .   Child: 0 Assign: ++ of type int [line: 30]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 30]						   <
.   .   .   .   .   Child: 0 Id: aa of array of type int [mem: Global loc: -2 size: 101] [line:    <
.   .   .   .   .   Child: 1 Const 99 of type int [line: 30]					   <
.   .   Sibling: 12 Call: output of type void [line: 31]					   <
.   .   .   Child: 0 Op: [ of type int [line: 31]						   <
.   .   .   .   Child: 0 Id: aa of array of type int [mem: Global loc: -2 size: 101] [line: 31]	   <
.   .   .   .   Child: 1 Const 99 of type int [line: 31]					   <
.   .   Sibling: 13 Call: outnl of type void [line: 32]						   <
.   .   Sibling: 14 Call: output of type void [line: 34]					   <
.   .   .   Child: 0 Assign: = of type int [line: 34]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Global loc: 0 size: 1] [line: 34]		   <
.   .   .   .   Child: 1 Op: [ of type int [line: 34]						   <
.   .   .   .   .   Child: 0 Id: aa of array of type int [mem: Global loc: -2 size: 101] [line:    <
.   .   .   .   .   Child: 1 Const 33 of type int [line: 34]					   <
.   .   Sibling: 15 Call: output of type void [line: 35]					   <
.   .   .   Child: 0 Id: a of type int [mem: Global loc: 0 size: 1] [line: 35]			   <
.   .   Sibling: 16 Call: outnl of type void [line: 36]						   <
.   .   Sibling: 17 Call: output of type void [line: 38]					   <
.   .   .   Child: 0 Op: [ of type int [line: 38]						   <
.   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 38]	   <
.   .   .   .   Child: 1 Op: - of type int [line: 38]						   <
.   .   .   .   .   Child: 0 Const 66 of type int [line: 38]					   <
.   .   .   .   .   Child: 1 Const 44 of type int [line: 38]					   <
.   .   Sibling: 18 Call: output of type void [line: 39]					   <
.   .   .   Child: 0 Op: * of type int [line: 39]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 39]						   <
.   .   .   .   .   Child: 0 Id: aa of array of type int [mem: Global loc: -2 size: 101] [line:    <
.   .   .   .   .   Child: 1 Const 77 of type int [line: 39]					   <
.   .   .   .   Child: 1 Op: [ of type int [line: 39]						   <
.   .   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 3   <
.   .   .   .   .   Child: 1 Const 88 of type int [line: 39]					   <
.   .   Sibling: 19 Call: outnl of type void [line: 40]						   <
.   .   Sibling: 20 Call: output of type void [line: 42]					   <
.   .   .   Child: 0 Call: dog of type int [line: 42]						   <
.   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 42]	   <
.   .   Sibling: 21 Call: output of type void [line: 43]					   <
.   .   .   Child: 0 Op: [ of type int [line: 43]						   <
.   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 43]	   <
.   .   .   .   Child: 1 Const 88 of type int [line: 43]					   <
.   .   Sibling: 22 Call: output of type void [line: 44]					   <
.   .   .   Child: 0 Op: [ of type int [line: 44]						   <
.   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 44]	   <
.   .   .   .   Child: 1 Call: dog of type int [line: 44]					   <
.   .   .   .   .   Child: 0 Id: bb of array of type int [mem: Local loc: -4 size: 101] [line: 4   <
.   .   Sibling: 23 Call: outnl of type void [line: 45]						   <
Offset for end of global space: -102								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: pushpopcall.c-
-rwxrwx--- 1 root vboxsf  258 Apr 30 23:45 pushpopcall.c-
-rwxrwx--- 1 root vboxsf  172 May  2 10:26 pushpopcall.expected
-rwxrwx--- 1 root vboxsf 3324 May  4  2021 pushpopcall.mem
-rwxrwx--- 1 root vboxsf 3361 May  4  2021 pushpopcall.out
pushpopcall.out ztmp4778.txt differ: byte 103, line 3
pushpopcall (Output DIFF)
WARNING(1): The variable 'g' seems not to be used.							WARNING(1): The variable 'g' seems not to be used.
WARNING(1): The variable 'h' seems not to be used.							WARNING(1): The variable 'h' seems not to be used.
Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: pushpopcall.tm
Sibling: 1 Var: h of type int [mem: Global loc: -1 size: 1] [line: 1]				   |	1000 1777 222111 1000 2000 1000 555
Sibling: 2 Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 3]			   |	Bye.
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 3]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 3]					   <
.   .   Child: 1 If [line: 4]									   <
.   .   .   Child: 0 Op: > of type bool [line: 4]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 4]		   <
.   .   .   .   Child: 1 Const 0 of type int [line: 4]						   <
.   .   .   Child: 1 Return [line: 4]								   <
.   .   .   .   Child: 0 Const 1000 of type int [line: 4]					   <
.   .   Sibling: 1 Call: output of type void [line: 5]						   <
.   .   .   Child: 0 Call: dog of type int [line: 5]						   <
.   .   .   .   Child: 0 Const 666 of type int [line: 5]					   <
.   .   Sibling: 2 Call: output of type void [line: 6]						   <
.   .   .   Child: 0 Op: + of type int [line: 6]						   <
.   .   .   .   Child: 0 Const 777 of type int [line: 6]					   <
.   .   .   .   Child: 1 Call: dog of type int [line: 6]					   <
.   .   .   .   .   Child: 0 Const 888 of type int [line: 6]					   <
.   .   Sibling: 3 Call: output of type void [line: 7]						   <
.   .   .   Child: 0 Op: + of type int [line: 7]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 7]					   <
.   .   .   .   Child: 1 Op: * of type int [line: 7]						   <
.   .   .   .   .   Child: 0 Const 222 of type int [line: 7]					   <
.   .   .   .   .   Child: 1 Call: dog of type int [line: 7]					   <
.   .   .   .   .   .   Child: 0 Const 333 of type int [line: 7]				   <
.   .   Sibling: 4 Call: output of type void [line: 8]						   <
.   .   .   Child: 0 Call: dog of type int [line: 8]						   <
.   .   .   .   Child: 0 Call: dog of type int [line: 8]					   <
.   .   .   .   .   Child: 0 Const 444 of type int [line: 8]					   <
.   .   Sibling: 5 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Op: + of type int [line: 9]						   <
.   .   .   .   Child: 0 Call: dog of type int [line: 9]					   <
.   .   .   .   .   Child: 0 Op: + of type int [line: 9]					   <
.   .   .   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 9]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 9]					   <
.   .   .   .   Child: 1 Call: dog of type int [line: 9]					   <
.   .   .   .   .   Child: 0 Op: + of type int [line: 9]					   <
.   .   .   .   .   .   Child: 0 Const 1 of type int [line: 9]					   <
.   .   .   .   .   .   Child: 1 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 9]	   <
.   .   Sibling: 6 Call: output of type void [line: 10]						   <
.   .   .   Child: 0 Call: dog of type int [line: 10]						   <
.   .   .   .   Child: 0 Op: + of type int [line: 10]						   <
.   .   .   .   .   Child: 0 Const 555 of type int [line: 10]					   <
.   .   .   .   .   Child: 1 Op: * of type int [line: 10]					   <
.   .   .   .   .   .   Child: 0 Const 666 of type int [line: 10]				   <
.   .   .   .   .   .   Child: 1 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 10]	   <
.   .   Sibling: 7 Return [line: 12]								   <
.   .   .   Child: 0 Const 555 of type int [line: 12]						   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 15]		   <
.   Child: 1 Call: output of type void [line: 15]						   <
.   .   Child: 0 Call: dog of type int [line: 15]						   <
.   .   .   Child: 0 Const 0 of type int [line: 15]						   <
Offset for end of global space: -2								   <
Number of warnings: 2										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: pushpopcall2.c-
-rwxrwx--- 1 root vboxsf  202 Apr 30 23:48 pushpopcall2.c-
-rwxrwx--- 1 root vboxsf  107 May  2 10:26 pushpopcall2.expected
-rwxrwx--- 1 root vboxsf 2662 May  4  2021 pushpopcall2.mem
-rwxrwx--- 1 root vboxsf 2699 May  4  2021 pushpopcall2.out
pushpopcall2.out ztmp4778.txt differ: byte 52, line 2
pushpopcall2 (Output DIFF)
WARNING(3): The variable 'g' seems not to be used.							WARNING(3): The variable 'g' seems not to be used.
Func: dog returns type int [mem: Global loc: 0 size: -4] [line: 1]				   |	Loading file: pushpopcall2.tm
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]			   |	24642 147852 7150176
.   Sibling: 1 Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 1]			   |	Bye.
.   Child: 1 Return [line: 1]									   <
.   .   Child: 0 Op: * of type int [line: 1]							   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]		   <
.   .   .   Child: 1 Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 1]		   <
Sibling: 1 Var: g of type int [mem: Global loc: 0 size: 1] [line: 3]				   <
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 4]					   <
.   .   Child: 1 Call: output of type void [line: 5]						   <
.   .   .   Child: 0 Call: dog of type int [line: 5]						   <
.   .   .   .   Child: 0 Const 111 of type int [line: 5]					   <
.   .   .   .   Sibling: 1 Const 222 of type int [line: 5]					   <
.   .   Sibling: 1 Compound [mem: None loc: 0 size: -5] [line: 6]				   <
.   .   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 7]			   <
.   .   .   Sibling: 1 Var: y of type int [mem: Local loc: -3 size: 1] [line: 7]		   <
.   .   .   Sibling: 2 Var: z of type int [mem: Local loc: -4 size: 1] [line: 7]		   <
.   .   .   Child: 1 Assign: = of type int [line: 8]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 8]		   <
.   .   .   .   Child: 1 Const 333 of type int [line: 8]					   <
.   .   .   Sibling: 1 Assign: = of type int [line: 8]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 8]		   <
.   .   .   .   Child: 1 Const 444 of type int [line: 8]					   <
.   .   .   Sibling: 2 Assign: = of type int [line: 8]						   <
.   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -4 size: 1] [line: 8]		   <
.   .   .   .   Child: 1 Const 555 of type int [line: 8]					   <
.   .   .   Sibling: 3 Call: output of type void [line: 9]					   <
.   .   .   .   Child: 0 Call: dog of type int [line: 9]					   <
.   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 9]		   <
.   .   .   .   .   Sibling: 1 Id: y of type int [mem: Local loc: -3 size: 1] [line: 9]		   <
.   .   Sibling: 2 Call: output of type void [line: 11]						   <
.   .   .   Child: 0 Call: dog of type int [line: 11]						   <
.   .   .   .   Child: 0 Op: + of type int [line: 11]						   <
.   .   .   .   .   Child: 0 Const 333 of type int [line: 11]					   <
.   .   .   .   .   Child: 1 Const 33 of type int [line: 11]					   <
.   .   .   .   Sibling: 1 Op: * of type int [line: 11]						   <
.   .   .   .   .   Child: 0 Const 444 of type int [line: 11]					   <
.   .   .   .   .   Child: 1 Const 44 of type int [line: 11]					   <
Offset for end of global space: -1								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: pushpopcall3.c-
-rwxrwx--- 1 root vboxsf  298 May  1 15:12 pushpopcall3.c-
-rwxrwx--- 1 root vboxsf  153 May  2 10:26 pushpopcall3.expected
-rwxrwx--- 1 root vboxsf 4231 May  4  2021 pushpopcall3.mem
-rwxrwx--- 1 root vboxsf 4268 May  4  2021 pushpopcall3.out
pushpopcall3.out ztmp4778.txt differ: byte 105, line 3
pushpopcall3 (Output DIFF)
WARNING(12): The variable 'x' seems not to be used.							WARNING(12): The variable 'x' seems not to be used.
WARNING(12): The variable 'z' seems not to be used.							WARNING(12): The variable 'z' seems not to be used.
Func: dog returns type int [mem: Global loc: 0 size: -4] [line: 1]				   |	Loading file: pushpopcall3.tm
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]			   |	9 5 4000 1005
.   Sibling: 1 Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 1]			   |	Bye.
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 1]					   <
.   .   Child: 0 Var: p of type int [mem: Local loc: -4 size: 1] [line: 2]			   <
.   .   .   Child: 0 Const 7 of type int [line: 2]						   <
.   .   Child: 1 Return [line: 3]								   <
.   .   .   Child: 0 Op: + of type int [line: 3]						   <
.   .   .   .   Child: 0 Op: % of type int [line: 3]						   <
.   .   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 3]	   <
.   .   .   .   .   Child: 1 Id: p of type int [mem: Local loc: -4 size: 1] [line: 3]		   <
.   .   .   .   Child: 1 Op: % of type int [line: 3]						   <
.   .   .   .   .   Child: 0 Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 3]	   <
.   .   .   .   .   Child: 1 Id: p of type int [mem: Local loc: -4 size: 1] [line: 3]		   <
Sibling: 1 Var: g of type int [mem: Global loc: 0 size: 1] [line: 6]				   <
.   Child: 0 Const 4000 of type int [line: 6]							   <
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 7]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 7]					   <
.   .   Child: 0 Var: a of type int [mem: Local loc: -2 size: 1] [line: 8]			   <
.   .   .   Child: 0 Const 1000 of type int [line: 8]						   <
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -3 size: 1] [line: 8]			   <
.   .   .   Child: 0 Const 2000 of type int [line: 8]						   <
.   .   Sibling: 2 Var: c of type int [mem: Local loc: -4 size: 1] [line: 8]			   <
.   .   .   Child: 0 Const 3000 of type int [line: 8]						   <
.   .   Child: 1 Call: output of type void [line: 10]						   <
.   .   .   Child: 0 Call: dog of type int [line: 10]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 10]		   <
.   .   .   .   Sibling: 1 Op: * of type int [line: 10]						   <
.   .   .   .   .   Child: 0 Const 2 of type int [line: 10]					   <
.   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 10]		   <
.   .   Sibling: 1 Compound [mem: None loc: 0 size: -8] [line: 11]				   <
.   .   .   Child: 0 Var: x of type int [mem: Local loc: -5 size: 1] [line: 12]			   <
.   .   .   Sibling: 1 Var: y of type int [mem: Local loc: -6 size: 1] [line: 12]		   <
.   .   .   Sibling: 2 Var: z of type int [mem: Local loc: -7 size: 1] [line: 12]		   <
.   .   .   Child: 1 Assign: = of type int [line: 14]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -6 size: 1] [line: 14]		   <
.   .   .   .   Child: 1 Op: + of type int [line: 14]						   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 14]		   <
.   .   .   .   .   Child: 1 Id: g of type int [mem: Global loc: 0 size: 1] [line: 14]		   <
.   .   .   Sibling: 1 Call: output of type void [line: 15]					   <
.   .   .   .   Child: 0 Call: dog of type int [line: 15]					   <
.   .   .   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 15]		   <
.   .   .   .   .   Sibling: 1 Id: y of type int [mem: Local loc: -6 size: 1] [line: 15]	   <
.   .   .   Sibling: 2 Call: output of type void [line: 16]					   <
.   .   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 16]		   <
.   .   Sibling: 2 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Op: + of type int [line: 19]						   <
.   .   .   .   Child: 0 Const 999 of type int [line: 19]					   <
.   .   .   .   Child: 1 Call: dog of type int [line: 19]					   <
.   .   .   .   .   Child: 0 Op: + of type int [line: 19]					   <
.   .   .   .   .   .   Child: 0 Const 333 of type int [line: 19]				   <
.   .   .   .   .   .   Child: 1 Op: * of type int [line: 19]					   <
.   .   .   .   .   .   .   Child: 0 Const 33 of type int [line: 19]				   <
.   .   .   .   .   .   .   Child: 1 Id: g of type int [mem: Global loc: 0 size: 1] [line: 19]	   <
.   .   .   .   .   Sibling: 1 Op: + of type int [line: 19]					   <
.   .   .   .   .   .   Child: 0 Op: % of type int [line: 19]					   <
.   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 19]	   <
.   .   .   .   .   .   .   Child: 1 Const 17 of type int [line: 19]				   <
.   .   .   .   .   .   Child: 1 Id: c of type int [mem: Local loc: -4 size: 1] [line: 19]	   <
Offset for end of global space: -1								   <
Number of warnings: 2										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: pushpopexp.c-
-rwxrwx--- 1 root vboxsf  439 May  2 09:40 pushpopexp.c-
-rwxrwx--- 1 root vboxsf  109 May  2 10:26 pushpopexp.expected
-rwxrwx--- 1 root vboxsf 7877 May  4  2021 pushpopexp.mem
-rwxrwx--- 1 root vboxsf 7914 May  4  2021 pushpopexp.out
pushpopexp.out ztmp4778.txt differ: byte 53, line 2
pushpopexp (Output DIFF)
WARNING(30): The variable 'h' seems not to be used.							WARNING(30): The variable 'h' seems not to be used.
Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: pushpopexp.tm
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]			   |	7 17 F T
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 3]					   |	F 22066
.   .   Child: 0 Var: a of type int [mem: Local loc: -2 size: 1] [line: 4]			   |	41 331
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -3 size: 1] [line: 4]			   |	Bye.
.   .   Sibling: 2 Var: c of type int [mem: Local loc: -4 size: 1] [line: 4]			   <
.   .   Sibling: 3 Var: d of type int [mem: Local loc: -5 size: 1] [line: 4]			   <
.   .   Child: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 6]			   <
.   .   .   Child: 1 Const 331 of type int [line: 6]						   <
.   .   Sibling: 1 Assign: = of type int [line: 7]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 7]			   <
.   .   .   Child: 1 Const 2 of type int [line: 7]						   <
.   .   Sibling: 2 Assign: = of type int [line: 7]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 7]			   <
.   .   .   Child: 1 Const 3 of type int [line: 7]						   <
.   .   Sibling: 3 Assign: = of type int [line: 7]						   <
.   .   .   Child: 0 Id: c of type int [mem: Local loc: -4 size: 1] [line: 7]			   <
.   .   .   Child: 1 Const 5 of type int [line: 7]						   <
.   .   Sibling: 4 Assign: = of type int [line: 7]						   <
.   .   .   Child: 0 Id: d of type int [mem: Local loc: -5 size: 1] [line: 7]			   <
.   .   .   Child: 1 Const 7 of type int [line: 7]						   <
.   .   Sibling: 5 Call: output of type void [line: 8]						   <
.   .   .   Child: 0 Id: d of type int [mem: Local loc: -5 size: 1] [line: 8]			   <
.   .   Sibling: 6 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Op: + of type int [line: 9]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 9]		   <
.   .   .   .   Child: 1 Op: * of type int [line: 9]						   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 9]		   <
.   .   .   .   .   Child: 1 Id: c of type int [mem: Local loc: -4 size: 1] [line: 9]		   <
.   .   Sibling: 7 Call: outputb of type void [line: 10]					   <
.   .   .   Child: 0 Op: > of type bool [line: 10]						   <
.   .   .   .   Child: 0 Id: d of type int [mem: Local loc: -5 size: 1] [line: 10]		   <
.   .   .   .   Child: 1 Op: + of type int [line: 10]						   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 10]		   <
.   .   .   .   .   Child: 1 Op: * of type int [line: 10]					   <
.   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 10]	   <
.   .   .   .   .   .   Child: 1 Id: c of type int [mem: Local loc: -4 size: 1] [line: 10]	   <
.   .   Sibling: 8 Call: outputb of type void [line: 11]					   <
.   .   .   Child: 0 Op: or of type bool [line: 11]						   <
.   .   .   .   Child: 0 Op: > of type bool [line: 11]						   <
.   .   .   .   .   Child: 0 Id: d of type int [mem: Local loc: -5 size: 1] [line: 11]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 11]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 11]	   <
.   .   .   .   .   .   Child: 1 Op: * of type int [line: 11]					   <
.   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 11]	   <
.   .   .   .   .   .   .   Child: 1 Id: c of type int [mem: Local loc: -4 size: 1] [line: 11]	   <
.   .   .   .   Child: 1 Op: < of type bool [line: 11]						   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 11]		   <
.   .   .   .   .   Child: 1 Id: c of type int [mem: Local loc: -4 size: 1] [line: 11]		   <
.   .   Sibling: 9 Call: outnl of type void [line: 12]						   <
.   .   Sibling: 10 Compound [mem: None loc: 0 size: -9] [line: 13]				   <
.   .   .   Child: 0 Var: a of type int [mem: Local loc: -6 size: 1] [line: 14]			   <
.   .   .   Sibling: 1 Var: b of type int [mem: Local loc: -7 size: 1] [line: 14]		   <
.   .   .   Sibling: 2 Var: c of type int [mem: Local loc: -8 size: 1] [line: 14]		   <
.   .   .   Child: 1 Assign: = of type int [line: 15]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -6 size: 1] [line: 15]		   <
.   .   .   .   Child: 1 Const 101 of type int [line: 15]					   <
.   .   .   Sibling: 1 Assign: = of type int [line: 15]						   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -7 size: 1] [line: 15]		   <
.   .   .   .   Child: 1 Const 103 of type int [line: 15]					   <
.   .   .   Sibling: 2 Assign: = of type int [line: 15]						   <
.   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -8 size: 1] [line: 15]		   <
.   .   .   .   Child: 1 Const 107 of type int [line: 15]					   <
.   .   .   Sibling: 3 Call: outputb of type void [line: 17]					   <
.   .   .   .   Child: 0 Op: < of type bool [line: 17]						   <
.   .   .   .   .   Child: 0 Op: * of type int [line: 17]					   <
.   .   .   .   .   .   Child: 0 Id: d of type int [mem: Local loc: -5 size: 1] [line: 17]	   <
.   .   .   .   .   .   Child: 1 Const 20 of type int [line: 17]				   <
.   .   .   .   .   Child: 1 Op: - of type int [line: 17]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -6 size: 1] [line: 17]	   <
.   .   .   .   .   .   Child: 1 Op: / of type int [line: 17]					   <
.   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -8 size: 1] [line: 17]	   <
.   .   .   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -7 size: 1] [line: 17]	   <
.   .   Sibling: 11 Compound [mem: None loc: 0 size: -10] [line: 19]				   <
.   .   .   Child: 0 Var: w of type int [mem: Local loc: -6 size: 1] [line: 20]			   <
.   .   .   Sibling: 1 Var: x of type int [mem: Local loc: -7 size: 1] [line: 20]		   <
.   .   .   Sibling: 2 Var: y of type int [mem: Local loc: -8 size: 1] [line: 20]		   <
.   .   .   Sibling: 3 Var: z of type int [mem: Local loc: -9 size: 1] [line: 20]		   <
.   .   .   Child: 1 Assign: = of type int [line: 22]						   <
.   .   .   .   Child: 0 Id: w of type int [mem: Local loc: -6 size: 1] [line: 22]		   <
.   .   .   .   Child: 1 Const 101 of type int [line: 22]					   <
.   .   .   Sibling: 1 Assign: = of type int [line: 22]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -7 size: 1] [line: 22]		   <
.   .   .   .   Child: 1 Const 103 of type int [line: 22]					   <
.   .   .   Sibling: 2 Assign: = of type int [line: 22]						   <
.   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -8 size: 1] [line: 22]		   <
.   .   .   .   Child: 1 Const 107 of type int [line: 22]					   <
.   .   .   Sibling: 3 Assign: = of type int [line: 22]						   <
.   .   .   .   Child: 0 Id: z of type int [mem: Local loc: -9 size: 1] [line: 22]		   <
.   .   .   .   Child: 1 Const 109 of type int [line: 22]					   <
.   .   .   Sibling: 4 Call: output of type void [line: 23]					   <
.   .   .   .   Child: 0 Op: + of type int [line: 23]						   <
.   .   .   .   .   Child: 0 Op: * of type int [line: 23]					   <
.   .   .   .   .   .   Child: 0 Id: w of type int [mem: Local loc: -6 size: 1] [line: 23]	   <
.   .   .   .   .   .   Child: 1 Id: x of type int [mem: Local loc: -7 size: 1] [line: 23]	   <
.   .   .   .   .   Child: 1 Op: * of type int [line: 23]					   <
.   .   .   .   .   .   Child: 0 Id: y of type int [mem: Local loc: -8 size: 1] [line: 23]	   <
.   .   .   .   .   .   Child: 1 Id: z of type int [mem: Local loc: -9 size: 1] [line: 23]	   <
.   .   .   Sibling: 5 Call: outnl of type void [line: 24]					   <
.   .   Sibling: 12 Call: output of type void [line: 26]					   <
.   .   .   Child: 0 Op: + of type int [line: 26]						   <
.   .   .   .   Child: 0 Op: * of type int [line: 26]						   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 26]		   <
.   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 26]		   <
.   .   .   .   Child: 1 Op: * of type int [line: 26]						   <
.   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -4 size: 1] [line: 26]		   <
.   .   .   .   .   Child: 1 Id: d of type int [mem: Local loc: -5 size: 1] [line: 26]		   <
.   .   Sibling: 13 Call: output of type void [line: 27]					   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 27]			   <
.   .   Sibling: 14 Call: outnl of type void [line: 28]						   <
Sibling: 2 Var: h of type int [mem: Global loc: -1 size: 1] [line: 30]				   <
Offset for end of global space: -2								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: pushpopparm.c-
-rwxrwx--- 1 root vboxsf  292 Nov 28 16:14 pushpopparm.c-
-rwxrwx--- 1 root vboxsf   62 May  2 10:26 pushpopparm.expected
-rwxrwx--- 1 root vboxsf 3896 May  4  2021 pushpopparm.mem
-rwxrwx--- 1 root vboxsf 3933 May  4  2021 pushpopparm.out
pushpopparm.out ztmp4778.txt differ: byte 1, line 1
pushpopparm (Output DIFF)
Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: pushpopparm.tm
Sibling: 1 Var: h of array of type int [mem: Global loc: -2 size: 11] [line: 1]			   |	100 1000
Sibling: 2 Func: dog returns type int [mem: Global loc: 0 size: -4] [line: 3]			   |	1108
.   Child: 0 Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 3]			   |	200 2000
.   Sibling: 1 Parm: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 3]		   |	2208
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 3]					   |	Bye.
.   .   Child: 1 Call: output of type void [line: 4]						   <
.   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]		   <
.   .   Sibling: 1 Call: output of type void [line: 5]						   <
.   .   .   Child: 0 Op: [ of type int [line: 5]						   <
.   .   .   .   Child: 0 Id: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 5]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 5]						   <
.   .   Sibling: 2 Call: outnl of type void [line: 6]						   <
.   .   Sibling: 3 Return [line: 7]								   <
.   .   .   Child: 0 Op: + of type int [line: 7]						   <
.   .   .   .   Child: 0 Op: + of type int [line: 7]						   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 7]	   <
.   .   .   .   .   Child: 1 Op: [ of type int [line: 7]					   <
.   .   .   .   .   .   Child: 0 Id: b of array of type int [mem: Parameter loc: -3 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Const 3 of type int [line: 7]					   <
.   .   .   .   Child: 1 Op: [ of type int [line: 7]						   <
.   .   .   .   .   Child: 0 Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 7]   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 7]					   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 10]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -12] [line: 11]					   <
.   .   Child: 0 Var: p of type int [mem: Local loc: -2 size: 1] [line: 12]			   <
.   .   Sibling: 1 Var: q of array of type int [mem: Local loc: -4 size: 9] [line: 12]		   <
.   .   Child: 1 Assign: = of type int [line: 13]						   <
.   .   .   Child: 0 Id: p of type int [mem: Local loc: -2 size: 1] [line: 13]			   <
.   .   .   Child: 1 Const 100 of type int [line: 13]						   <
.   .   Sibling: 1 Assign: = of type int [line: 14]						   <
.   .   .   Child: 0 Op: [ of type int [line: 14]						   <
.   .   .   .   Child: 0 Id: q of array of type int [mem: Local loc: -4 size: 9] [line: 14]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 14]						   <
.   .   .   Child: 1 Const 1000 of type int [line: 14]						   <
.   .   Sibling: 2 Assign: = of type int [line: 15]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 15]			   <
.   .   .   Child: 1 Const 200 of type int [line: 15]						   <
.   .   Sibling: 3 Assign: = of type int [line: 16]						   <
.   .   .   Child: 0 Op: [ of type int [line: 16]						   <
.   .   .   .   Child: 0 Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 16]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 16]						   <
.   .   .   Child: 1 Const 2000 of type int [line: 16]						   <
.   .   Sibling: 4 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Op: [ of type int [line: 17]						   <
.   .   .   .   Child: 0 Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 17]	   <
.   .   .   .   Child: 1 Const 0 of type int [line: 17]						   <
.   .   .   Child: 1 Const 8 of type int [line: 17]						   <
.   .   Sibling: 5 Call: output of type void [line: 18]						   <
.   .   .   Child: 0 Call: dog of type int [line: 18]						   <
.   .   .   .   Child: 0 Id: p of type int [mem: Local loc: -2 size: 1] [line: 18]		   <
.   .   .   .   Sibling: 1 Id: q of array of type int [mem: Local loc: -4 size: 9] [line: 18]	   <
.   .   Sibling: 6 Call: outnl of type void [line: 19]						   <
.   .   Sibling: 7 Call: output of type void [line: 20]						   <
.   .   .   Child: 0 Call: dog of type int [line: 20]						   <
.   .   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 20]		   <
.   .   .   .   Sibling: 1 Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 20]	   <
.   .   Sibling: 8 Call: outnl of type void [line: 21]						   <
Offset for end of global space: -12								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: pushpoptiny.c-
-rwxrwx--- 1 root vboxsf  159 Apr 30 23:23 pushpoptiny.c-
-rwxrwx--- 1 root vboxsf   47 May  2 10:26 pushpoptiny.expected
-rwxrwx--- 1 root vboxsf 2210 May  4  2021 pushpoptiny.mem
-rwxrwx--- 1 root vboxsf 2247 May  4  2021 pushpoptiny.out
pushpoptiny.out ztmp4778.txt differ: byte 1, line 1
pushpoptiny (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: pushpoptiny.tm
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 2]					   |	11 242 10 10
.   .   Child: 0 Var: a of type int [mem: Local loc: -2 size: 1] [line: 3]			   |	Bye.
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -3 size: 1] [line: 3]			   <
.   .   Sibling: 2 Var: c of type int [mem: Local loc: -4 size: 1] [line: 3]			   <
.   .   Child: 1 Assign: = of type int [line: 5]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 5]			   <
.   .   .   Child: 1 Const 11 of type int [line: 5]						   <
.   .   Sibling: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 6]			   <
.   .   .   Child: 1 Const 22 of type int [line: 6]						   <
.   .   Sibling: 2 Assign: = of type int [line: 7]						   <
.   .   .   Child: 0 Id: c of type int [mem: Local loc: -4 size: 1] [line: 7]			   <
.   .   .   Child: 1 Const 13 of type int [line: 7]						   <
.   .   Sibling: 3 Call: output of type void [line: 8]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 8]			   <
.   .   Sibling: 4 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Op: * of type int [line: 9]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 9]		   <
.   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 9]		   <
.   .   Sibling: 5 Call: output of type void [line: 10]						   <
.   .   .   Child: 0 Op: - of type int [line: 10]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 10]		   <
.   .   .   .   Child: 1 Op: / of type int [line: 10]						   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 10]		   <
.   .   .   .   .   Child: 1 Id: c of type int [mem: Local loc: -4 size: 1] [line: 10]		   <
.   .   Sibling: 6 Call: output of type void [line: 11]						   <
.   .   .   Child: 0 Op: - of type int [line: 11]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 11]		   <
.   .   .   .   Child: 1 Op: / of type int [line: 11]						   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 11]		   <
.   .   .   .   .   Child: 1 Id: c of type int [mem: Local loc: -4 size: 1] [line: 11]		   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: queens.c-
-rwxrwx--- 1 root vboxsf  1100 Apr 30 16:49 queens.c-
-rwxrwx--- 1 root vboxsf   643 May  2 10:26 queens.expected
-rwxrwx--- 1 root vboxsf    22 Dec  1  2014 queens.in
-rwxrwx--- 1 root vboxsf 12894 May  4  2021 queens.mem
-rwxrwx--- 1 root vboxsf 12931 May  4  2021 queens.out
queens.out ztmp4778.txt differ: byte 1, line 1
queens (Output DIFF)
Var: row of array of type int [mem: Global loc: -1 size: 13] [line: 6]				   |	Loading file: queens.tm
Sibling: 1 Var: col of array of type int [mem: Global loc: -14 size: 13] [line: 7]		   |	entered: 4
Sibling: 2 Var: diagone of array of type int [mem: Global loc: -27 size: 26] [line: 8]		   |	1 3 0 2
Sibling: 3 Var: diagtwo of array of type int [mem: Global loc: -53 size: 26] [line: 9]		   |	2 0 3 1
Sibling: 4 Var: n of type int [mem: Global loc: -78 size: 1] [line: 10]				   |	2
Sibling: 5 Var: count of type int [mem: Global loc: -79 size: 1] [line: 11]			   |	entered: 7
Sibling: 6 Func: printboard returns type void [mem: Global loc: 0 size: -3] [line: 13]		   |	0 2 4 6 1 3 5
.   Child: 0 Parm: col of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]		   |	0 3 6 2 5 1 4
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 14]					   |	0 4 1 5 2 6 3
.   .   Child: 0 Var: i of type int [mem: Local loc: -3 size: 1] [line: 15]			   |	0 5 3 1 6 4 2
.   .   Child: 1 Assign: = of type int [line: 17]						   |	1 3 0 6 4 2 5
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 17]			   |	1 3 5 0 2 4 6
.   .   .   Child: 1 Const 0 of type int [line: 17]						   |	1 4 0 3 6 2 5
.   .   Sibling: 1 While [line: 18]								   |	1 4 2 0 6 3 5
.   .   .   Child: 0 Op: < of type bool [line: 18]						   |	1 4 6 3 0 2 5
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 18]		   |	1 5 2 6 3 0 4
.   .   .   .   Child: 1 Id: n of type int [mem: Global loc: -78 size: 1] [line: 18]		   |	1 6 4 2 0 5 3
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 18]				   |	2 0 5 1 4 6 3
.   .   .   .   Child: 1 Call: output of type void [line: 19]					   |	2 0 5 3 1 6 4
.   .   .   .   .   Child: 0 Op: [ of type int [line: 19]					   |	2 4 6 1 3 5 0
.   .   .   .   .   .   Child: 0 Id: col of array of type int [mem: Parameter loc: -2 size: 1] [   |	2 5 1 4 0 3 6
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1] [line: 19]	   |	2 6 1 3 5 0 4
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 20]					   |	2 6 3 0 4 1 5
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 20]		   |	3 0 2 5 1 6 4
.   .   Sibling: 2 Call: outnl of type void [line: 22]						   |	3 0 4 1 5 2 6
.   .   Sibling: 3 Assign: ++ of type int [line: 23]						   |	3 1 6 4 2 0 5
.   .   .   Child: 0 Id: count of type int [mem: Global loc: -79 size: 1] [line: 23]		   |	3 5 0 2 4 6 1
Sibling: 7 Func: try returns type void [mem: Global loc: 0 size: -3] [line: 26]			   |	3 6 2 5 1 4 0
.   Child: 0 Parm: c of type int [mem: Parameter loc: -2 size: 1] [line: 26]			   |	3 6 4 1 5 0 2
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 27]					   |	4 0 3 6 2 5 1
.   .   Child: 0 Var: r of type int [mem: Local loc: -3 size: 1] [line: 28]			   |	4 0 5 3 1 6 2
.   .   Child: 1 If [line: 30]									   |	4 1 5 2 6 3 0
.   .   .   Child: 0 Op: == of type bool [line: 30]						   |	4 2 0 5 3 1 6
.   .   .   .   Child: 0 Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 30]		   |	4 6 1 3 5 0 2
.   .   .   .   Child: 1 Id: n of type int [mem: Global loc: -78 size: 1] [line: 30]		   |	4 6 1 5 2 0 3
.   .   .   Child: 1 Call: printboard of type void [line: 31]					   |	5 0 2 4 6 1 3
.   .   .   .   Child: 0 Id: col of array of type int [mem: Global loc: -14 size: 13] [line: 31]   |	5 1 4 0 3 6 2
.   .   .   Child: 2 Compound [mem: None loc: 0 size: -4] [line: 32]				   |	5 2 0 3 6 4 1
.   .   .   .   Child: 1 Assign: = of type int [line: 33]					   |	5 2 4 6 0 3 1
.   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -3 size: 1] [line: 33]		   |	5 2 6 3 0 4 1
.   .   .   .   .   Child: 1 Const 0 of type int [line: 33]					   |	5 3 1 6 4 2 0
.   .   .   .   Sibling: 1 While [line: 34]							   |	5 3 6 0 2 4 1
.   .   .   .   .   Child: 0 Op: < of type bool [line: 34]					   |	6 1 3 5 0 2 4
.   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -3 size: 1] [line: 34]	   |	6 2 5 1 4 0 3
.   .   .   .   .   .   Child: 1 Id: n of type int [mem: Global loc: -78 size: 1] [line: 34]	   |	6 3 0 4 1 5 2
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 34]			   |	6 4 2 0 5 3 1
.   .   .   .   .   .   Child: 1 If [line: 35]							   |	40
.   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 35]				   |	entered: 0
.   .   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 35]			   |	Bye.
.   .   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 35]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 35]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: row of array of type int [mem: Global l   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: r of type int [mem: Local loc: -3 size:   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 35]			   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 35]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 35]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: diagone of array of type int [mem: Glob   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 35]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -3 s   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: c of type int [mem: Parameter loc:    <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 35]			   <
.   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 35]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 35]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: diagtwo of array of type int [mem: Global l   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 35]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 35]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -3 s   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 35]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Global loc:   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 35]	   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: c of type int [mem: Parameter loc: -2 s   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 35]			   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 35]		   <
.   .   .   .   .   .   .   .   Child: 1 Assign: = of type int [line: 36]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 36]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: row of array of type int [mem: Global loc:    <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: r of type int [mem: Local loc: -3 size: 1]    <
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 36]			   <
.   .   .   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 37]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 37]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: col of array of type int [mem: Global loc:    <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: c of type int [mem: Parameter loc: -2 size:   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: r of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 38]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 38]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: diagone of array of type int [mem: Global l   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 38]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -3 size:   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: c of type int [mem: Parameter loc: -2 s   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 38]			   <
.   .   .   .   .   .   .   .   Sibling: 3 Assign: = of type int [line: 39]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 39]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: diagtwo of array of type int [mem: Global l   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 39]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 39]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -3 s   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 39]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Global loc:   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 39]	   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: c of type int [mem: Parameter loc: -2 s   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 39]			   <
.   .   .   .   .   .   .   .   Sibling: 4 Call: try of type void [line: 40]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 40]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Parameter loc: -2 size:   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 40]			   <
.   .   .   .   .   .   .   .   Sibling: 5 Assign: = of type int [line: 41]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 41]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: row of array of type int [mem: Global loc:    <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: r of type int [mem: Local loc: -3 size: 1]    <
.   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 41]			   <
.   .   .   .   .   .   .   .   Sibling: 6 Assign: = of type int [line: 42]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 42]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: diagone of array of type int [mem: Global l   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 42]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -3 size:   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: c of type int [mem: Parameter loc: -2 s   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 42]			   <
.   .   .   .   .   .   .   .   Sibling: 7 Assign: = of type int [line: 43]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 43]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: diagtwo of array of type int [mem: Global l   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 43]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 43]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -3 s   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 43]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Global loc:   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 43]	   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: c of type int [mem: Parameter loc: -2 s   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 43]			   <
.   .   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 45]				   <
.   .   .   .   .   .   .   Child: 0 Id: r of type int [mem: Local loc: -3 size: 1] [line: 45]	   <
Sibling: 8 Func: solve returns type int [mem: Global loc: 0 size: -3] [line: 50]		   <
.   Child: 0 Parm: num of type int [mem: Parameter loc: -2 size: 1] [line: 50]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 51]					   <
.   .   Child: 1 Assign: = of type int [line: 52]						   <
.   .   .   Child: 0 Id: n of type int [mem: Global loc: -78 size: 1] [line: 52]		   <
.   .   .   Child: 1 Id: num of type int [mem: Parameter loc: -2 size: 1] [line: 52]		   <
.   .   Sibling: 1 Assign: = of type int [line: 53]						   <
.   .   .   Child: 0 Id: count of type int [mem: Global loc: -79 size: 1] [line: 53]		   <
.   .   .   Child: 1 Const 0 of type int [line: 53]						   <
.   .   Sibling: 2 Call: try of type void [line: 54]						   <
.   .   .   Child: 0 Const 0 of type int [line: 54]						   <
.   .   Sibling: 3 Return [line: 56]								   <
.   .   .   Child: 0 Id: count of type int [mem: Global loc: -79 size: 1] [line: 56]		   <
Sibling: 9 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 59]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 60]					   <
.   .   Child: 0 Var: num of type int [mem: Local loc: -2 size: 1] [line: 61]			   <
.   .   Child: 1 While [line: 63]								   <
.   .   .   Child: 0 Op: > of type bool [line: 63]						   <
.   .   .   .   Child: 0 Assign: = of type int [line: 63]					   <
.   .   .   .   .   Child: 0 Id: num of type int [mem: Local loc: -2 size: 1] [line: 63]	   <
.   .   .   .   .   Child: 1 Call: input of type int [line: 63]					   <
.   .   .   .   Child: 1 Const 0 of type int [line: 63]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 63]				   <
.   .   .   .   Child: 1 Call: output of type void [line: 64]					   <
.   .   .   .   .   Child: 0 Call: solve of type int [line: 64]					   <
.   .   .   .   .   .   Child: 0 Id: num of type int [mem: Local loc: -2 size: 1] [line: 64]	   <
.   .   .   .   Sibling: 1 Call: outnl of type void [line: 65]					   <
Offset for end of global space: -80								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: return.c-
-rwxrwx--- 1 root vboxsf  128 May  2 10:23 return.c-
-rwxrwx--- 1 root vboxsf   33 May  2 10:26 return.expected
-rwxrwx--- 1 root vboxsf 1105 May  4  2021 return.mem
-rwxrwx--- 1 root vboxsf 1142 May  4  2021 return.out
return.out ztmp4778.txt differ: byte 1, line 1
return (Output DIFF)
Func: null returns type int [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: return.tm
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 2]					   |	107
.   .   Child: 1 Return [line: 3]								   |	Bye.
.   .   .   Child: 0 Const 107 of type int [line: 3]						   <
Sibling: 1 Func: cat returns type int [mem: Global loc: 0 size: -2] [line: 6]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 7]					   <
.   .   Child: 1 Return [line: 8]								   <
.   .   .   Child: 0 Call: null of type int [line: 8]						   <
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 11]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 12]					   <
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 13]			   <
.   .   Child: 1 Const 899 of type int [line: 14]						   <
.   .   Sibling: 1 Assign: = of type int [line: 15]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 15]			   <
.   .   .   Child: 1 Call: cat of type int [line: 15]						   <
.   .   Sibling: 2 Call: output of type void [line: 16]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 16]			   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: righttri.c-
-rwxrwx--- 1 root vboxsf  757 Apr 30 16:43 righttri.c-
-rwxrwx--- 1 root vboxsf  175 May  2 10:26 righttri.expected
-rwxrwx--- 1 root vboxsf   16 Dec  1  2014 righttri.in
-rwxrwx--- 1 root vboxsf 9003 May  4  2021 righttri.mem
-rwxrwx--- 1 root vboxsf 9040 May  4  2021 righttri.out
righttri.out ztmp4778.txt differ: byte 1, line 1
righttri (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 3]				   |	Loading file: righttri.tm
.   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 4]					   |	4 3 5
.   .   Child: 0 Var: a of type int [mem: Local loc: -2 size: 1] [line: 5]			   |	8 6 10
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -3 size: 1] [line: 6]			   |	12 5 13
.   .   Sibling: 2 Var: aa of type int [mem: Local loc: -4 size: 1] [line: 7]			   |	12 9 15
.   .   Sibling: 3 Var: bb of type int [mem: Local loc: -5 size: 1] [line: 8]			   |	15 8 17
.   .   Sibling: 4 Var: c of type int [mem: Local loc: -6 size: 1] [line: 9]			   |	16 12 20
.   .   Sibling: 5 Var: cc of type int [mem: Local loc: -7 size: 1] [line: 10]			   |	20 15 25
.   .   Child: 1 Assign: = of type int [line: 12]						   |	21 20 29
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 12]			   |	24 7 25
.   .   .   Child: 1 Const 1 of type int [line: 12]						   |	24 10 26
.   .   Sibling: 1 Assign: = of type int [line: 13]						   |	24 18 30
.   .   .   Child: 0 Id: aa of type int [mem: Local loc: -4 size: 1] [line: 13]			   |	28 21 35
.   .   .   Child: 1 Const 1 of type int [line: 13]						   |	30 16 34
.   .   Sibling: 2 Assign: = of type int [line: 14]						   |	32 24 40
.   .   .   Child: 0 Id: c of type int [mem: Local loc: -6 size: 1] [line: 14]			   |	35 12 37
.   .   .   Child: 1 Const 0 of type int [line: 14]						   |	36 15 39
.   .   Sibling: 3 While [line: 15]								   |	36 27 45
.   .   .   Child: 0 Op: < of type bool [line: 15]						   |	Bye.
.   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -6 size: 1] [line: 15]		   <
.   .   .   .   Child: 1 Const 50 of type int [line: 15]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 15]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 16]					   <
.   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -6 size: 1] [line: 16]		   <
.   .   .   .   .   Child: 1 Assign: = of type int [line: 16]					   <
.   .   .   .   .   .   Child: 0 Id: cc of type int [mem: Local loc: -7 size: 1] [line: 16]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 16]					   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 17]					   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 17]		   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 17]					   <
.   .   .   .   Sibling: 2 Assign: = of type int [line: 18]					   <
.   .   .   .   .   Child: 0 Id: bb of type int [mem: Local loc: -5 size: 1] [line: 18]		   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 18]					   <
.   .   .   .   Sibling: 3 While [line: 19]							   <
.   .   .   .   .   Child: 0 Op: <= of type bool [line: 19]					   <
.   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 19]	   <
.   .   .   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -2 size: 1] [line: 19]	   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 19]			   <
.   .   .   .   .   .   Child: 1 If [line: 20]							   <
.   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 20]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: % of type int [line: 20]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: / of type int [line: 20]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 20]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: aa of type int [mem: Local loc: -4 size   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: bb of type int [mem: Local loc: -5 size   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 20]			   <
.   .   .   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 20]			   <
.   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 20]				   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 20]		   <
.   .   .   .   .   .   .   .   Child: 1 While [line: 21]					   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: < of type bool [line: 21]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: cc of type int [mem: Local loc: -7 size: 1]   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 21]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: aa of type int [mem: Local loc: -4 size   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: bb of type int [mem: Local loc: -5 size   <
.   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 21]	   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Assign: = of type int [line: 22]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -6 size:   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 22]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -6 s   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 22]		   <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 23]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: cc of type int [mem: Local loc: -7 size   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 23]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 23]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: cc of type int [mem: Local loc:   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 23]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 23]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: c of type int [mem: Local l   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 23]		   <
.   .   .   .   .   .   .   .   Sibling: 1 If [line: 25]					   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 25]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 25]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: aa of type int [mem: Local loc: -4 size   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: bb of type int [mem: Local loc: -5 size   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: cc of type int [mem: Local loc: -7 size: 1]   <
.   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 25]	   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Call: output of type void [line: 26]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size:   <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 Call: output of type void [line: 27]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size:   <
.   .   .   .   .   .   .   .   .   .   Sibling: 2 Call: output of type void [line: 28]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -6 size:   <
.   .   .   .   .   .   .   .   .   .   Sibling: 3 Call: outnl of type void [line: 29]		   <
.   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 32]				   <
.   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 32]	   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 32]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 3   <
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 32]				   <
.   .   .   .   .   .   Sibling: 2 Assign: = of type int [line: 33]				   <
.   .   .   .   .   .   .   Child: 0 Id: bb of type int [mem: Local loc: -5 size: 1] [line: 33]	   <
.   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 33]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 33]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: bb of type int [mem: Local loc: -5 size: 1] [li   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 33]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 33]			   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1]    <
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 33]				   <
.   .   .   .   Sibling: 4 Assign: = of type int [line: 35]					   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 35]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 35]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 35]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 35]					   <
.   .   .   .   Sibling: 5 Assign: = of type int [line: 36]					   <
.   .   .   .   .   Child: 0 Id: aa of type int [mem: Local loc: -4 size: 1] [line: 36]		   <
.   .   .   .   .   Child: 1 Op: - of type int [line: 36]					   <
.   .   .   .   .   .   Child: 0 Op: + of type int [line: 36]					   <
.   .   .   .   .   .   .   Child: 0 Id: aa of type int [mem: Local loc: -4 size: 1] [line: 36]	   <
.   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 36]				   <
.   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 36]				   <
.   .   .   .   .   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -2 size: 1] [line: 3   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 36]					   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: scope2.c-
-rwxrwx--- 1 root vboxsf  638 Apr 30 16:30 scope2.c-
-rwxrwx--- 1 root vboxsf   89 May  2 10:26 scope2.expected
-rwxrwx--- 1 root vboxsf 6700 May  4  2021 scope2.mem
-rwxrwx--- 1 root vboxsf 6737 May  4  2021 scope2.out
scope2.out ztmp4778.txt differ: byte 1, line 1
scope2 (Output DIFF)
Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: scope2.tm
Sibling: 1 Func: ant returns type int [mem: Global loc: 0 size: -3] [line: 2]			   |	444 555 666 777 888
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]			   |	444 111 777 888
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 3]					   |	11 12 777 15
.   .   Child: 0 Var: a of type int [mem: Local loc: -3 size: 1] [line: 4]			   |	815 777 16
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -4 size: 1] [line: 5]			   |	Bye.
.   .   Child: 1 Assign: = of type int [line: 6]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -4 size: 1] [line: 6]			   <
.   .   .   Child: 1 Const 111 of type int [line: 6]						   <
.   .   Sibling: 1 Assign: = of type int [line: 7]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 7]		   <
.   .   .   Child: 1 Const 222 of type int [line: 7]						   <
.   .   Sibling: 2 Assign: = of type int [line: 8]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 8]			   <
.   .   .   Child: 1 Const 333 of type int [line: 8]						   <
.   .   Sibling: 3 Compound [mem: None loc: 0 size: -7] [line: 9]				   <
.   .   .   Child: 0 Var: c of type int [mem: Local loc: -5 size: 1] [line: 10]			   <
.   .   .   Sibling: 1 Var: b of type int [mem: Local loc: -6 size: 1] [line: 11]		   <
.   .   .   Child: 1 Assign: = of type int [line: 12]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -3 size: 1] [line: 12]		   <
.   .   .   .   Child: 1 Const 444 of type int [line: 12]					   <
.   .   .   Sibling: 1 Assign: = of type int [line: 13]						   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 13]		   <
.   .   .   .   Child: 1 Const 555 of type int [line: 13]					   <
.   .   .   Sibling: 2 Assign: = of type int [line: 14]						   <
.   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -5 size: 1] [line: 14]		   <
.   .   .   .   Child: 1 Const 666 of type int [line: 14]					   <
.   .   .   Sibling: 3 Assign: = of type int [line: 15]						   <
.   .   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 15]		   <
.   .   .   .   Child: 1 Const 777 of type int [line: 15]					   <
.   .   .   Sibling: 4 Assign: = of type int [line: 16]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 16]		   <
.   .   .   .   Child: 1 Const 888 of type int [line: 16]					   <
.   .   .   Sibling: 5 Call: output of type void [line: 17]					   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -3 size: 1] [line: 17]		   <
.   .   .   Sibling: 6 Call: output of type void [line: 18]					   <
.   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 18]		   <
.   .   .   Sibling: 7 Call: output of type void [line: 19]					   <
.   .   .   .   Child: 0 Id: c of type int [mem: Local loc: -5 size: 1] [line: 19]		   <
.   .   .   Sibling: 8 Call: output of type void [line: 20]					   <
.   .   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 20]		   <
.   .   .   Sibling: 9 Call: output of type void [line: 21]					   <
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 21]		   <
.   .   .   Sibling: 10 Call: outnl of type void [line: 22]					   <
.   .   Sibling: 4 Call: output of type void [line: 24]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -3 size: 1] [line: 24]			   <
.   .   Sibling: 5 Call: output of type void [line: 25]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -4 size: 1] [line: 25]			   <
.   .   Sibling: 6 Call: output of type void [line: 26]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 26]			   <
.   .   Sibling: 7 Call: output of type void [line: 27]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 27]		   <
.   .   Sibling: 8 Call: outnl of type void [line: 28]						   <
.   .   Sibling: 9 Assign: = of type int [line: 29]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -3 size: 1] [line: 29]			   <
.   .   .   Child: 1 Const 11 of type int [line: 29]						   <
.   .   Sibling: 10 Assign: = of type int [line: 30]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -4 size: 1] [line: 30]			   <
.   .   .   Child: 1 Const 12 of type int [line: 30]						   <
.   .   Sibling: 11 Assign: = of type int [line: 31]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 31]		   <
.   .   .   Child: 1 Const 14 of type int [line: 31]						   <
.   .   Sibling: 12 Compound [mem: None loc: 0 size: -5] [line: 32]				   <
.   .   .   Child: 1 Assign: = of type int [line: 33]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 33]		   <
.   .   .   .   Child: 1 Const 15 of type int [line: 33]					   <
.   .   Sibling: 13 Call: output of type void [line: 35]					   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -3 size: 1] [line: 35]			   <
.   .   Sibling: 14 Call: output of type void [line: 36]					   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -4 size: 1] [line: 36]			   <
.   .   Sibling: 15 Call: output of type void [line: 37]					   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 37]			   <
.   .   Sibling: 16 Call: output of type void [line: 38]					   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 38]		   <
.   .   Sibling: 17 Call: outnl of type void [line: 39]						   <
.   .   Sibling: 18 Return [line: 41]								   <
.   .   .   Child: 0 Op: + of type int [line: 41]						   <
.   .   .   .   Child: 0 Op: + of type int [line: 41]						   <
.   .   .   .   .   Child: 0 Op: + of type int [line: 41]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -3 size: 1] [line: 41]	   <
.   .   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -4 size: 1] [line: 41]	   <
.   .   .   .   .   Child: 1 Id: g of type int [mem: Global loc: 0 size: 1] [line: 41]		   <
.   .   .   .   Child: 1 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 41]		   <
Sibling: 2 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 44]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 45]					   <
.   .   Child: 0 Var: a of type int [mem: Local loc: -2 size: 1] [line: 46]			   <
.   .   Child: 1 Assign: = of type int [line: 47]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 47]			   <
.   .   .   Child: 1 Const 16 of type int [line: 47]						   <
.   .   Sibling: 1 Assign: = of type int [line: 48]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 48]			   <
.   .   .   Child: 1 Const 1 of type int [line: 48]						   <
.   .   Sibling: 2 Call: output of type void [line: 49]						   <
.   .   .   Child: 0 Call: ant of type int [line: 49]						   <
.   .   .   .   Child: 0 Const 2 of type int [line: 49]						   <
.   .   Sibling: 3 Call: output of type void [line: 50]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 50]			   <
.   .   Sibling: 4 Call: output of type void [line: 51]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -2 size: 1] [line: 51]			   <
.   .   Sibling: 5 Call: outnl of type void [line: 52]						   <
Offset for end of global space: -1								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: sieve.c-
-rwxrwx--- 1 root vboxsf  418 Apr 30 16:30 sieve.c-
-rwxrwx--- 1 root vboxsf  183 May  2 10:26 sieve.expected
-rwxrwx--- 1 root vboxsf   17 Dec  1  2014 sieve.in
-rwxrwx--- 1 root vboxsf 7231 May  4  2021 sieve.mem
-rwxrwx--- 1 root vboxsf 7268 May  4  2021 sieve.out
sieve.out ztmp4778.txt differ: byte 1, line 1
sieve (Output DIFF)
Func: main returns type int [mem: Global loc: 0 size: -2] [line: 3]				   |	Loading file: sieve.tm
.   Child: 1 Compound [mem: None loc: 0 size: -206] [line: 4]					   |	2
.   .   Child: 0 Var: max of type int [mem: Local loc: -2 size: 1] [line: 5]			   |	3
.   .   Sibling: 1 Var: k of type int [mem: Local loc: -3 size: 1] [line: 5]			   |	5
.   .   Sibling: 2 Var: n of array of type bool [mem: Local loc: -5 size: 202] [line: 6]	   |	7
.   .   Child: 1 Assign: = of type int [line: 8]						   |	11
.   .   .   Child: 0 Id: max of type int [mem: Local loc: -2 size: 1] [line: 8]			   |	13
.   .   .   Child: 1 Const 200 of type int [line: 8]						   |	17
.   .   Sibling: 1 Assign: = of type int [line: 10]						   |	19
.   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 10]			   |	23
.   .   .   Child: 1 Const 2 of type int [line: 10]						   |	29
.   .   Sibling: 2 While [line: 11]								   |	31
.   .   .   Child: 0 Op: <= of type bool [line: 11]						   |	37
.   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 11]		   |	41
.   .   .   .   Child: 1 Id: max of type int [mem: Local loc: -2 size: 1] [line: 11]		   |	43
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -206] [line: 11]				   |	47
.   .   .   .   Child: 1 Assign: = of type bool [line: 11]					   |	53
.   .   .   .   .   Child: 0 Op: [ of type bool [line: 11]					   |	59
.   .   .   .   .   .   Child: 0 Id: n of array of type bool [mem: Local loc: -5 size: 202] [lin   |	61
.   .   .   .   .   .   Child: 1 Id: k of type int [mem: Local loc: -3 size: 1] [line: 11]	   |	67
.   .   .   .   .   Child: 1 Const true of type bool [line: 11]					   |	71
.   .   .   .   Sibling: 1 Assign: = of type int [line: 11]					   |	73
.   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 11]		   |	79
.   .   .   .   .   Child: 1 Op: + of type int [line: 11]					   |	83
.   .   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 11]	   |	89
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 11]					   |	97
.   .   Sibling: 3 Assign: = of type int [line: 13]						   |	101
.   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 13]			   |	103
.   .   .   Child: 1 Const 2 of type int [line: 13]						   |	107
.   .   Sibling: 4 While [line: 14]								   |	109
.   .   .   Child: 0 Op: <= of type bool [line: 14]						   |	113
.   .   .   .   Child: 0 Op: * of type int [line: 14]						   |	127
.   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 14]		   |	131
.   .   .   .   .   Child: 1 Id: k of type int [mem: Local loc: -3 size: 1] [line: 14]		   |	137
.   .   .   .   Child: 1 Id: max of type int [mem: Local loc: -2 size: 1] [line: 14]		   |	139
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -207] [line: 14]				   |	149
.   .   .   .   Child: 0 Var: j of type int [mem: Local loc: -206 size: 1] [line: 15]		   |	151
.   .   .   .   Child: 1 Assign: = of type int [line: 17]					   |	157
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -206 size: 1] [line: 17]	   |	163
.   .   .   .   .   Child: 1 Op: * of type int [line: 17]					   |	167
.   .   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 17]	   |	173
.   .   .   .   .   .   Child: 1 Id: k of type int [mem: Local loc: -3 size: 1] [line: 17]	   |	179
.   .   .   .   Sibling: 1 While [line: 18]							   |	181
.   .   .   .   .   Child: 0 Op: <= of type bool [line: 18]					   |	191
.   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -206 size: 1] [line: 18]	   |	193
.   .   .   .   .   .   Child: 1 Id: max of type int [mem: Local loc: -2 size: 1] [line: 18]	   |	197
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -207] [line: 18]			   |	199
.   .   .   .   .   .   Child: 1 Assign: = of type bool [line: 19]				   |	Bye.
.   .   .   .   .   .   .   Child: 0 Op: [ of type bool [line: 19]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: n of array of type bool [mem: Local loc: -5 size: 2   <
.   .   .   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -206 size: 1] [line:   <
.   .   .   .   .   .   .   Child: 1 Const false of type bool [line: 19]			   <
.   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 20]				   <
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -206 size: 1] [line: 20]   <
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 20]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -206 size: 1] [line:   <
.   .   .   .   .   .   .   .   Child: 1 Id: k of type int [mem: Local loc: -3 size: 1] [line: 2   <
.   .   .   .   Sibling: 2 Assign: = of type int [line: 22]					   <
.   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 22]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 22]					   <
.   .   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 22]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 22]					   <
.   .   .   .   Sibling: 3 While [line: 23]							   <
.   .   .   .   .   Child: 0 Op: and of type bool [line: 23]					   <
.   .   .   .   .   .   Child: 0 Op: <= of type bool [line: 23]					   <
.   .   .   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 23]	   <
.   .   .   .   .   .   .   Child: 1 Id: max of type int [mem: Local loc: -2 size: 1] [line: 23]   <
.   .   .   .   .   .   Child: 1 Op: not of type bool [line: 23]				   <
.   .   .   .   .   .   .   Child: 0 Op: [ of type bool [line: 23]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: n of array of type bool [mem: Local loc: -5 size: 2   <
.   .   .   .   .   .   .   .   Child: 1 Id: k of type int [mem: Local loc: -3 size: 1] [line: 2   <
.   .   .   .   .   Child: 1 Assign: = of type int [line: 23]					   <
.   .   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 23]	   <
.   .   .   .   .   .   Child: 1 Op: + of type int [line: 23]					   <
.   .   .   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 23]	   <
.   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 23]				   <
.   .   Sibling: 5 Assign: = of type int [line: 26]						   <
.   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 26]			   <
.   .   .   Child: 1 Const 2 of type int [line: 26]						   <
.   .   Sibling: 6 While [line: 27]								   <
.   .   .   Child: 0 Op: <= of type bool [line: 27]						   <
.   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 27]		   <
.   .   .   .   Child: 1 Id: max of type int [mem: Local loc: -2 size: 1] [line: 27]		   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -206] [line: 27]				   <
.   .   .   .   Child: 1 If [line: 27]								   <
.   .   .   .   .   Child: 0 Op: [ of type bool [line: 27]					   <
.   .   .   .   .   .   Child: 0 Id: n of array of type bool [mem: Local loc: -5 size: 202] [lin   <
.   .   .   .   .   .   Child: 1 Id: k of type int [mem: Local loc: -3 size: 1] [line: 27]	   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -206] [line: 27]			   <
.   .   .   .   .   .   Child: 1 Call: output of type void [line: 27]				   <
.   .   .   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 27]	   <
.   .   .   .   .   .   Sibling: 1 Call: outnl of type void [line: 27]				   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 27]					   <
.   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 27]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 27]					   <
.   .   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -3 size: 1] [line: 27]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 27]					   <
.   .   Sibling: 7 Return [line: 29]								   <
.   .   .   Child: 0 Const 0 of type int [line: 29]						   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: sort.c-
-rwxrwx--- 1 root vboxsf  702 Apr 30 23:19 sort.c-
-rwxrwx--- 1 root vboxsf  177 May  2 10:26 sort.expected
-rwxrwx--- 1 root vboxsf   44 Dec  1  2014 sort.in
-rwxrwx--- 1 root vboxsf 9206 May  4  2021 sort.mem
-rwxrwx--- 1 root vboxsf 9243 May  4  2021 sort.out
sort.out ztmp4778.txt differ: byte 1, line 1
sort (Output DIFF)
Var: x of array of type int [mem: Global loc: -1 size: 11] [line: 3]				   |	Loading file: sort.tm
Sibling: 1 Func: minloc returns type int [mem: Global loc: 0 size: -5] [line: 5]		   |	entered: 31
.   Child: 0 Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 5]		   |	entered: 41
.   Sibling: 1 Parm: low of type int [mem: Parameter loc: -3 size: 1] [line: 5]			   |	entered: 59
.   Sibling: 2 Parm: high of type int [mem: Parameter loc: -4 size: 1] [line: 5]		   |	entered: 26
.   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 6]					   |	entered: 53
.   .   Child: 0 Var: i of type int [mem: Local loc: -5 size: 1] [line: 7]			   |	entered: 58
.   .   Sibling: 1 Var: x of type int [mem: Local loc: -6 size: 1] [line: 7]			   |	entered: 97
.   .   Sibling: 2 Var: k of type int [mem: Local loc: -7 size: 1] [line: 7]			   |	entered: 93
.   .   Child: 1 Assign: = of type int [line: 9]						   |	entered: 23
.   .   .   Child: 0 Id: k of type int [mem: Local loc: -7 size: 1] [line: 9]			   |	entered: 84
.   .   .   Child: 1 Id: low of type int [mem: Parameter loc: -3 size: 1] [line: 9]		   |	23 26 31 41 53 58 59 84 93 97
.   .   Sibling: 1 Assign: = of type int [line: 10]						   |	Bye.
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -6 size: 1] [line: 10]			   <
.   .   .   Child: 1 Op: [ of type int [line: 10]						   <
.   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 10]	   <
.   .   .   .   Child: 1 Id: low of type int [mem: Parameter loc: -3 size: 1] [line: 10]	   <
.   .   Sibling: 2 Assign: = of type int [line: 11]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 11]			   <
.   .   .   Child: 1 Op: + of type int [line: 11]						   <
.   .   .   .   Child: 0 Id: low of type int [mem: Parameter loc: -3 size: 1] [line: 11]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 11]						   <
.   .   Sibling: 3 While [line: 13]								   <
.   .   .   Child: 0 Op: < of type bool [line: 13]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 13]		   <
.   .   .   .   Child: 1 Id: high of type int [mem: Parameter loc: -4 size: 1] [line: 13]	   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 13]				   <
.   .   .   .   Child: 1 If [line: 14]								   <
.   .   .   .   .   Child: 0 Op: < of type bool [line: 14]					   <
.   .   .   .   .   .   Child: 0 Op: [ of type int [line: 14]					   <
.   .   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1]   <
.   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size: 1] [line: 14]	   <
.   .   .   .   .   .   Child: 1 Id: x of type int [mem: Local loc: -6 size: 1] [line: 14]	   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 14]			   <
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 15]				   <
.   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -6 size: 1] [line: 15]	   <
.   .   .   .   .   .   .   Child: 1 Op: [ of type int [line: 15]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size   <
.   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size: 1] [line: 1   <
.   .   .   .   .   .   Sibling: 1 Assign: = of type int [line: 16]				   <
.   .   .   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -7 size: 1] [line: 16]	   <
.   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size: 1] [line: 16]	   <
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 18]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 18]		   <
.   .   Sibling: 4 Return [line: 21]								   <
.   .   .   Child: 0 Id: k of type int [mem: Local loc: -7 size: 1] [line: 21]			   <
Sibling: 2 Func: sort returns type void [mem: Global loc: 0 size: -5] [line: 24]		   <
.   Child: 0 Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 24]		   <
.   Sibling: 1 Parm: low of type int [mem: Parameter loc: -3 size: 1] [line: 24]		   <
.   Sibling: 2 Parm: high of type int [mem: Parameter loc: -4 size: 1] [line: 24]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -7] [line: 25]					   <
.   .   Child: 0 Var: i of type int [mem: Local loc: -5 size: 1] [line: 26]			   <
.   .   Sibling: 1 Var: k of type int [mem: Local loc: -6 size: 1] [line: 26]			   <
.   .   Child: 1 Assign: = of type int [line: 28]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 28]			   <
.   .   .   Child: 1 Id: low of type int [mem: Parameter loc: -3 size: 1] [line: 28]		   <
.   .   Sibling: 1 While [line: 29]								   <
.   .   .   Child: 0 Op: < of type bool [line: 29]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 29]		   <
.   .   .   .   Child: 1 Op: - of type int [line: 29]						   <
.   .   .   .   .   Child: 0 Id: high of type int [mem: Parameter loc: -4 size: 1] [line: 29]	   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 29]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 29]				   <
.   .   .   .   Child: 0 Var: t of type int [mem: Local loc: -7 size: 1] [line: 30]		   <
.   .   .   .   Child: 1 Assign: = of type int [line: 32]					   <
.   .   .   .   .   Child: 0 Id: k of type int [mem: Local loc: -6 size: 1] [line: 32]		   <
.   .   .   .   .   Child: 1 Call: minloc of type int [line: 32]				   <
.   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Sibling: 1 Id: i of type int [mem: Local loc: -5 size: 1] [line: 32]	   <
.   .   .   .   .   .   Sibling: 2 Id: high of type int [mem: Parameter loc: -4 size: 1] [line:    <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 33]					   <
.   .   .   .   .   Child: 0 Id: t of type int [mem: Local loc: -7 size: 1] [line: 33]		   <
.   .   .   .   .   Child: 1 Op: [ of type int [line: 33]					   <
.   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: k of type int [mem: Local loc: -6 size: 1] [line: 33]	   <
.   .   .   .   Sibling: 2 Assign: = of type int [line: 34]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 34]					   <
.   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: k of type int [mem: Local loc: -6 size: 1] [line: 34]	   <
.   .   .   .   .   Child: 1 Op: [ of type int [line: 34]					   <
.   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size: 1] [line: 34]	   <
.   .   .   .   Sibling: 3 Assign: = of type int [line: 35]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 35]					   <
.   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size: 1] [line: 35]	   <
.   .   .   .   .   Child: 1 Id: t of type int [mem: Local loc: -7 size: 1] [line: 35]		   <
.   .   .   .   Sibling: 4 Assign: ++ of type int [line: 36]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 36]		   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 40]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 41]					   <
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 42]			   <
.   .   Child: 1 Assign: = of type int [line: 44]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 44]			   <
.   .   .   Child: 1 Const 0 of type int [line: 44]						   <
.   .   Sibling: 1 While [line: 45]								   <
.   .   .   Child: 0 Op: < of type bool [line: 45]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 45]		   <
.   .   .   .   Child: 1 Const 10 of type int [line: 45]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 45]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 46]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 46]					   <
.   .   .   .   .   .   Child: 0 Id: x of array of type int [mem: Global loc: -1 size: 11] [line   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -2 size: 1] [line: 46]	   <
.   .   .   .   .   Child: 1 Call: input of type int [line: 46]					   <
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 47]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 47]		   <
.   .   Sibling: 2 Call: sort of type void [line: 50]						   <
.   .   .   Child: 0 Id: x of array of type int [mem: Global loc: -1 size: 11] [line: 50]	   <
.   .   .   Sibling: 1 Const 0 of type int [line: 50]						   <
.   .   .   Sibling: 2 Const 10 of type int [line: 50]						   <
.   .   Sibling: 3 Assign: = of type int [line: 51]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 51]			   <
.   .   .   Child: 1 Const 0 of type int [line: 51]						   <
.   .   Sibling: 4 While [line: 52]								   <
.   .   .   Child: 0 Op: < of type bool [line: 52]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 52]		   <
.   .   .   .   Child: 1 Const 10 of type int [line: 52]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 52]				   <
.   .   .   .   Child: 1 Call: output of type void [line: 53]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 53]					   <
.   .   .   .   .   .   Child: 0 Id: x of array of type int [mem: Global loc: -1 size: 11] [line   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -2 size: 1] [line: 53]	   <
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 54]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 54]		   <
Offset for end of global space: -11								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: sort2.c-
-rwxrwx--- 1 root vboxsf  481 Apr 30 16:30 sort2.c-
-rwxrwx--- 1 root vboxsf  445 May  2 10:26 sort2.expected
-rwxrwx--- 1 root vboxsf   74 May  2  2020 sort2.in
-rwxrwx--- 1 root vboxsf 7083 May  4  2021 sort2.mem
-rwxrwx--- 1 root vboxsf 7120 May  4  2021 sort2.out
sort2.out ztmp4778.txt differ: byte 64, line 2
sort2 (Output DIFF)
WARNING(33): Variable 'x' may be uninitialized when used here.						WARNING(33): Variable 'x' may be uninitialized when used here.
Func: swap returns type void [mem: Global loc: 0 size: -5] [line: 2]				   |	Loading file: sort2.tm
.   Child: 0 Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 2]		   |	entered: 2
.   Sibling: 1 Parm: i of type int [mem: Parameter loc: -3 size: 1] [line: 2]			   |	entered: 91
.   Sibling: 2 Parm: j of type int [mem: Parameter loc: -4 size: 1] [line: 2]			   |	entered: 25
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 3]					   |	entered: 90
.   .   Child: 0 Var: t of type int [mem: Local loc: -5 size: 1] [line: 4]			   |	entered: 15
.   .   Child: 1 Assign: = of type int [line: 6]						   |	entered: 42
.   .   .   Child: 0 Id: t of type int [mem: Local loc: -5 size: 1] [line: 6]			   |	entered: 91
.   .   .   Child: 1 Op: [ of type int [line: 6]						   |	entered: 59
.   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 6]	   |	entered: 90
.   .   .   .   Child: 1 Id: i of type int [mem: Parameter loc: -3 size: 1] [line: 6]		   |	entered: 1
.   .   Sibling: 1 Assign: = of type int [line: 7]						   |	entered: 25
.   .   .   Child: 0 Op: [ of type int [line: 7]						   |	entered: 18
.   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 7]	   |	entered: 29
.   .   .   .   Child: 1 Id: i of type int [mem: Parameter loc: -3 size: 1] [line: 7]		   |	entered: 78
.   .   .   Child: 1 Op: [ of type int [line: 7]						   |	entered: 47
.   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 7]	   |	entered: 64
.   .   .   .   Child: 1 Id: j of type int [mem: Parameter loc: -4 size: 1] [line: 7]		   |	entered: 86
.   .   Sibling: 2 Assign: = of type int [line: 8]						   |	entered: 78
.   .   .   Child: 0 Op: [ of type int [line: 8]						   |	entered: 90
.   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 8]	   |	entered: 67
.   .   .   .   Child: 1 Id: j of type int [mem: Parameter loc: -4 size: 1] [line: 8]		   |	2 91 25 90 15 42 91 59 90 1 25 18 29 78 47 64 86 78 90 67
.   .   .   Child: 1 Id: t of type int [mem: Local loc: -5 size: 1] [line: 8]			   |	1 2 15 18 25 25 29 42 47 59 64 67 78 78 86 90 90 90 91 91
Sibling: 1 Func: sort returns type void [mem: Global loc: 0 size: -3] [line: 11]		   |	Bye.
.   Child: 0 Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 12]					   <
.   .   Child: 1 For [mem: None loc: 0 size: -4] [line: 13]					   <
.   .   .   Child: 0 Var: i of type int [mem: Local loc: -3 size: 1] [line: 13]			   <
.   .   .   Child: 1 Range [line: 13]								   <
.   .   .   .   Child: 0 Const 0 of type int [line: 13]						   <
.   .   .   .   Child: 1 Op: sizeof of type int [line: 13]					   <
.   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line:    <
.   .   .   Child: 2 Compound [mem: None loc: 0 size: -5] [line: 13]				   <
.   .   .   .   Child: 0 Var: minloc of type int [mem: Local loc: -4 size: 1] [line: 14]	   <
.   .   .   .   Child: 1 Assign: = of type int [line: 16]					   <
.   .   .   .   .   Child: 0 Id: minloc of type int [mem: Local loc: -4 size: 1] [line: 16]	   <
.   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1] [line: 16]		   <
.   .   .   .   Sibling: 1 For [mem: None loc: 0 size: -6] [line: 17]				   <
.   .   .   .   .   Child: 0 Var: j of type int [mem: Local loc: -5 size: 1] [line: 17]		   <
.   .   .   .   .   Child: 1 Range [line: 17]							   <
.   .   .   .   .   .   Child: 0 Op: + of type int [line: 17]					   <
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -3 size: 1] [line: 17]	   <
.   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 17]				   <
.   .   .   .   .   .   Child: 1 Op: sizeof of type int [line: 17]				   <
.   .   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1]   <
.   .   .   .   .   Child: 2 If [line: 17]							   <
.   .   .   .   .   .   Child: 0 Op: < of type bool [line: 17]					   <
.   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 17]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size   <
.   .   .   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -5 size: 1] [line: 1   <
.   .   .   .   .   .   .   Child: 1 Op: [ of type int [line: 17]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size   <
.   .   .   .   .   .   .   .   Child: 1 Id: minloc of type int [mem: Local loc: -4 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 17]				   <
.   .   .   .   .   .   .   Child: 0 Id: minloc of type int [mem: Local loc: -4 size: 1] [line:    <
.   .   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -5 size: 1] [line: 17]	   <
.   .   .   .   Sibling: 2 Call: swap of type void [line: 18]					   <
.   .   .   .   .   Child: 0 Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line:    <
.   .   .   .   .   Sibling: 1 Id: i of type int [mem: Local loc: -3 size: 1] [line: 18]	   <
.   .   .   .   .   Sibling: 2 Id: minloc of type int [mem: Local loc: -4 size: 1] [line: 18]	   <
Sibling: 2 Func: print returns type void [mem: Global loc: 0 size: -3] [line: 22]		   <
.   Child: 0 Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 22]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 23]					   <
.   .   Child: 1 For [mem: None loc: 0 size: -4] [line: 24]					   <
.   .   .   Child: 0 Var: i of type int [mem: Local loc: -3 size: 1] [line: 24]			   <
.   .   .   Child: 1 Range [line: 24]								   <
.   .   .   .   Child: 0 Const 0 of type int [line: 24]						   <
.   .   .   .   Child: 1 Op: sizeof of type int [line: 24]					   <
.   .   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line:    <
.   .   .   Child: 2 Call: output of type void [line: 24]					   <
.   .   .   .   Child: 0 Op: [ of type int [line: 24]						   <
.   .   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line:    <
.   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -3 size: 1] [line: 24]		   <
.   .   Sibling: 1 Call: outnl of type void [line: 25]						   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 29]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -23] [line: 30]					   <
.   .   Child: 0 Var: x of array of type int [mem: Local loc: -3 size: 21] [line: 30]		   <
.   .   Child: 1 For [mem: None loc: 0 size: -24] [line: 33]					   <
.   .   .   Child: 0 Var: i of type int [mem: Local loc: -23 size: 1] [line: 33]		   <
.   .   .   Child: 1 Range [line: 33]								   <
.   .   .   .   Child: 0 Const 0 of type int [line: 33]						   <
.   .   .   .   Child: 1 Op: sizeof of type int [line: 33]					   <
.   .   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 21] [line: 33]   <
.   .   .   Child: 2 Assign: = of type int [line: 33]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 33]						   <
.   .   .   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 21] [line: 33]   <
.   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -23 size: 1] [line: 33]		   <
.   .   .   .   Child: 1 Call: input of type int [line: 33]					   <
.   .   Sibling: 1 Call: print of type void [line: 34]						   <
.   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 21] [line: 34]	   <
.   .   Sibling: 2 Call: sort of type void [line: 35]						   <
.   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 21] [line: 35]	   <
.   .   Sibling: 3 Call: print of type void [line: 36]						   <
.   .   .   Child: 0 Id: x of array of type int [mem: Local loc: -3 size: 21] [line: 36]	   <
Offset for end of global space: 0								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: sudoku.c-
-rwxrwx--- 1 root vboxsf  5928 Apr 30 16:44 sudoku.c-
-rwxrwx--- 1 root vboxsf   186 May  2 10:26 sudoku.expected
-rwxrwx--- 1 root vboxsf   177 Dec  1  2014 sudoku.in
-rwxrwx--- 1 root vboxsf 38845 May  4  2021 sudoku.mem
-rwxrwx--- 1 root vboxsf 38882 May  4  2021 sudoku.out
sudoku.out ztmp4778.txt differ: byte 1, line 1
sudoku (Output DIFF)
Var: board of array of type int [mem: Global loc: -1 size: 82] [line: 20]			   |	Loading file: sudoku.tm
Sibling: 1 Var: locked of array of type bool [mem: Global loc: -83 size: 82] [line: 21]		   |	2 1 7 3 9 6 5 8 4
Sibling: 2 Func: initBoard returns type void [mem: Global loc: 0 size: -2] [line: 24]		   |	6 5 8 2 1 4 9 7 3
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 25]					   |	4 3 9 5 8 7 1 6 2
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 26]			   |	3 2 5 9 4 8 7 1 6
.   .   Child: 1 Assign: = of type int [line: 27]						   |	7 9 4 6 3 1 8 2 5
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 27]			   |	8 6 1 7 2 5 4 3 9
.   .   .   Child: 1 Const 0 of type int [line: 27]						   |	9 8 3 1 5 2 6 4 7
.   .   Sibling: 1 While [line: 28]								   |	1 7 2 4 6 9 3 5 8
.   .   .   Child: 0 Op: < of type bool [line: 28]						   |	5 4 6 8 7 3 2 9 1
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 28]		   <
.   .   .   .   Child: 1 Const 81 of type int [line: 28]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 28]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 29]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 29]					   <
.   .   .   .   .   .   Child: 0 Id: board of array of type int [mem: Global loc: -1 size: 82] [   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -2 size: 1] [line: 29]	   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 29]					   <
.   .   .   .   Sibling: 1 Assign: = of type bool [line: 30]					   <
.   .   .   .   .   Child: 0 Op: [ of type bool [line: 30]					   <
.   .   .   .   .   .   Child: 0 Id: locked of array of type bool [mem: Global loc: -83 size: 82   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -2 size: 1] [line: 30]	   <
.   .   .   .   .   Child: 1 Const false of type bool [line: 30]				   <
.   .   .   .   Sibling: 2 Assign: ++ of type int [line: 31]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 31]		   <
Sibling: 3 Func: setValue returns type void [mem: Global loc: 0 size: -5] [line: 36]		   <
.   Child: 0 Parm: row of type int [mem: Parameter loc: -2 size: 1] [line: 36]			   <
.   Sibling: 1 Parm: col of type int [mem: Parameter loc: -3 size: 1] [line: 36]		   <
.   Sibling: 2 Parm: value of type int [mem: Parameter loc: -4 size: 1] [line: 36]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 37]					   <
.   .   Child: 1 Assign: = of type int [line: 38]						   <
.   .   .   Child: 0 Op: [ of type int [line: 38]						   <
.   .   .   .   Child: 0 Id: board of array of type int [mem: Global loc: -1 size: 82] [line: 38   <
.   .   .   .   Child: 1 Op: + of type int [line: 38]						   <
.   .   .   .   .   Child: 0 Op: * of type int [line: 38]					   <
.   .   .   .   .   .   Child: 0 Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 38]   <
.   .   .   .   .   .   Child: 1 Const 9 of type int [line: 38]					   <
.   .   .   .   .   Child: 1 Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 38]	   <
.   .   .   Child: 1 Id: value of type int [mem: Parameter loc: -4 size: 1] [line: 38]		   <
Sibling: 4 Func: getValue returns type int [mem: Global loc: 0 size: -4] [line: 42]		   <
.   Child: 0 Parm: row of type int [mem: Parameter loc: -2 size: 1] [line: 42]			   <
.   Sibling: 1 Parm: col of type int [mem: Parameter loc: -3 size: 1] [line: 42]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 43]					   <
.   .   Child: 1 Return [line: 44]								   <
.   .   .   Child: 0 Op: [ of type int [line: 44]						   <
.   .   .   .   Child: 0 Id: board of array of type int [mem: Global loc: -1 size: 82] [line: 44   <
.   .   .   .   Child: 1 Op: + of type int [line: 44]						   <
.   .   .   .   .   Child: 0 Op: * of type int [line: 44]					   <
.   .   .   .   .   .   Child: 0 Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 44]   <
.   .   .   .   .   .   Child: 1 Const 9 of type int [line: 44]					   <
.   .   .   .   .   Child: 1 Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 44]	   <
Sibling: 5 Func: setLocked returns type void [mem: Global loc: 0 size: -5] [line: 48]		   <
.   Child: 0 Parm: row of type int [mem: Parameter loc: -2 size: 1] [line: 48]			   <
.   Sibling: 1 Parm: col of type int [mem: Parameter loc: -3 size: 1] [line: 48]		   <
.   Sibling: 2 Parm: value of type bool [mem: Parameter loc: -4 size: 1] [line: 48]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 49]					   <
.   .   Child: 1 Assign: = of type bool [line: 50]						   <
.   .   .   Child: 0 Op: [ of type bool [line: 50]						   <
.   .   .   .   Child: 0 Id: locked of array of type bool [mem: Global loc: -83 size: 82] [line:   <
.   .   .   .   Child: 1 Op: + of type int [line: 50]						   <
.   .   .   .   .   Child: 0 Op: * of type int [line: 50]					   <
.   .   .   .   .   .   Child: 0 Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 50]   <
.   .   .   .   .   .   Child: 1 Const 9 of type int [line: 50]					   <
.   .   .   .   .   Child: 1 Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 50]	   <
.   .   .   Child: 1 Id: value of type bool [mem: Parameter loc: -4 size: 1] [line: 50]		   <
Sibling: 6 Func: getLocked returns type bool [mem: Global loc: 0 size: -4] [line: 54]		   <
.   Child: 0 Parm: row of type int [mem: Parameter loc: -2 size: 1] [line: 54]			   <
.   Sibling: 1 Parm: col of type int [mem: Parameter loc: -3 size: 1] [line: 54]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 55]					   <
.   .   Child: 1 Return [line: 56]								   <
.   .   .   Child: 0 Op: [ of type bool [line: 56]						   <
.   .   .   .   Child: 0 Id: locked of array of type bool [mem: Global loc: -83 size: 82] [line:   <
.   .   .   .   Child: 1 Op: + of type int [line: 56]						   <
.   .   .   .   .   Child: 0 Op: * of type int [line: 56]					   <
.   .   .   .   .   .   Child: 0 Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 56]   <
.   .   .   .   .   .   Child: 1 Const 9 of type int [line: 56]					   <
.   .   .   .   .   Child: 1 Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 56]	   <
Sibling: 7 Func: isOkAt returns type bool [mem: Global loc: 0 size: -5] [line: 60]		   <
.   Child: 0 Parm: row of type int [mem: Parameter loc: -2 size: 1] [line: 60]			   <
.   Sibling: 1 Parm: col of type int [mem: Parameter loc: -3 size: 1] [line: 60]		   <
.   Sibling: 2 Parm: value of type int [mem: Parameter loc: -4 size: 1] [line: 60]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -9] [line: 61]					   <
.   .   Child: 0 Var: i of type int [mem: Local loc: -5 size: 1] [line: 62]			   <
.   .   Sibling: 1 Var: j of type int [mem: Local loc: -6 size: 1] [line: 62]			   <
.   .   Sibling: 2 Var: boxRowStart of type int [mem: Local loc: -7 size: 1] [line: 62]		   <
.   .   Sibling: 3 Var: boxColStart of type int [mem: Local loc: -8 size: 1] [line: 62]		   <
.   .   Child: 1 Assign: = of type int [line: 65]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 65]			   <
.   .   .   Child: 1 Const 0 of type int [line: 65]						   <
.   .   Sibling: 1 While [line: 66]								   <
.   .   .   Child: 0 Op: < of type bool [line: 66]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 66]		   <
.   .   .   .   Child: 1 Const 9 of type int [line: 66]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -9] [line: 66]				   <
.   .   .   .   Child: 1 If [line: 67]								   <
.   .   .   .   .   Child: 0 Op: == of type bool [line: 67]					   <
.   .   .   .   .   .   Child: 0 Call: getValue of type int [line: 67]				   <
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 67]	   <
.   .   .   .   .   .   .   Sibling: 1 Id: col of type int [mem: Parameter loc: -3 size: 1] [lin   <
.   .   .   .   .   .   Child: 1 Id: value of type int [mem: Parameter loc: -4 size: 1] [line: 6   <
.   .   .   .   .   Child: 1 Return [line: 67]							   <
.   .   .   .   .   .   Child: 0 Const false of type bool [line: 67]				   <
.   .   .   .   Sibling: 1 If [line: 68]							   <
.   .   .   .   .   Child: 0 Op: == of type bool [line: 68]					   <
.   .   .   .   .   .   Child: 0 Call: getValue of type int [line: 68]				   <
.   .   .   .   .   .   .   Child: 0 Id: row of type int [mem: Parameter loc: -2 size: 1] [line:   <
.   .   .   .   .   .   .   Sibling: 1 Id: i of type int [mem: Local loc: -5 size: 1] [line: 68]   <
.   .   .   .   .   .   Child: 1 Id: value of type int [mem: Parameter loc: -4 size: 1] [line: 6   <
.   .   .   .   .   Child: 1 Return [line: 68]							   <
.   .   .   .   .   .   Child: 0 Const false of type bool [line: 68]				   <
.   .   .   .   Sibling: 2 Assign: ++ of type int [line: 69]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 69]		   <
.   .   Sibling: 2 Assign: = of type int [line: 73]						   <
.   .   .   Child: 0 Id: boxRowStart of type int [mem: Local loc: -7 size: 1] [line: 73]	   <
.   .   .   Child: 1 Op: * of type int [line: 73]						   <
.   .   .   .   Child: 0 Op: / of type int [line: 73]						   <
.   .   .   .   .   Child: 0 Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 73]	   <
.   .   .   .   .   Child: 1 Const 3 of type int [line: 73]					   <
.   .   .   .   Child: 1 Const 3 of type int [line: 73]						   <
.   .   Sibling: 3 Assign: = of type int [line: 74]						   <
.   .   .   Child: 0 Id: boxColStart of type int [mem: Local loc: -8 size: 1] [line: 74]	   <
.   .   .   Child: 1 Op: * of type int [line: 74]						   <
.   .   .   .   Child: 0 Op: / of type int [line: 74]						   <
.   .   .   .   .   Child: 0 Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 74]	   <
.   .   .   .   .   Child: 1 Const 3 of type int [line: 74]					   <
.   .   .   .   Child: 1 Const 3 of type int [line: 74]						   <
.   .   Sibling: 4 Assign: = of type int [line: 75]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 75]			   <
.   .   .   Child: 1 Const 0 of type int [line: 75]						   <
.   .   Sibling: 5 While [line: 76]								   <
.   .   .   Child: 0 Op: < of type bool [line: 76]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 76]		   <
.   .   .   .   Child: 1 Const 3 of type int [line: 76]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -9] [line: 76]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 77]					   <
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -6 size: 1] [line: 77]		   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 77]					   <
.   .   .   .   Sibling: 1 While [line: 78]							   <
.   .   .   .   .   Child: 0 Op: < of type bool [line: 78]					   <
.   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -6 size: 1] [line: 78]	   <
.   .   .   .   .   .   Child: 1 Const 3 of type int [line: 78]					   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -9] [line: 78]			   <
.   .   .   .   .   .   Child: 1 If [line: 79]							   <
.   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 79]				   <
.   .   .   .   .   .   .   .   Child: 0 Call: getValue of type int [line: 79]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 79]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: boxRowStart of type int [mem: Local loc: -7   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size: 1]    <
.   .   .   .   .   .   .   .   .   Sibling: 1 Op: + of type int [line: 79]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: boxColStart of type int [mem: Local loc: -8   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: j of type int [mem: Local loc: -6 size: 1]    <
.   .   .   .   .   .   .   .   Child: 1 Id: value of type int [mem: Parameter loc: -4 size: 1]    <
.   .   .   .   .   .   .   Child: 1 Return [line: 79]						   <
.   .   .   .   .   .   .   .   Child: 0 Const false of type bool [line: 79]			   <
.   .   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 80]				   <
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -6 size: 1] [line: 80]	   <
.   .   .   .   Sibling: 2 Assign: ++ of type int [line: 82]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 82]		   <
.   .   Sibling: 6 Return [line: 85]								   <
.   .   .   Child: 0 Const true of type bool [line: 85]						   <
Sibling: 8 Func: search returns type bool [mem: Global loc: 0 size: -4] [line: 89]		   <
.   Child: 0 Parm: i of type int [mem: Parameter loc: -2 size: 1] [line: 89]			   <
.   Sibling: 1 Parm: j of type int [mem: Parameter loc: -3 size: 1] [line: 89]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 90]					   <
.   .   Child: 1 If [line: 91]									   <
.   .   .   Child: 0 Call: getLocked of type bool [line: 91]					   <
.   .   .   .   Child: 0 Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 91]		   <
.   .   .   .   Sibling: 1 Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 91]	   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 92]				   <
.   .   .   .   Child: 1 If [line: 93]								   <
.   .   .   .   .   Child: 0 Op: and of type bool [line: 93]					   <
.   .   .   .   .   .   Child: 0 Op: == of type bool [line: 93]					   <
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 9   <
.   .   .   .   .   .   .   Child: 1 Const 8 of type int [line: 93]				   <
.   .   .   .   .   .   Child: 1 Op: == of type bool [line: 93]					   <
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 9   <
.   .   .   .   .   .   .   Child: 1 Const 8 of type int [line: 93]				   <
.   .   .   .   .   Child: 1 Return [line: 93]							   <
.   .   .   .   .   .   Child: 0 Const true of type bool [line: 93]				   <
.   .   .   .   .   Child: 2 If [line: 94]							   <
.   .   .   .   .   .   Child: 0 Op: == of type bool [line: 94]					   <
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 9   <
.   .   .   .   .   .   .   Child: 1 Const 8 of type int [line: 94]				   <
.   .   .   .   .   .   Child: 1 Return [line: 94]						   <
.   .   .   .   .   .   .   Child: 0 Call: search of type bool [line: 94]			   <
.   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 94]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Parameter loc: -2 size: 1]    <
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 94]			   <
.   .   .   .   .   .   .   .   Sibling: 1 Const 0 of type int [line: 94]			   <
.   .   .   .   .   .   Child: 2 Return [line: 95]						   <
.   .   .   .   .   .   .   Child: 0 Call: search of type bool [line: 95]			   <
.   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Parameter loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   .   Sibling: 1 Op: + of type int [line: 95]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Parameter loc: -3 size: 1]    <
.   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 95]			   <
.   .   .   Child: 2 Compound [mem: None loc: 0 size: -6] [line: 98]				   <
.   .   .   .   Child: 0 Var: n of type int [mem: Local loc: -4 size: 1] [line: 99]		   <
.   .   .   .   Sibling: 1 Var: foundOne of type bool [mem: Local loc: -5 size: 1] [line: 100]	   <
.   .   .   .   Child: 1 Assign: = of type int [line: 101]					   <
.   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -4 size: 1] [line: 101]		   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 101]					   <
.   .   .   .   Sibling: 1 While [line: 102]							   <
.   .   .   .   .   Child: 0 Op: <= of type bool [line: 102]					   <
.   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -4 size: 1] [line: 102]	   <
.   .   .   .   .   .   Child: 1 Const 9 of type int [line: 102]				   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 102]			   <
.   .   .   .   .   .   Child: 1 If [line: 103]							   <
.   .   .   .   .   .   .   Child: 0 Call: isOkAt of type bool [line: 103]			   <
.   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Parameter loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Parameter loc: -3 size: 1] [l   <
.   .   .   .   .   .   .   .   Sibling: 2 Id: n of type int [mem: Local loc: -4 size: 1] [line:   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 103]		   <
.   .   .   .   .   .   .   .   Child: 1 Call: setValue of type void [line: 104]		   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Parameter loc: -2 size: 1]    <
.   .   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Parameter loc: -3 size: 1   <
.   .   .   .   .   .   .   .   .   Sibling: 2 Id: n of type int [mem: Local loc: -4 size: 1] [l   <
.   .   .   .   .   .   .   .   Sibling: 1 If [line: 105]					   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 105]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 105]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Parameter loc: -2 s   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 8 of type int [line: 105]		   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 105]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Parameter loc: -3 s   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 8 of type int [line: 105]		   <
.   .   .   .   .   .   .   .   .   Child: 1 Return [line: 105]					   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Const true of type bool [line: 105]		   <
.   .   .   .   .   .   .   .   .   Child: 2 If [line: 106]					   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 106]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Parameter loc: -3 s   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 8 of type int [line: 106]		   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Assign: = of type bool [line: 106]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: foundOne of type bool [mem: Local loc:    <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: search of type bool [line: 106]	   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: + of type int [line: 106]		   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Parameter l   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 106]	   <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Const 0 of type int [line: 106]	   <
.   .   .   .   .   .   .   .   .   .   Child: 2 Assign: = of type bool [line: 107]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: foundOne of type bool [mem: Local loc:    <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: search of type bool [line: 107]	   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Parameter loc:    <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Op: + of type int [line: 107]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Parameter l   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 107]	   <
.   .   .   .   .   .   .   .   Sibling: 2 If [line: 108]					   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: foundOne of type bool [mem: Local loc: -5 size:   <
.   .   .   .   .   .   .   .   .   Child: 1 Return [line: 108]					   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Const true of type bool [line: 108]		   <
.   .   .   .   .   .   .   .   .   Child: 2 Call: setValue of type void [line: 109]		   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Parameter loc: -2 size:   <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Parameter loc: -3 siz   <
.   .   .   .   .   .   .   .   .   .   Sibling: 2 Const 0 of type int [line: 109]		   <
.   .   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 111]				   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -4 size: 1] [line: 111]	   <
.   .   Sibling: 1 Return [line: 114]								   <
.   .   .   Child: 0 Const false of type bool [line: 114]					   <
Sibling: 9 Func: searchTrivial returns type void [mem: Global loc: 0 size: -2] [line: 118]	   <
.   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 119]					   <
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 120]			   <
.   .   Sibling: 1 Var: j of type int [mem: Local loc: -3 size: 1] [line: 120]			   <
.   .   Sibling: 2 Var: test of type int [mem: Local loc: -4 size: 1] [line: 120]		   <
.   .   Sibling: 3 Var: value of type int [mem: Local loc: -5 size: 1] [line: 120]		   <
.   .   Sibling: 4 Var: changed of type bool [mem: Local loc: -6 size: 1] [line: 121]		   <
.   .   Sibling: 5 Var: foundOne of type bool [mem: Local loc: -7 size: 1] [line: 121]		   <
.   .   Child: 1 Assign: = of type bool [line: 123]						   <
.   .   .   Child: 0 Id: changed of type bool [mem: Local loc: -6 size: 1] [line: 123]		   <
.   .   .   Child: 1 Const true of type bool [line: 123]					   <
.   .   Sibling: 1 While [line: 124]								   <
.   .   .   Child: 0 Id: changed of type bool [mem: Local loc: -6 size: 1] [line: 124]		   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 124]				   <
.   .   .   .   Child: 1 Assign: = of type bool [line: 125]					   <
.   .   .   .   .   Child: 0 Id: changed of type bool [mem: Local loc: -6 size: 1] [line: 125]	   <
.   .   .   .   .   Child: 1 Const false of type bool [line: 125]				   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 126]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 126]		   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 126]					   <
.   .   .   .   Sibling: 2 While [line: 127]							   <
.   .   .   .   .   Child: 0 Op: < of type bool [line: 127]					   <
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 127]	   <
.   .   .   .   .   .   Child: 1 Const 9 of type int [line: 127]				   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 127]			   <
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 128]				   <
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 128]	   <
.   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 128]				   <
.   .   .   .   .   .   Sibling: 1 While [line: 129]						   <
.   .   .   .   .   .   .   Child: 0 Op: < of type bool [line: 129]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 1   <
.   .   .   .   .   .   .   .   Child: 1 Const 9 of type int [line: 129]			   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 129]		   <
.   .   .   .   .   .   .   .   Child: 1 If [line: 130]						   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 130]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Call: getLocked of type bool [line: 130]	   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size:   <
.   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc: -3 siz   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const false of type bool [line: 130]		   <
.   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 130]	   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Assign: = of type int [line: 131]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: test of type int [mem: Local loc: -4 si   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 131]		   <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 Assign: = of type bool [line: 132]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: foundOne of type bool [mem: Local loc:    <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Const false of type bool [line: 132]	   <
.   .   .   .   .   .   .   .   .   .   Sibling: 2 While [line: 133]				   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: <= of type bool [line: 133]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: test of type int [mem: Local loc: -   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 9 of type int [line: 133]	   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line:   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 If [line: 134]				   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Call: isOkAt of type bool [line: 13   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local l   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2 Id: test of type int [mem: Lo   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 If [line: 135]			   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: foundOne of type bool [   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0    <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Assign: = of type bool    <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: foundOne of typ   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const false of type   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Break [line: 137]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 2 Compound [mem: None loc: 0    <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Assign: = of type bool    <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: foundOne of typ   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const true of type    <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Assign: = of type int   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: value of type i   <
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: test of type in   <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 144]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: test of type int [mem: Local lo   <
.   .   .   .   .   .   .   .   .   .   Sibling: 3 If [line: 146]				   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: foundOne of type bool [mem: Local loc:    <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line:   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Call: setValue of type void [line: 147]   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc:    <
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2 Id: value of type int [mem: Local   <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Call: setLocked of type void [line: 1   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc:    <
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2 Const true of type bool [line: 14   <
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2 Assign: = of type bool [line: 149]	   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Id: changed of type bool [mem: Loca   <
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Const true of type bool [line: 149]   <
.   .   .   .   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 152]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [lin   <
.   .   .   .   .   .   Sibling: 2 Assign: ++ of type int [line: 154]				   <
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 154]	   <
Sibling: 10 Func: solve returns type bool [mem: Global loc: 0 size: -2] [line: 160]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 161]					   <
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 162]			   <
.   .   Sibling: 1 Var: j of type int [mem: Local loc: -3 size: 1] [line: 162]			   <
.   .   Sibling: 2 Var: n of type int [mem: Local loc: -4 size: 1] [line: 162]			   <
.   .   Child: 1 Assign: = of type int [line: 163]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 163]			   <
.   .   .   Child: 1 Const 0 of type int [line: 163]						   <
.   .   Sibling: 1 While [line: 166]								   <
.   .   .   Child: 0 Op: < of type bool [line: 166]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 166]		   <
.   .   .   .   Child: 1 Const 9 of type int [line: 166]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 166]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 167]					   <
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 167]		   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 167]					   <
.   .   .   .   Sibling: 1 While [line: 168]							   <
.   .   .   .   .   Child: 0 Op: < of type bool [line: 168]					   <
.   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 168]	   <
.   .   .   .   .   .   Child: 1 Const 9 of type int [line: 168]				   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 168]			   <
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 169]				   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -4 size: 1] [line: 169]	   <
.   .   .   .   .   .   .   Child: 1 Call: getValue of type int [line: 169]			   <
.   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 1   <
.   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc: -3 size: 1] [line:   <
.   .   .   .   .   .   Sibling: 1 Call: setValue of type void [line: 170]			   <
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 170]	   <
.   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc: -3 size: 1] [line: 170   <
.   .   .   .   .   .   .   Sibling: 2 Const 0 of type int [line: 170]				   <
.   .   .   .   .   .   Sibling: 2 If [line: 171]						   <
.   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 171]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 171]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Call: getLocked of type bool [line: 171]		   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1]    <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc: -3 size: 1   <
.   .   .   .   .   .   .   .   .   Child: 1 Const true of type bool [line: 171]		   <
.   .   .   .   .   .   .   .   Child: 1 Op: == of type bool [line: 171]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Call: isOkAt of type bool [line: 171]		   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1]    <
.   .   .   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc: -3 size: 1   <
.   .   .   .   .   .   .   .   .   .   Sibling: 2 Id: n of type int [mem: Local loc: -4 size: 1   <
.   .   .   .   .   .   .   .   .   Child: 1 Const false of type bool [line: 171]		   <
.   .   .   .   .   .   .   Child: 1 Return [line: 172]						   <
.   .   .   .   .   .   .   .   Child: 0 Const false of type bool [line: 172]			   <
.   .   .   .   .   .   Sibling: 3 Call: setValue of type void [line: 173]			   <
.   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 173]	   <
.   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc: -3 size: 1] [line: 173   <
.   .   .   .   .   .   .   Sibling: 2 Id: n of type int [mem: Local loc: -4 size: 1] [line: 173   <
.   .   .   .   .   .   Sibling: 4 Assign: ++ of type int [line: 174]				   <
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 174]	   <
.   .   .   .   Sibling: 2 Assign: ++ of type int [line: 176]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 176]		   <
.   .   Sibling: 2 Call: searchTrivial of type void [line: 179]					   <
.   .   Sibling: 3 Return [line: 180]								   <
.   .   .   Child: 0 Call: search of type bool [line: 180]					   <
.   .   .   .   Child: 0 Const 0 of type int [line: 180]					   <
.   .   .   .   Sibling: 1 Const 0 of type int [line: 180]					   <
Sibling: 11 Func: showBoard returns type void [mem: Global loc: 0 size: -2] [line: 184]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 185]					   <
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 186]			   <
.   .   Sibling: 1 Var: j of type int [mem: Local loc: -3 size: 1] [line: 186]			   <
.   .   Child: 1 Call: outnl of type void [line: 187]						   <
.   .   Sibling: 1 Assign: = of type int [line: 188]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 188]			   <
.   .   .   Child: 1 Const 0 of type int [line: 188]						   <
.   .   Sibling: 2 While [line: 189]								   <
.   .   .   Child: 0 Op: < of type bool [line: 189]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 189]		   <
.   .   .   .   Child: 1 Const 9 of type int [line: 189]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 189]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 190]					   <
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 190]		   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 190]					   <
.   .   .   .   Sibling: 1 While [line: 191]							   <
.   .   .   .   .   Child: 0 Op: < of type bool [line: 191]					   <
.   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 191]	   <
.   .   .   .   .   .   Child: 1 Const 9 of type int [line: 191]				   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 191]			   <
.   .   .   .   .   .   Child: 1 Call: output of type void [line: 192]				   <
.   .   .   .   .   .   .   Child: 0 Call: getValue of type int [line: 192]			   <
.   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 1   <
.   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc: -3 size: 1] [line:   <
.   .   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 193]				   <
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 193]	   <
.   .   .   .   Sibling: 2 Call: outnl of type void [line: 195]					   <
.   .   .   .   Sibling: 3 Assign: ++ of type int [line: 196]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 196]		   <
.   .   Sibling: 3 Call: outnl of type void [line: 198]						   <
Sibling: 12 Func: getInput returns type void [mem: Global loc: 0 size: -2] [line: 202]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 203]					   <
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 204]			   <
.   .   Sibling: 1 Var: j of type int [mem: Local loc: -3 size: 1] [line: 204]			   <
.   .   Sibling: 2 Var: inputVal of type int [mem: Local loc: -4 size: 1] [line: 204]		   <
.   .   Child: 1 Assign: = of type int [line: 205]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 205]			   <
.   .   .   Child: 1 Const 0 of type int [line: 205]						   <
.   .   Sibling: 1 While [line: 206]								   <
.   .   .   Child: 0 Op: < of type bool [line: 206]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 206]		   <
.   .   .   .   Child: 1 Const 9 of type int [line: 206]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 206]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 207]					   <
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 207]		   <
.   .   .   .   .   Child: 1 Const 0 of type int [line: 207]					   <
.   .   .   .   Sibling: 1 While [line: 208]							   <
.   .   .   .   .   Child: 0 Op: < of type bool [line: 208]					   <
.   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 208]	   <
.   .   .   .   .   .   Child: 1 Const 9 of type int [line: 208]				   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 208]			   <
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 209]				   <
.   .   .   .   .   .   .   Child: 0 Id: inputVal of type int [mem: Local loc: -4 size: 1] [line   <
.   .   .   .   .   .   .   Child: 1 Call: input of type int [line: 209]			   <
.   .   .   .   .   .   Sibling: 1 If [line: 210]						   <
.   .   .   .   .   .   .   Child: 0 Op: and of type bool [line: 210]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: > of type bool [line: 210]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: inputVal of type int [mem: Local loc: -4 size:    <
.   .   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 210]			   <
.   .   .   .   .   .   .   .   Child: 1 Op: < of type bool [line: 210]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: inputVal of type int [mem: Local loc: -4 size:    <
.   .   .   .   .   .   .   .   .   Child: 1 Const 10 of type int [line: 210]			   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 211]		   <
.   .   .   .   .   .   .   .   Child: 1 Call: setValue of type void [line: 212]		   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc: -3 size: 1] [l   <
.   .   .   .   .   .   .   .   .   Sibling: 2 Id: inputVal of type int [mem: Local loc: -4 size   <
.   .   .   .   .   .   .   .   Sibling: 1 Call: setLocked of type void [line: 213]		   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [lin   <
.   .   .   .   .   .   .   .   .   Sibling: 1 Id: j of type int [mem: Local loc: -3 size: 1] [l   <
.   .   .   .   .   .   .   .   .   Sibling: 2 Const true of type bool [line: 213]		   <
.   .   .   .   .   .   Sibling: 2 Assign: ++ of type int [line: 215]				   <
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -3 size: 1] [line: 215]	   <
.   .   .   .   Sibling: 2 Call: outnl of type void [line: 217]					   <
.   .   .   .   Sibling: 3 Assign: ++ of type int [line: 218]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 218]		   <
Sibling: 13 Func: main returns type int [mem: Global loc: 0 size: -2] [line: 222]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 223]					   <
.   .   Child: 1 Call: initBoard of type void [line: 224]					   <
.   .   Sibling: 1 Call: getInput of type void [line: 225]					   <
.   .   Sibling: 2 If [line: 226]								   <
.   .   .   Child: 0 Call: solve of type bool [line: 226]					   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -2] [line: 226]				   <
.   .   .   .   Child: 1 Call: showBoard of type void [line: 227]				   <
.   .   .   Child: 2 Compound [mem: None loc: 0 size: -2] [line: 229]				   <
.   .   .   .   Child: 1 Call: outputb of type void [line: 230]					   <
.   .   .   .   .   Child: 0 Const false of type bool [line: 230]				   <
.   .   .   .   Sibling: 1 Call: outnl of type void [line: 231]					   <
.   .   Sibling: 3 Return [line: 233]								   <
.   .   .   Child: 0 Const 0 of type int [line: 233]						   <
Offset for end of global space: -164								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: tictactoe.c-
-rwxrwx--- 1 root vboxsf 10512 Apr 23  2020 tictactoe.c-
-rwxrwx--- 1 root vboxsf   166 May  2 10:26 tictactoe.expected
-rwxrwx--- 1 root vboxsf    22 Dec  1  2014 tictactoe.in
-rwxrwx--- 1 root vboxsf     0 May  4  2021 tictactoe.mem
-rwxrwx--- 1 root vboxsf    37 May  4  2021 tictactoe.out
tictactoe.out ztmp4778.txt differ: byte 1, line 1
tictactoe (Output DIFF)
------------------------------------								   |	Loading file: tictactoe.tm
												   >	0 1 2
												   >	3 4 5
												   >	6 7 8
												   >	entered: 0
												   >	T F 2
												   >	3 4 5
												   >	6 7 8
												   >	entered: 4
												   >	T F 2
												   >	3 T 5
												   >	6 7 F
												   >	entered: 6
												   >	T F F
												   >	3 T 5
												   >	T 7 F
												   >	entered: 3
												   >	T F F
												   >	T T 5
												   >	T 7 F
												   >	Bye.
====================================
FILE: tiny.c-
-rwxrwx--- 1 root vboxsf  145 Apr 30 16:30 tiny.c-
-rwxrwx--- 1 root vboxsf   87 May  2 10:26 tiny.expected
-rwxrwx--- 1 root vboxsf 1282 May  4  2021 tiny.mem
-rwxrwx--- 1 root vboxsf 1319 May  4  2021 tiny.out
tiny.out ztmp4778.txt differ: byte 58, line 2
tiny (Output DIFF)
WARNING(1): The parameter 'garion' seems not to be used.						WARNING(1): The parameter 'garion' seems not to be used.
Func: wolf returns type int [mem: Global loc: 0 size: -3] [line: 1]				   |	Loading file: tiny.tm
.   Child: 0 Parm: garion of type int [mem: Parameter loc: -2 size: 1] [line: 1]		   |	42
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 2]					   |	Bye.
.   .   Child: 1 Return [line: 3]								   <
.   .   .   Child: 0 Const 42 of type int [line: 3]						   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 6]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 7]					   <
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 8]			   <
.   .   Child: 1 Assign: = of type int [line: 9]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 9]			   <
.   .   .   Child: 1 Const 666 of type int [line: 9]						   <
.   .   Sibling: 1 Assign: = of type int [line: 10]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 10]			   <
.   .   .   Child: 1 Call: wolf of type int [line: 10]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 10]		   <
.   .   Sibling: 2 Call: output of type void [line: 11]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 11]			   <
.   .   Sibling: 3 Call: outnl of type void [line: 12]						   <
Offset for end of global space: 0								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: tiny3.c-
-rwxrwx--- 1 root vboxsf  246 Apr 30 16:30 tiny3.c-
-rwxrwx--- 1 root vboxsf  135 May  2 10:26 tiny3.expected
-rwxrwx--- 1 root vboxsf 2372 May  4  2021 tiny3.mem
-rwxrwx--- 1 root vboxsf 2409 May  4  2021 tiny3.out
tiny3.out ztmp4778.txt differ: byte 104, line 3
tiny3 (Output DIFF)
WARNING(4): The variable 'w' seems not to be used.							WARNING(4): The variable 'w' seems not to be used.
WARNING(10): The variable 'p' seems not to be used.							WARNING(10): The variable 'p' seems not to be used.
Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: tiny3.tm
Sibling: 1 Func: wolf returns type int [mem: Global loc: 0 size: -3] [line: 2]			   |	700
.   Child: 0 Parm: garion of type int [mem: Parameter loc: -2 size: 1] [line: 2]		   |	Bye.
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 3]					   <
.   .   Child: 0 Var: w of type int [mem: Local loc: -3 size: 1] [line: 4]			   <
.   .   Child: 1 Return [line: 5]								   <
.   .   .   Child: 0 Op: + of type int [line: 5]						   <
.   .   .   .   Child: 0 Id: garion of type int [mem: Parameter loc: -2 size: 1] [line: 5]	   <
.   .   .   .   Child: 1 Id: g of type int [mem: Global loc: 0 size: 1] [line: 5]		   <
Sibling: 2 Func: polgara returns type int [mem: Global loc: 0 size: -3] [line: 8]		   <
.   Child: 0 Parm: silk of type int [mem: Parameter loc: -2 size: 1] [line: 8]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 9]					   <
.   .   Child: 0 Var: p of type int [mem: Local loc: -3 size: 1] [line: 10]			   <
.   .   Child: 1 Return [line: 11]								   <
.   .   .   Child: 0 Op: + of type int [line: 11]						   <
.   .   .   .   Child: 0 Id: silk of type int [mem: Parameter loc: -2 size: 1] [line: 11]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 11]						   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 14]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 15]					   <
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 16]			   <
.   .   Child: 1 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 17]			   <
.   .   .   Child: 1 Const 33 of type int [line: 17]						   <
.   .   Sibling: 1 Assign: = of type int [line: 18]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]			   <
.   .   .   Child: 1 Const 666 of type int [line: 18]						   <
.   .   Sibling: 2 Assign: = of type int [line: 19]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 19]			   <
.   .   .   Child: 1 Call: wolf of type int [line: 19]						   <
.   .   .   .   Child: 0 Call: polgara of type int [line: 19]					   <
.   .   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 19]		   <
.   .   Sibling: 3 Call: output of type void [line: 20]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 20]			   <
Offset for end of global space: -1								   <
Number of warnings: 2										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: toroman.c-
-rwxrwx--- 1 root vboxsf  1121 May  2 10:13 toroman.c-
-rwxrwx--- 1 root vboxsf   518 May  2 10:26 toroman.expected
-rwxrwx--- 1 root vboxsf   100 May  2 10:26 toroman.in
-rwxrwx--- 1 root vboxsf 11286 May  4  2021 toroman.mem
-rwxrwx--- 1 root vboxsf 11323 May  4  2021 toroman.out
toroman.out ztmp4778.txt differ: byte 53, line 2
toroman (Output DIFF)
WARNING(15): The variable 'i' seems not to be used.							WARNING(15): The variable 'i' seems not to be used.
Func: roman returns type void [mem: Global loc: 0 size: -3] [line: 1]				   |	Loading file: toroman.tm
.   Child: 0 Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 1]			   |	entered: 1
.   Child: 1 Compound [mem: None loc: 0 size: -149] [line: 1]					   |	I
.   .   Child: 0 Var: b of type int [mem: Local loc: -3 size: 1] [line: 2]			   |	entered: 2
.   .   Sibling: 1 Var: j of type int [mem: Local loc: -4 size: 1] [line: 2]			   |	II
.   .   Sibling: 2 Var: i of type int [mem: Local loc: -5 size: 1] [line: 2]			   |	entered: 3
.   .   Sibling: 3 Var: value of array of type int [mem: Local loc: -7 size: 14] [line: 3]	   |	III
.   .   Sibling: 4 Var: letters of array of type char [mem: Local loc: -21 size: 27] [line: 4]	   |	entered: 4
.   .   .   Child: 0 Const  "M CMD CDC XCL XLX IXV IVI " of array of type char [mem: Global loc:   |	IV
.   .   Sibling: 5 Var: s of array of type char [mem: Local loc: -48 size: 101] [line: 5]	   |	entered: 5
.   .   Sibling: 6 Var: sloc of type int [mem: Local loc: -148 size: 1] [line: 6]		   |	V
.   .   Child: 1 Assign: = of type int [line: 13]						   |	entered: 6
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 13]			   |	VI
.   .   .   Child: 1 Const 100 of type int [line: 13]						   |	entered: 7
.   .   Sibling: 1 Assign: = of type int [line: 14]						   |	VII
.   .   .   Child: 0 Op: [ of type int [line: 14]						   |	entered: 8
.   .   .   .   Child: 0 Id: value of array of type int [mem: Local loc: -7 size: 14] [line: 14]   |	VIII
.   .   .   .   Child: 1 Assign: = of type int [line: 14]					   |	entered: 9
.   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -4 size: 1] [line: 14]		   |	IX
.   .   .   .   .   Child: 1 Const 0 of type int [line: 14]					   |	entered: 10
.   .   .   Child: 1 Const 1000 of type int [line: 14]						   |	X
.   .   Sibling: 2 For [mem: None loc: 0 size: -150] [line: 15]					   |	entered: 11
.   .   .   Child: 0 Var: i of type int [mem: Local loc: -149 size: 1] [line: 15]		   |	XI
.   .   .   Child: 1 Range [line: 15]								   |	entered: 12
.   .   .   .   Child: 0 Const 0 of type int [line: 15]						   |	XII
.   .   .   .   Child: 1 Const 3 of type int [line: 15]						   |	entered: 13
.   .   .   Child: 2 Compound [mem: None loc: 0 size: -150] [line: 15]				   |	XIII
.   .   .   .   Child: 1 Assign: = of type int [line: 16]					   |	entered: 14
.   .   .   .   .   Child: 0 Op: [ of type int [line: 16]					   |	XIV
.   .   .   .   .   .   Child: 0 Id: value of array of type int [mem: Local loc: -7 size: 14] [l   |	entered: 15
.   .   .   .   .   .   Child: 1 Assign: ++ of type int [line: 16]				   |	XV
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -4 size: 1] [line: 16]	   |	entered: 33
.   .   .   .   .   Child: 1 Op: * of type int [line: 16]					   |	XXXIII
.   .   .   .   .   .   Child: 0 Const 9 of type int [line: 16]					   |	entered: 44
.   .   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 16]	   |	XLIV
.   .   .   .   Sibling: 1 Assign: = of type int [line: 17]					   |	entered: 55
.   .   .   .   .   Child: 0 Op: [ of type int [line: 17]					   |	LV
.   .   .   .   .   .   Child: 0 Id: value of array of type int [mem: Local loc: -7 size: 14] [l   |	entered: 88
.   .   .   .   .   .   Child: 1 Assign: ++ of type int [line: 17]				   |	LXXXVIII
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -4 size: 1] [line: 17]	   |	entered: 99
.   .   .   .   .   Child: 1 Op: * of type int [line: 17]					   |	XCIX
.   .   .   .   .   .   Child: 0 Const 5 of type int [line: 17]					   |	entered: 101
.   .   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 17]	   |	CI
.   .   .   .   Sibling: 2 Assign: = of type int [line: 18]					   |	entered: 104
.   .   .   .   .   Child: 0 Op: [ of type int [line: 18]					   |	CIV
.   .   .   .   .   .   Child: 0 Id: value of array of type int [mem: Local loc: -7 size: 14] [l   |	entered: 666
.   .   .   .   .   .   Child: 1 Assign: ++ of type int [line: 18]				   |	DCLXVI
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -4 size: 1] [line: 18]	   |	entered: 721
.   .   .   .   .   Child: 1 Op: * of type int [line: 18]					   |	DCCXXI
.   .   .   .   .   .   Child: 0 Const 4 of type int [line: 18]					   |	entered: 1666
.   .   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 18]	   |	MDCLXVI
.   .   .   .   Sibling: 3 Assign: = of type int [line: 19]					   |	entered: 5000
.   .   .   .   .   Child: 0 Op: [ of type int [line: 19]					   |	MMMMM
.   .   .   .   .   .   Child: 0 Id: value of array of type int [mem: Local loc: -7 size: 14] [l   |	entered: 0
.   .   .   .   .   .   Child: 1 Assign: ++ of type int [line: 19]				   |	Bye.
.   .   .   .   .   .   .   Child: 0 Id: j of type int [mem: Local loc: -4 size: 1] [line: 19]	   <
.   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -3 size: 1] [line: 19]		   <
.   .   .   .   Sibling: 4 Assign: /= of type int [line: 20]					   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -3 size: 1] [line: 20]		   <
.   .   .   .   .   Child: 1 Const 10 of type int [line: 20]					   <
.   .   Sibling: 3 Assign: = of type int [line: 23]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 23]			   <
.   .   .   Child: 1 Const 0 of type int [line: 23]						   <
.   .   Sibling: 4 Assign: = of type int [line: 24]						   <
.   .   .   Child: 0 Id: sloc of type int [mem: Local loc: -148 size: 1] [line: 24]		   <
.   .   .   Child: 1 Const 0 of type int [line: 24]						   <
.   .   Sibling: 5 While [line: 25]								   <
.   .   .   Child: 0 Op: > of type bool [line: 25]						   <
.   .   .   .   Child: 0 Op: [ of type int [line: 25]						   <
.   .   .   .   .   Child: 0 Id: value of array of type int [mem: Local loc: -7 size: 14] [line:   <
.   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size: 1] [line: 25]		   <
.   .   .   .   Child: 1 Const 0 of type int [line: 25]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -149] [line: 25]				   <
.   .   .   .   Child: 1 While [line: 26]							   <
.   .   .   .   .   Child: 0 Op: >= of type bool [line: 26]					   <
.   .   .   .   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 26]	   <
.   .   .   .   .   .   Child: 1 Op: [ of type int [line: 26]					   <
.   .   .   .   .   .   .   Child: 0 Id: value of array of type int [mem: Local loc: -7 size: 14   <
.   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size: 1] [line: 26]	   <
.   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -149] [line: 26]			   <
.   .   .   .   .   .   Child: 1 Assign: -= of type int [line: 27]				   <
.   .   .   .   .   .   .   Child: 0 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 2   <
.   .   .   .   .   .   .   Child: 1 Op: [ of type int [line: 27]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: value of array of type int [mem: Local loc: -7 size   <
.   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size: 1] [line: 2   <
.   .   .   .   .   .   Sibling: 1 Assign: = of type char [line: 28]				   <
.   .   .   .   .   .   .   Child: 0 Op: [ of type char [line: 28]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: s of array of type char [mem: Local loc: -48 size:    <
.   .   .   .   .   .   .   .   Child: 1 Id: sloc of type int [mem: Local loc: -148 size: 1] [li   <
.   .   .   .   .   .   .   Child: 1 Op: [ of type char [line: 28]				   <
.   .   .   .   .   .   .   .   Child: 0 Id: letters of array of type char [mem: Local loc: -21    <
.   .   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 28]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 28]			   <
.   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size: 1] [lin   <
.   .   .   .   .   .   Sibling: 2 Assign: ++ of type int [line: 29]				   <
.   .   .   .   .   .   .   Child: 0 Id: sloc of type int [mem: Local loc: -148 size: 1] [line:    <
.   .   .   .   .   .   Sibling: 3 If [line: 30]						   <
.   .   .   .   .   .   .   Child: 0 Op: != of type bool [line: 30]				   <
.   .   .   .   .   .   .   .   Child: 0 Op: [ of type char [line: 30]				   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: letters of array of type char [mem: Local loc:    <
.   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 30]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 30]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 30]		   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 size:   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 30]			   <
.   .   .   .   .   .   .   .   Child: 1 Const ' ' of type char [line: 30]			   <
.   .   .   .   .   .   .   Child: 1 Compound [mem: None loc: 0 size: -149] [line: 30]		   <
.   .   .   .   .   .   .   .   Child: 1 Assign: = of type char [line: 31]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Op: [ of type char [line: 31]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: s of array of type char [mem: Local loc: -4   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Id: sloc of type int [mem: Local loc: -148 size   <
.   .   .   .   .   .   .   .   .   Child: 1 Op: [ of type char [line: 31]			   <
.   .   .   .   .   .   .   .   .   .   Child: 0 Id: letters of array of type char [mem: Local l   <
.   .   .   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 31]			   <
.   .   .   .   .   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 31]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 31]		   <
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -5 s   <
.   .   .   .   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 31]		   <
.   .   .   .   .   .   .   .   Sibling: 1 Assign: ++ of type int [line: 32]			   <
.   .   .   .   .   .   .   .   .   Child: 0 Id: sloc of type int [mem: Local loc: -148 size: 1]   <
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 35]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -5 size: 1] [line: 35]		   <
.   .   Sibling: 6 For [mem: None loc: 0 size: -150] [line: 38]					   <
.   .   .   Child: 0 Var: i of type int [mem: Local loc: -149 size: 1] [line: 38]		   <
.   .   .   Child: 1 Range [line: 38]								   <
.   .   .   .   Child: 0 Const 0 of type int [line: 38]						   <
.   .   .   .   Child: 1 Id: sloc of type int [mem: Local loc: -148 size: 1] [line: 38]		   <
.   .   .   Child: 2 Call: outputc of type void [line: 38]					   <
.   .   .   .   Child: 0 Op: [ of type char [line: 38]						   <
.   .   .   .   .   Child: 0 Id: s of array of type char [mem: Local loc: -48 size: 101] [line:    <
.   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -149 size: 1] [line: 38]	   <
Sibling: 1 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 41]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 41]					   <
.   .   Child: 0 Var: n of type int [mem: Local loc: -2 size: 1] [line: 42]			   <
.   .   Child: 1 While [line: 43]								   <
.   .   .   Child: 0 Const true of type bool [line: 43]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 43]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 44]					   <
.   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 44]		   <
.   .   .   .   .   Child: 1 Call: input of type int [line: 44]					   <
.   .   .   .   Sibling: 1 If [line: 45]							   <
.   .   .   .   .   Child: 0 Op: == of type bool [line: 45]					   <
.   .   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 45]	   <
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 45]					   <
.   .   .   .   .   Child: 1 Break [line: 45]							   <
.   .   .   .   Sibling: 2 Call: roman of type void [line: 46]					   <
.   .   .   .   .   Child: 0 Id: n of type int [mem: Local loc: -2 size: 1] [line: 46]		   <
.   .   .   .   Sibling: 3 Call: outnl of type void [line: 47]					   <
Offset for end of global space: -27								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: unary.c-
-rwxrwx--- 1 root vboxsf  689 Apr 30 16:30 unary.c-
-rwxrwx--- 1 root vboxsf  184 May  2 10:26 unary.expected
-rwxrwx--- 1 root vboxsf 5810 May  4  2021 unary.mem
-rwxrwx--- 1 root vboxsf 5847 May  4  2021 unary.out
unary.out ztmp4778.txt differ: byte 127, line 3
unary (Output DIFF)
WARNING(35): Variable 'a' may be uninitialized when used here.						WARNING(35): Variable 'a' may be uninitialized when used here.
WARNING(36): Variable 'b' may be uninitialized when used here.						WARNING(36): Variable 'b' may be uninitialized when used here.
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]				   |	Loading file: unary.tm
.   Child: 1 Compound [mem: None loc: 0 size: -18] [line: 5]					   |	-88 -88
.   .   Child: 0 Var: x of type int [mem: Local loc: -2 size: 1] [line: 6]			   |	-15 3
.   .   Sibling: 1 Var: y of type int [mem: Local loc: -3 size: 1] [line: 7]			   |	F F T T F T
.   .   Sibling: 2 Var: a of array of type bool [mem: Local loc: -5 size: 8] [line: 8]		   |	7 5
.   .   Sibling: 3 Var: b of array of type bool [mem: Local loc: -13 size: 6] [line: 8]		   |	Bye.
.   .   Child: 1 Assign: = of type int [line: 10]						   <
.   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 10]			   <
.   .   .   Child: 1 Const 88 of type int [line: 10]						   <
.   .   Sibling: 1 Assign: = of type int [line: 11]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 11]			   <
.   .   .   Child: 1 Op: - of type int [line: 11]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 11]		   <
.   .   .   .   Child: 1 Const 9 of type int [line: 11]						   <
.   .   Sibling: 2 Assign: = of type int [line: 12]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 12]			   <
.   .   .   Child: 1 Op: chsign of type int [line: 12]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 12]		   <
.   .   Sibling: 3 Call: output of type void [line: 13]						   <
.   .   .   Child: 0 Op: chsign of type int [line: 13]						   <
.   .   .   .   Child: 0 Id: x of type int [mem: Local loc: -2 size: 1] [line: 13]		   <
.   .   Sibling: 4 Call: output of type void [line: 14]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -3 size: 1] [line: 14]			   <
.   .   Sibling: 5 Call: outnl of type void [line: 15]						   <
.   .   Sibling: 6 Call: output of type void [line: 17]						   <
.   .   .   Child: 0 Op: * of type int [line: 17]						   <
.   .   .   .   Child: 0 Op: chsign of type int [line: 17]					   <
.   .   .   .   .   Child: 0 Op: chsign of type int [line: 17]					   <
.   .   .   .   .   .   Child: 0 Const 3 of type int [line: 17]					   <
.   .   .   .   Child: 1 Op: chsign of type int [line: 17]					   <
.   .   .   .   .   Child: 0 Const 5 of type int [line: 17]					   <
.   .   Sibling: 7 Call: output of type void [line: 18]						   <
.   .   .   Child: 0 Op: chsign of type int [line: 18]						   <
.   .   .   .   Child: 0 Op: chsign of type int [line: 18]					   <
.   .   .   .   .   Child: 0 Const 3 of type int [line: 18]					   <
.   .   Sibling: 8 Call: outnl of type void [line: 19]						   <
.   .   Sibling: 9 Compound [mem: None loc: 0 size: -20] [line: 21]				   <
.   .   .   Child: 0 Var: x of type bool [mem: Local loc: -18 size: 1] [line: 21]		   <
.   .   .   Sibling: 1 Var: y of type bool [mem: Local loc: -19 size: 1] [line: 22]		   <
.   .   .   Child: 1 Assign: = of type bool [line: 24]						   <
.   .   .   .   Child: 0 Id: x of type bool [mem: Local loc: -18 size: 1] [line: 24]		   <
.   .   .   .   Child: 1 Const true of type bool [line: 24]					   <
.   .   .   Sibling: 1 Assign: = of type bool [line: 25]					   <
.   .   .   .   Child: 0 Id: y of type bool [mem: Local loc: -19 size: 1] [line: 25]		   <
.   .   .   .   Child: 1 Op: not of type bool [line: 25]					   <
.   .   .   .   .   Child: 0 Id: x of type bool [mem: Local loc: -18 size: 1] [line: 25]	   <
.   .   .   Sibling: 2 Call: outputb of type void [line: 26]					   <
.   .   .   .   Child: 0 Op: not of type bool [line: 26]					   <
.   .   .   .   .   Child: 0 Id: x of type bool [mem: Local loc: -18 size: 1] [line: 26]	   <
.   .   .   Sibling: 3 Call: outputb of type void [line: 27]					   <
.   .   .   .   Child: 0 Id: y of type bool [mem: Local loc: -19 size: 1] [line: 27]		   <
.   .   .   Sibling: 4 Call: outputb of type void [line: 28]					   <
.   .   .   .   Child: 0 Op: and of type bool [line: 28]					   <
.   .   .   .   .   Child: 0 Op: not of type bool [line: 28]					   <
.   .   .   .   .   .   Child: 0 Op: not of type bool [line: 28]				   <
.   .   .   .   .   .   .   Child: 0 Id: x of type bool [mem: Local loc: -18 size: 1] [line: 28]   <
.   .   .   .   .   Child: 1 Op: not of type bool [line: 28]					   <
.   .   .   .   .   .   Child: 0 Id: y of type bool [mem: Local loc: -19 size: 1] [line: 28]	   <
.   .   .   Sibling: 5 Call: outputb of type void [line: 29]					   <
.   .   .   .   Child: 0 Op: or of type bool [line: 29]						   <
.   .   .   .   .   Child: 0 Op: not of type bool [line: 29]					   <
.   .   .   .   .   .   Child: 0 Op: not of type bool [line: 29]				   <
.   .   .   .   .   .   .   Child: 0 Id: x of type bool [mem: Local loc: -18 size: 1] [line: 29]   <
.   .   .   .   .   Child: 1 Op: not of type bool [line: 29]					   <
.   .   .   .   .   .   Child: 0 Id: y of type bool [mem: Local loc: -19 size: 1] [line: 29]	   <
.   .   .   Sibling: 6 Call: outputb of type void [line: 30]					   <
.   .   .   .   Child: 0 Op: or of type bool [line: 30]						   <
.   .   .   .   .   Child: 0 Op: not of type bool [line: 30]					   <
.   .   .   .   .   .   Child: 0 Op: not of type bool [line: 30]				   <
.   .   .   .   .   .   .   Child: 0 Id: y of type bool [mem: Local loc: -19 size: 1] [line: 30]   <
.   .   .   .   .   Child: 1 Op: not of type bool [line: 30]					   <
.   .   .   .   .   .   Child: 0 Id: x of type bool [mem: Local loc: -18 size: 1] [line: 30]	   <
.   .   .   Sibling: 7 Call: outputb of type void [line: 31]					   <
.   .   .   .   Child: 0 Op: not of type bool [line: 31]					   <
.   .   .   .   .   Child: 0 Op: not of type bool [line: 31]					   <
.   .   .   .   .   .   Child: 0 Id: x of type bool [mem: Local loc: -18 size: 1] [line: 31]	   <
.   .   .   Sibling: 8 Call: outnl of type void [line: 32]					   <
.   .   Sibling: 10 Call: output of type void [line: 35]					   <
.   .   .   Child: 0 Op: sizeof of type int [line: 35]						   <
.   .   .   .   Child: 0 Id: a of array of type bool [mem: Local loc: -5 size: 8] [line: 35]	   <
.   .   Sibling: 11 Call: output of type void [line: 36]					   <
.   .   .   Child: 0 Op: sizeof of type int [line: 36]						   <
.   .   .   .   Child: 0 Id: b of array of type bool [mem: Local loc: -13 size: 6] [line: 36]	   <
Offset for end of global space: 0								   <
Number of warnings: 2										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: var.c-
-rwxrwx--- 1 root vboxsf  527 Apr 30 16:30 var.c-
-rwxrwx--- 1 root vboxsf   82 May  2 10:26 var.expected
-rwxrwx--- 1 root vboxsf 6340 May  4  2021 var.mem
-rwxrwx--- 1 root vboxsf 6377 May  4  2021 var.out
var.out ztmp4778.txt differ: byte 1, line 1
var (Output DIFF)
Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: var.tm
Sibling: 1 Var: ga of array of type int [mem: Global loc: -2 size: 11] [line: 1]		   |	666 667
Sibling: 2 Func: cat returns type void [mem: Global loc: 0 size: -4] [line: 3]			   |	666 667
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 3]			   |	668 669
.   Sibling: 1 Parm: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 3]		   |	670 671
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 4]					   |	668 669
.   .   Child: 1 Call: output of type void [line: 5]						   |	670 671
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 5]		   |	666 669
.   .   Sibling: 1 Call: output of type void [line: 6]						   |	Bye.
.   .   .   Child: 0 Op: [ of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 6]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 6]						   <
.   .   Sibling: 2 Call: outnl of type void [line: 7]						   <
Sibling: 3 Func: dog returns type void [mem: Global loc: 0 size: -4] [line: 10]			   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 10]			   <
.   Sibling: 1 Parm: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 10]	   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 11]					   <
.   .   Child: 1 Call: output of type void [line: 12]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 12]		   <
.   .   Sibling: 1 Call: output of type void [line: 13]						   <
.   .   .   Child: 0 Op: [ of type int [line: 13]						   <
.   .   .   .   Child: 0 Id: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 13]   <
.   .   .   .   Child: 1 Const 3 of type int [line: 13]						   <
.   .   Sibling: 2 Call: outnl of type void [line: 14]						   <
.   .   Sibling: 3 Assign: = of type int [line: 16]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 16]		   <
.   .   .   Child: 1 Const 668 of type int [line: 16]						   <
.   .   Sibling: 4 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Op: [ of type int [line: 17]						   <
.   .   .   .   Child: 0 Id: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 17]   <
.   .   .   .   Child: 1 Op: + of type int [line: 17]						   <
.   .   .   .   .   Child: 0 Const 1 of type int [line: 17]					   <
.   .   .   .   .   Child: 1 Const 2 of type int [line: 17]					   <
.   .   .   Child: 1 Const 669 of type int [line: 17]						   <
.   .   Sibling: 5 Call: output of type void [line: 18]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 18]		   <
.   .   Sibling: 6 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Op: [ of type int [line: 19]						   <
.   .   .   .   Child: 0 Id: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 19]   <
.   .   .   .   Child: 1 Const 3 of type int [line: 19]						   <
.   .   Sibling: 7 Call: outnl of type void [line: 20]						   <
.   .   Sibling: 8 Assign: = of type int [line: 22]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 22]			   <
.   .   .   Child: 1 Const 670 of type int [line: 22]						   <
.   .   Sibling: 9 Assign: = of type int [line: 23]						   <
.   .   .   Child: 0 Op: [ of type int [line: 23]						   <
.   .   .   .   Child: 0 Id: ga of array of type int [mem: Global loc: -2 size: 11] [line: 23]	   <
.   .   .   .   Child: 1 Op: + of type int [line: 23]						   <
.   .   .   .   .   Child: 0 Const 2 of type int [line: 23]					   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 23]					   <
.   .   .   Child: 1 Const 671 of type int [line: 23]						   <
.   .   Sibling: 10 Call: output of type void [line: 24]					   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 24]			   <
.   .   Sibling: 11 Call: output of type void [line: 25]					   <
.   .   .   Child: 0 Op: [ of type int [line: 25]						   <
.   .   .   .   Child: 0 Id: ga of array of type int [mem: Global loc: -2 size: 11] [line: 25]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 25]						   <
.   .   Sibling: 12 Call: outnl of type void [line: 26]						   <
.   .   Sibling: 13 Call: cat of type void [line: 28]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 28]		   <
.   .   .   Sibling: 1 Id: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 28]	   <
.   .   Sibling: 14 Call: cat of type void [line: 29]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 29]			   <
.   .   .   Sibling: 1 Id: ga of array of type int [mem: Global loc: -2 size: 11] [line: 29]	   <
Sibling: 4 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 32]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -14] [line: 33]					   <
.   .   Child: 0 Var: y of type int [mem: Local loc: -2 size: 1] [line: 34]			   <
.   .   Sibling: 1 Var: ya of array of type int [mem: Local loc: -4 size: 11] [line: 34]	   <
.   .   Child: 1 Assign: = of type int [line: 36]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -2 size: 1] [line: 36]			   <
.   .   .   Child: 1 Const 666 of type int [line: 36]						   <
.   .   Sibling: 1 Assign: = of type int [line: 37]						   <
.   .   .   Child: 0 Op: [ of type int [line: 37]						   <
.   .   .   .   Child: 0 Id: ya of array of type int [mem: Local loc: -4 size: 11] [line: 37]	   <
.   .   .   .   Child: 1 Op: + of type int [line: 37]						   <
.   .   .   .   .   Child: 0 Const 1 of type int [line: 37]					   <
.   .   .   .   .   Child: 1 Const 2 of type int [line: 37]					   <
.   .   .   Child: 1 Const 667 of type int [line: 37]						   <
.   .   Sibling: 2 Call: output of type void [line: 38]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -2 size: 1] [line: 38]			   <
.   .   Sibling: 3 Call: output of type void [line: 39]						   <
.   .   .   Child: 0 Op: [ of type int [line: 39]						   <
.   .   .   .   Child: 0 Id: ya of array of type int [mem: Local loc: -4 size: 11] [line: 39]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 39]						   <
.   .   Sibling: 4 Call: outnl of type void [line: 40]						   <
.   .   Sibling: 5 Call: dog of type void [line: 42]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -2 size: 1] [line: 42]			   <
.   .   .   Sibling: 1 Id: ya of array of type int [mem: Local loc: -4 size: 11] [line: 42]	   <
.   .   Sibling: 6 Call: output of type void [line: 44]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -2 size: 1] [line: 44]			   <
.   .   Sibling: 7 Call: output of type void [line: 45]						   <
.   .   .   Child: 0 Op: [ of type int [line: 45]						   <
.   .   .   .   Child: 0 Id: ya of array of type int [mem: Local loc: -4 size: 11] [line: 45]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 45]						   <
.   .   Sibling: 8 Call: outnl of type void [line: 46]						   <
Offset for end of global space: -12								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: var2.c-
-rwxrwx--- 1 root vboxsf  423 Apr 30 16:46 var2.c-
-rwxrwx--- 1 root vboxsf   61 May  2 10:26 var2.expected
-rwxrwx--- 1 root vboxsf 3730 May  4  2021 var2.mem
-rwxrwx--- 1 root vboxsf 3767 May  4  2021 var2.out
var2.out ztmp4778.txt differ: byte 1, line 1
var2 (Output DIFF)
Var: g of type int [mem: Global loc: 0 size: 1] [line: 2]					   |	Loading file: var2.tm
.   Child: 0 Op: + of type int [line: 2]							   |	8 837 444 555
.   .   Child: 0 Const 111 of type int [line: 2]						   |	444
.   .   Child: 1 Op: * of type int [line: 2]							   |	333
.   .   .   Child: 0 Const 22 of type int [line: 2]						   |	222
.   .   .   Child: 1 Const 33 of type int [line: 2]						   |	837
Sibling: 1 Var: h of array of type int [mem: Global loc: -2 size: 9] [line: 3]			   |	555
Sibling: 2 Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 5]			   |	Bye.
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 5]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 5]					   <
.   .   Child: 0 Var: y of type int [mem: Local loc: -3 size: 1] [line: 6]			   <
.   .   .   Child: 0 Const 222 of type int [line: 6]						   <
.   .   Sibling: 1 Var: z of static type int [mem: LocalStatic loc: -10 size: 1] [line: 7]	   <
.   .   .   Child: 0 Const 333 of type int [line: 7]						   <
.   .   Child: 1 Call: output of type void [line: 9]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 9]		   <
.   .   Sibling: 1 Call: outnl of type void [line: 10]						   <
.   .   Sibling: 2 Call: output of type void [line: 11]						   <
.   .   .   Child: 0 Id: z of static type int [mem: LocalStatic loc: -10 size: 1] [line: 11]	   <
.   .   Sibling: 3 Call: outnl of type void [line: 12]						   <
.   .   Sibling: 4 Assign: = of type int [line: 14]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 14]		   <
.   .   .   Child: 1 Id: y of type int [mem: Local loc: -3 size: 1] [line: 14]			   <
.   .   Sibling: 5 Assign: = of type int [line: 15]						   <
.   .   .   Child: 0 Id: z of static type int [mem: LocalStatic loc: -10 size: 1] [line: 15]	   <
.   .   .   Child: 1 Id: g of type int [mem: Global loc: 0 size: 1] [line: 15]			   <
.   .   Sibling: 6 Call: output of type void [line: 17]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 17]		   <
.   .   Sibling: 7 Call: outnl of type void [line: 18]						   <
.   .   Sibling: 8 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Id: z of static type int [mem: LocalStatic loc: -10 size: 1] [line: 19]	   <
.   .   Sibling: 9 Call: outnl of type void [line: 20]						   <
.   .   Sibling: 10 Return [line: 21]								   <
.   .   .   Child: 0 Id: z of static type int [mem: LocalStatic loc: -10 size: 1] [line: 21]	   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 24]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 25]					   <
.   .   Child: 0 Var: m of type int [mem: Local loc: -2 size: 1] [line: 26]			   <
.   .   .   Child: 0 Const 444 of type int [line: 26]						   <
.   .   Sibling: 1 Var: z of static type int [mem: LocalStatic loc: -11 size: 1] [line: 27]	   <
.   .   .   Child: 0 Const 555 of type int [line: 27]						   <
.   .   Child: 1 Call: output of type void [line: 29]						   <
.   .   .   Child: 0 Op: sizeof of type int [line: 29]						   <
.   .   .   .   Child: 0 Id: h of array of type int [mem: Global loc: -2 size: 9] [line: 29]	   <
.   .   Sibling: 1 Call: output of type void [line: 30]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 30]			   <
.   .   Sibling: 2 Call: output of type void [line: 31]						   <
.   .   .   Child: 0 Id: m of type int [mem: Local loc: -2 size: 1] [line: 31]			   <
.   .   Sibling: 3 Call: output of type void [line: 32]						   <
.   .   .   Child: 0 Id: z of static type int [mem: LocalStatic loc: -11 size: 1] [line: 32]	   <
.   .   Sibling: 4 Call: outnl of type void [line: 33]						   <
.   .   Sibling: 5 Call: dog of type int [line: 34]						   <
.   .   .   Child: 0 Id: m of type int [mem: Local loc: -2 size: 1] [line: 34]			   <
.   .   Sibling: 6 Call: output of type void [line: 35]						   <
.   .   .   Child: 0 Id: z of static type int [mem: LocalStatic loc: -11 size: 1] [line: 35]	   <
.   .   Sibling: 7 Call: outnl of type void [line: 36]						   <
Offset for end of global space: -12								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: vararray.c-
-rwxrwx--- 1 root vboxsf  447 Apr 30 16:30 vararray.c-
-rwxrwx--- 1 root vboxsf  139 May  2 10:26 vararray.expected
-rwxrwx--- 1 root vboxsf 5391 May  4  2021 vararray.mem
-rwxrwx--- 1 root vboxsf 5428 May  4  2021 vararray.out
vararray.out ztmp4778.txt differ: byte 64, line 2
vararray (Output DIFF)
WARNING(15): Variable 'y' may be uninitialized when used here.						WARNING(15): Variable 'y' may be uninitialized when used here.
Var: g of array of type int [mem: Global loc: -1 size: 13] [line: 1]				   |	Loading file: vararray.tm
Sibling: 1 Func: cat returns type void [mem: Global loc: 0 size: -3] [line: 3]			   |	11
.   Child: 0 Parm: q of array of type int [mem: Parameter loc: -2 size: 1] [line: 3]		   |	111 111
.   Child: 1 Call: output of type void [line: 3]						   |	111 12
.   .   Child: 0 Op: [ of type int [line: 3]							   |	222 222
.   .   .   Child: 0 Id: q of array of type int [mem: Parameter loc: -2 size: 1] [line: 3]	   |	222 13
.   .   .   Child: 1 Const 10 of type int [line: 3]						   |	333 333
Sibling: 2 Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 6]			   |	333
.   Child: 0 Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 6]		   |	Bye.
.   Child: 1 Compound [mem: None loc: 0 size: -13] [line: 6]					   <
.   .   Child: 0 Var: y of array of type int [mem: Local loc: -4 size: 10] [line: 7]		   <
.   .   Sibling: 1 Var: z of static array of type int [mem: LocalStatic loc: -14 size: 11] [line   <
.   .   Child: 1 Call: output of type void [line: 10]						   <
.   .   .   Child: 0 Op: sizeof of type int [line: 10]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 10]	   <
.   .   Sibling: 1 Call: outnl of type void [line: 11]						   <
.   .   Sibling: 2 Call: output of type void [line: 12]						   <
.   .   .   Child: 0 Op: [ of type int [line: 12]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 12]	   <
.   .   .   .   Child: 1 Const 10 of type int [line: 12]					   <
.   .   Sibling: 3 Call: cat of type void [line: 13]						   <
.   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]	   <
.   .   Sibling: 4 Call: outnl of type void [line: 14]						   <
.   .   Sibling: 5 Assign: = of type int [line: 15]						   <
.   .   .   Child: 0 Op: [ of type int [line: 15]						   <
.   .   .   .   Child: 0 Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 15]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 15]						   <
.   .   .   Child: 1 Op: [ of type int [line: 15]						   <
.   .   .   .   Child: 0 Id: y of array of type int [mem: Local loc: -4 size: 10] [line: 15]	   <
.   .   .   .   Child: 1 Const 5 of type int [line: 15]						   <
.   .   Sibling: 6 Assign: = of type int [line: 16]						   <
.   .   .   Child: 0 Op: [ of type int [line: 16]						   <
.   .   .   .   Child: 0 Id: z of static array of type int [mem: LocalStatic loc: -14 size: 11]    <
.   .   .   .   Child: 1 Const 6 of type int [line: 16]						   <
.   .   .   Child: 1 Op: [ of type int [line: 16]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 16]	   <
.   .   .   .   Child: 1 Const 6 of type int [line: 16]						   <
.   .   Sibling: 7 Return [line: 18]								   <
.   .   .   Child: 0 Op: [ of type int [line: 18]						   <
.   .   .   .   Child: 0 Id: z of static array of type int [mem: LocalStatic loc: -14 size: 11]    <
.   .   .   .   Child: 1 Const 4 of type int [line: 18]						   <
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 21]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -14] [line: 22]					   <
.   .   Child: 0 Var: m of array of type int [mem: Local loc: -3 size: 12] [line: 23]		   <
.   .   Sibling: 1 Var: z of static array of type int [mem: LocalStatic loc: -25 size: 14] [line   <
.   .   Child: 1 Assign: = of type int [line: 26]						   <
.   .   .   Child: 0 Op: [ of type int [line: 26]						   <
.   .   .   .   Child: 0 Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 26]	   <
.   .   .   .   Child: 1 Const 10 of type int [line: 26]					   <
.   .   .   Child: 1 Const 111 of type int [line: 26]						   <
.   .   Sibling: 1 Call: dog of type int [line: 27]						   <
.   .   .   Child: 0 Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 27]	   <
.   .   Sibling: 2 Call: output of type void [line: 28]						   <
.   .   .   Child: 0 Op: [ of type int [line: 28]						   <
.   .   .   .   Child: 0 Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 28]	   <
.   .   .   .   Child: 1 Const 10 of type int [line: 28]					   <
.   .   Sibling: 3 Assign: = of type int [line: 30]						   <
.   .   .   Child: 0 Op: [ of type int [line: 30]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 30]	   <
.   .   .   .   Child: 1 Const 10 of type int [line: 30]					   <
.   .   .   Child: 1 Const 222 of type int [line: 30]						   <
.   .   Sibling: 4 Call: dog of type int [line: 31]						   <
.   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 31]	   <
.   .   Sibling: 5 Call: output of type void [line: 32]						   <
.   .   .   Child: 0 Op: [ of type int [line: 32]						   <
.   .   .   .   Child: 0 Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 32]	   <
.   .   .   .   Child: 1 Const 10 of type int [line: 32]					   <
.   .   Sibling: 6 Assign: = of type int [line: 34]						   <
.   .   .   Child: 0 Op: [ of type int [line: 34]						   <
.   .   .   .   Child: 0 Id: z of static array of type int [mem: LocalStatic loc: -25 size: 14]    <
.   .   .   .   Child: 1 Const 10 of type int [line: 34]					   <
.   .   .   Child: 1 Const 333 of type int [line: 34]						   <
.   .   Sibling: 7 Call: dog of type int [line: 35]						   <
.   .   .   Child: 0 Id: z of static array of type int [mem: LocalStatic loc: -25 size: 14] [lin   <
.   .   Sibling: 8 Call: output of type void [line: 36]						   <
.   .   .   Child: 0 Op: [ of type int [line: 36]						   <
.   .   .   .   Child: 0 Id: z of static array of type int [mem: LocalStatic loc: -25 size: 14]    <
.   .   .   .   Child: 1 Const 10 of type int [line: 36]					   <
Offset for end of global space: -38								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: varnovoid.c-
-rwxrwx--- 1 root vboxsf  527 Apr 30 16:30 varnovoid.c-
-rwxrwx--- 1 root vboxsf   88 May  2 10:26 varnovoid.expected
-rwxrwx--- 1 root vboxsf 6340 May  4  2021 varnovoid.mem
-rwxrwx--- 1 root vboxsf 6377 May  4  2021 varnovoid.out
varnovoid.out ztmp4778.txt differ: byte 1, line 1
varnovoid (Output DIFF)
Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]					   |	Loading file: varnovoid.tm
Sibling: 1 Var: ga of array of type int [mem: Global loc: -2 size: 11] [line: 1]		   |	666 667
Sibling: 2 Func: cat returns type void [mem: Global loc: 0 size: -4] [line: 3]			   |	666 667
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 3]			   |	668 669
.   Sibling: 1 Parm: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 3]		   |	670 671
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 4]					   |	668 669
.   .   Child: 1 Call: output of type void [line: 5]						   |	670 671
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 5]		   |	666 669
.   .   Sibling: 1 Call: output of type void [line: 6]						   |	Bye.
.   .   .   Child: 0 Op: [ of type int [line: 6]						   <
.   .   .   .   Child: 0 Id: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 6]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 6]						   <
.   .   Sibling: 2 Call: outnl of type void [line: 7]						   <
Sibling: 3 Func: dog returns type void [mem: Global loc: 0 size: -4] [line: 10]			   <
.   Child: 0 Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 10]			   <
.   Sibling: 1 Parm: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 10]	   <
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 11]					   <
.   .   Child: 1 Call: output of type void [line: 12]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 12]		   <
.   .   Sibling: 1 Call: output of type void [line: 13]						   <
.   .   .   Child: 0 Op: [ of type int [line: 13]						   <
.   .   .   .   Child: 0 Id: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 13]   <
.   .   .   .   Child: 1 Const 3 of type int [line: 13]						   <
.   .   Sibling: 2 Call: outnl of type void [line: 14]						   <
.   .   Sibling: 3 Assign: = of type int [line: 16]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 16]		   <
.   .   .   Child: 1 Const 668 of type int [line: 16]						   <
.   .   Sibling: 4 Assign: = of type int [line: 17]						   <
.   .   .   Child: 0 Op: [ of type int [line: 17]						   <
.   .   .   .   Child: 0 Id: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 17]   <
.   .   .   .   Child: 1 Op: + of type int [line: 17]						   <
.   .   .   .   .   Child: 0 Const 1 of type int [line: 17]					   <
.   .   .   .   .   Child: 1 Const 2 of type int [line: 17]					   <
.   .   .   Child: 1 Const 669 of type int [line: 17]						   <
.   .   Sibling: 5 Call: output of type void [line: 18]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 18]		   <
.   .   Sibling: 6 Call: output of type void [line: 19]						   <
.   .   .   Child: 0 Op: [ of type int [line: 19]						   <
.   .   .   .   Child: 0 Id: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 19]   <
.   .   .   .   Child: 1 Const 3 of type int [line: 19]						   <
.   .   Sibling: 7 Call: outnl of type void [line: 20]						   <
.   .   Sibling: 8 Assign: = of type int [line: 22]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 22]			   <
.   .   .   Child: 1 Const 670 of type int [line: 22]						   <
.   .   Sibling: 9 Assign: = of type int [line: 23]						   <
.   .   .   Child: 0 Op: [ of type int [line: 23]						   <
.   .   .   .   Child: 0 Id: ga of array of type int [mem: Global loc: -2 size: 11] [line: 23]	   <
.   .   .   .   Child: 1 Op: + of type int [line: 23]						   <
.   .   .   .   .   Child: 0 Const 2 of type int [line: 23]					   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 23]					   <
.   .   .   Child: 1 Const 671 of type int [line: 23]						   <
.   .   Sibling: 10 Call: output of type void [line: 24]					   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 24]			   <
.   .   Sibling: 11 Call: output of type void [line: 25]					   <
.   .   .   Child: 0 Op: [ of type int [line: 25]						   <
.   .   .   .   Child: 0 Id: ga of array of type int [mem: Global loc: -2 size: 11] [line: 25]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 25]						   <
.   .   Sibling: 12 Call: outnl of type void [line: 26]						   <
.   .   Sibling: 13 Call: cat of type void [line: 28]						   <
.   .   .   Child: 0 Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 28]		   <
.   .   .   Sibling: 1 Id: xa of array of type int [mem: Parameter loc: -3 size: 1] [line: 28]	   <
.   .   Sibling: 14 Call: cat of type void [line: 29]						   <
.   .   .   Child: 0 Id: g of type int [mem: Global loc: 0 size: 1] [line: 29]			   <
.   .   .   Sibling: 1 Id: ga of array of type int [mem: Global loc: -2 size: 11] [line: 29]	   <
Sibling: 4 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 32]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -14] [line: 33]					   <
.   .   Child: 0 Var: y of type int [mem: Local loc: -2 size: 1] [line: 34]			   <
.   .   Sibling: 1 Var: ya of array of type int [mem: Local loc: -4 size: 11] [line: 34]	   <
.   .   Child: 1 Assign: = of type int [line: 36]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -2 size: 1] [line: 36]			   <
.   .   .   Child: 1 Const 666 of type int [line: 36]						   <
.   .   Sibling: 1 Assign: = of type int [line: 37]						   <
.   .   .   Child: 0 Op: [ of type int [line: 37]						   <
.   .   .   .   Child: 0 Id: ya of array of type int [mem: Local loc: -4 size: 11] [line: 37]	   <
.   .   .   .   Child: 1 Op: + of type int [line: 37]						   <
.   .   .   .   .   Child: 0 Const 1 of type int [line: 37]					   <
.   .   .   .   .   Child: 1 Const 2 of type int [line: 37]					   <
.   .   .   Child: 1 Const 667 of type int [line: 37]						   <
.   .   Sibling: 2 Call: output of type void [line: 38]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -2 size: 1] [line: 38]			   <
.   .   Sibling: 3 Call: output of type void [line: 39]						   <
.   .   .   Child: 0 Op: [ of type int [line: 39]						   <
.   .   .   .   Child: 0 Id: ya of array of type int [mem: Local loc: -4 size: 11] [line: 39]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 39]						   <
.   .   Sibling: 4 Call: outnl of type void [line: 40]						   <
.   .   Sibling: 5 Call: dog of type void [line: 42]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -2 size: 1] [line: 42]			   <
.   .   .   Sibling: 1 Id: ya of array of type int [mem: Local loc: -4 size: 11] [line: 42]	   <
.   .   Sibling: 6 Call: output of type void [line: 44]						   <
.   .   .   Child: 0 Id: y of type int [mem: Local loc: -2 size: 1] [line: 44]			   <
.   .   Sibling: 7 Call: output of type void [line: 45]						   <
.   .   .   Child: 0 Op: [ of type int [line: 45]						   <
.   .   .   .   Child: 0 Id: ya of array of type int [mem: Local loc: -4 size: 11] [line: 45]	   <
.   .   .   .   Child: 1 Const 3 of type int [line: 45]						   <
.   .   Sibling: 8 Call: outnl of type void [line: 46]						   <
Offset for end of global space: -12								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: walsh.c-
-rwxrwx--- 1 root vboxsf  1445 Apr 30 16:47 walsh.c-
-rwxrwx--- 1 root vboxsf   562 May  2 10:26 walsh.expected
-rwxrwx--- 1 root vboxsf    92 Dec  1  2014 walsh.in
-rwxrwx--- 1 root vboxsf 18561 May  4  2021 walsh.mem
-rwxrwx--- 1 root vboxsf 18598 May  4  2021 walsh.out
walsh.out ztmp4778.txt differ: byte 64, line 2
walsh (Output DIFF)
WARNING(88): Variable 'f' may be uninitialized when used here.						WARNING(88): Variable 'f' may be uninitialized when used here.
Func: pow returns type int [mem: Global loc: 0 size: -4] [line: 2]				   |	Loading file: walsh.tm
.   Child: 0 Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 2]			   |	entered: 4
.   Sibling: 1 Parm: p of type int [mem: Parameter loc: -3 size: 1] [line: 2]			   |	entered: 1
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 3]					   |	entered: 4
.   .   Child: 0 Var: sqr of type int [mem: Local loc: -4 size: 1] [line: 4]			   |	entered: 9
.   .   Sibling: 1 Var: ans of type int [mem: Local loc: -5 size: 1] [line: 5]			   |	entered: 16
.   .   Child: 1 Assign: = of type int [line: 7]						   |	entered: 25
.   .   .   Child: 0 Id: ans of type int [mem: Local loc: -5 size: 1] [line: 7]			   |	entered: 36
.   .   .   Child: 1 Const 1 of type int [line: 7]						   |	entered: 49
.   .   Sibling: 1 Assign: = of type int [line: 8]						   |	entered: 64
.   .   .   Child: 0 Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 8]			   |	entered: 81
.   .   .   Child: 1 Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 8]		   |	entered: 100
.   .   Sibling: 2 While [line: 9]								   |	entered: 121
.   .   .   Child: 0 Const true of type bool [line: 9]						   |	entered: 144
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 9]				   |	entered: 169
.   .   .   .   Child: 1 If [line: 10]								   |	entered: 196
.   .   .   .   .   Child: 0 Op: == of type bool [line: 10]					   |	entered: 225
.   .   .   .   .   .   Child: 0 Op: % of type int [line: 10]					   |	entered: 256
.   .   .   .   .   .   .   Child: 0 Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 1   |	1496 -136 -272 16 -544 32 64 0 -1088 64 128 0 256 0 0 0
.   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 10]				   |	1 4 9 16 25 36 49 64 81 100 121 144 169 196 225 256
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 10]					   |	entered: 3
.   .   .   .   .   Child: 1 Assign: = of type int [line: 10]					   |	entered: 0
.   .   .   .   .   .   Child: 0 Id: ans of type int [mem: Local loc: -5 size: 1] [line: 10]	   |	entered: 16
.   .   .   .   .   .   Child: 1 Op: * of type int [line: 10]					   |	entered: 0
.   .   .   .   .   .   .   Child: 0 Id: ans of type int [mem: Local loc: -5 size: 1] [line: 10]   |	entered: 0
.   .   .   .   .   .   .   Child: 1 Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 10]   |	entered: 0
.   .   .   .   Sibling: 1 Assign: = of type int [line: 11]					   |	entered: 0
.   .   .   .   .   Child: 0 Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 11]	   |	entered: 0
.   .   .   .   .   Child: 1 Op: / of type int [line: 11]					   |	entered: 0
.   .   .   .   .   .   Child: 0 Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 11]	   |	16 -16 16 -16 16 -16 16 -16
.   .   .   .   .   .   Child: 1 Const 2 of type int [line: 11]					   |	0 16 0 0 0 0 0 0
.   .   .   .   Sibling: 2 If [line: 12]							   |	entered: 0
.   .   .   .   .   Child: 0 Op: == of type bool [line: 12]					   |	Bye.
.   .   .   .   .   .   Child: 0 Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 12]	   <
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 12]					   <
.   .   .   .   .   Child: 1 Return [line: 12]							   <
.   .   .   .   .   .   Child: 0 Id: ans of type int [mem: Local loc: -5 size: 1] [line: 12]	   <
.   .   .   .   Sibling: 3 Assign: = of type int [line: 13]					   <
.   .   .   .   .   Child: 0 Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 13]	   <
.   .   .   .   .   Child: 1 Op: * of type int [line: 13]					   <
.   .   .   .   .   .   Child: 0 Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 13]	   <
.   .   .   .   .   .   Child: 1 Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 13]	   <
Sibling: 1 Func: getFunc returns type int [mem: Global loc: 0 size: -3] [line: 17]		   <
.   Child: 0 Parm: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 17]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 18]					   <
.   .   Child: 0 Var: numbits of type int [mem: Local loc: -3 size: 1] [line: 19]		   <
.   .   Sibling: 1 Var: i of type int [mem: Local loc: -4 size: 1] [line: 20]			   <
.   .   Sibling: 2 Var: size of type int [mem: Local loc: -5 size: 1] [line: 21]		   <
.   .   Child: 1 If [line: 23]									   <
.   .   .   Child: 0 Op: == of type bool [line: 23]						   <
.   .   .   .   Child: 0 Assign: = of type int [line: 23]					   <
.   .   .   .   .   Child: 0 Id: numbits of type int [mem: Local loc: -3 size: 1] [line: 23]	   <
.   .   .   .   .   Child: 1 Call: input of type int [line: 23]					   <
.   .   .   .   Child: 1 Const 0 of type int [line: 23]						   <
.   .   .   Child: 1 Return [line: 23]								   <
.   .   .   .   Child: 0 Const 0 of type int [line: 23]						   <
.   .   Sibling: 1 Assign: = of type int [line: 24]						   <
.   .   .   Child: 0 Id: size of type int [mem: Local loc: -5 size: 1] [line: 24]		   <
.   .   .   Child: 1 Call: pow of type int [line: 24]						   <
.   .   .   .   Child: 0 Const 2 of type int [line: 24]						   <
.   .   .   .   Sibling: 1 Id: numbits of type int [mem: Local loc: -3 size: 1] [line: 24]	   <
.   .   Sibling: 2 Assign: = of type int [line: 25]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 25]			   <
.   .   .   Child: 1 Const 0 of type int [line: 25]						   <
.   .   Sibling: 3 While [line: 26]								   <
.   .   .   Child: 0 Op: < of type bool [line: 26]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 26]		   <
.   .   .   .   Child: 1 Id: size of type int [mem: Local loc: -5 size: 1] [line: 26]		   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -6] [line: 26]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 27]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 27]					   <
.   .   .   .   .   .   Child: 0 Id: f of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 27]	   <
.   .   .   .   .   Child: 1 Call: input of type int [line: 27]					   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 28]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 28]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 28]					   <
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 28]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 28]					   <
.   .   Sibling: 4 Return [line: 31]								   <
.   .   .   Child: 0 Id: numbits of type int [mem: Local loc: -3 size: 1] [line: 31]		   <
Sibling: 2 Func: printFunc returns type void [mem: Global loc: 0 size: -4] [line: 34]		   <
.   Child: 0 Parm: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 34]		   <
.   Sibling: 1 Parm: size of type int [mem: Parameter loc: -3 size: 1] [line: 34]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 35]					   <
.   .   Child: 0 Var: i of type int [mem: Local loc: -4 size: 1] [line: 36]			   <
.   .   Child: 1 Assign: = of type int [line: 38]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 38]			   <
.   .   .   Child: 1 Const 0 of type int [line: 38]						   <
.   .   Sibling: 1 While [line: 39]								   <
.   .   .   Child: 0 Op: < of type bool [line: 39]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 39]		   <
.   .   .   .   Child: 1 Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 39]	   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 39]				   <
.   .   .   .   Child: 1 Call: output of type void [line: 40]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 40]					   <
.   .   .   .   .   .   Child: 0 Id: f of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 40]	   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 41]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 41]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 41]					   <
.   .   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 41]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 41]					   <
.   .   Sibling: 2 Call: outnl of type void [line: 43]						   <
Sibling: 3 Func: fwt returns type void [mem: Global loc: 0 size: -5] [line: 47]			   <
.   Child: 0 Parm: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 47]		   <
.   Sibling: 1 Parm: start of type int [mem: Parameter loc: -3 size: 1] [line: 47]		   <
.   Sibling: 2 Parm: size of type int [mem: Parameter loc: -4 size: 1] [line: 47]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 48]					   <
.   .   Child: 0 Var: a of type int [mem: Local loc: -5 size: 1] [line: 49]			   <
.   .   Sibling: 1 Var: b of type int [mem: Local loc: -6 size: 1] [line: 49]			   <
.   .   Sibling: 2 Var: tmp of type int [mem: Local loc: -7 size: 1] [line: 49]			   <
.   .   Child: 1 Assign: = of type int [line: 51]						   <
.   .   .   Child: 0 Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 51]		   <
.   .   .   Child: 1 Op: / of type int [line: 51]						   <
.   .   .   .   Child: 0 Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 51]	   <
.   .   .   .   Child: 1 Const 2 of type int [line: 51]						   <
.   .   Sibling: 1 If [line: 52]								   <
.   .   .   Child: 0 Op: > of type bool [line: 52]						   <
.   .   .   .   Child: 0 Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 52]	   <
.   .   .   .   Child: 1 Const 1 of type int [line: 52]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 52]				   <
.   .   .   .   Child: 1 Call: fwt of type void [line: 53]					   <
.   .   .   .   .   Child: 0 Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line:    <
.   .   .   .   .   Sibling: 1 Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 53]   <
.   .   .   .   .   Sibling: 2 Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 53]	   <
.   .   .   .   Sibling: 1 Call: fwt of type void [line: 54]					   <
.   .   .   .   .   Child: 0 Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line:    <
.   .   .   .   .   Sibling: 1 Op: + of type int [line: 54]					   <
.   .   .   .   .   .   Child: 0 Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 5   <
.   .   .   .   .   .   Child: 1 Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 54   <
.   .   .   .   .   Sibling: 2 Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 54]	   <
.   .   Sibling: 2 Assign: = of type int [line: 57]						   <
.   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 57]			   <
.   .   .   Child: 1 Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 57]		   <
.   .   Sibling: 3 Assign: = of type int [line: 58]						   <
.   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 58]			   <
.   .   .   Child: 1 Op: + of type int [line: 58]						   <
.   .   .   .   Child: 0 Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 58]	   <
.   .   .   .   Child: 1 Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 58]	   <
.   .   Sibling: 4 While [line: 59]								   <
.   .   .   Child: 0 Op: < of type bool [line: 59]						   <
.   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 59]		   <
.   .   .   .   Child: 1 Op: + of type int [line: 59]						   <
.   .   .   .   .   Child: 0 Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 59]	   <
.   .   .   .   .   Child: 1 Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 59]	   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -8] [line: 59]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 60]					   <
.   .   .   .   .   Child: 0 Id: tmp of type int [mem: Local loc: -7 size: 1] [line: 60]	   <
.   .   .   .   .   Child: 1 Op: [ of type int [line: 60]					   <
.   .   .   .   .   .   Child: 0 Id: w of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -5 size: 1] [line: 60]	   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 61]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 61]					   <
.   .   .   .   .   .   Child: 0 Id: w of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -5 size: 1] [line: 61]	   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 61]					   <
.   .   .   .   .   .   Child: 0 Op: [ of type int [line: 61]					   <
.   .   .   .   .   .   .   Child: 0 Id: w of array of type int [mem: Parameter loc: -2 size: 1]   <
.   .   .   .   .   .   .   Child: 1 Id: a of type int [mem: Local loc: -5 size: 1] [line: 61]	   <
.   .   .   .   .   .   Child: 1 Op: [ of type int [line: 61]					   <
.   .   .   .   .   .   .   Child: 0 Id: w of array of type int [mem: Parameter loc: -2 size: 1]   <
.   .   .   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -6 size: 1] [line: 61]	   <
.   .   .   .   Sibling: 2 Assign: = of type int [line: 62]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 62]					   <
.   .   .   .   .   .   Child: 0 Id: w of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -6 size: 1] [line: 62]	   <
.   .   .   .   .   Child: 1 Op: - of type int [line: 62]					   <
.   .   .   .   .   .   Child: 0 Id: tmp of type int [mem: Local loc: -7 size: 1] [line: 62]	   <
.   .   .   .   .   .   Child: 1 Op: [ of type int [line: 62]					   <
.   .   .   .   .   .   .   Child: 0 Id: w of array of type int [mem: Parameter loc: -2 size: 1]   <
.   .   .   .   .   .   .   Child: 1 Id: b of type int [mem: Local loc: -6 size: 1] [line: 62]	   <
.   .   .   .   Sibling: 3 Assign: = of type int [line: 63]					   <
.   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 63]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 63]					   <
.   .   .   .   .   .   Child: 0 Id: a of type int [mem: Local loc: -5 size: 1] [line: 63]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 63]					   <
.   .   .   .   Sibling: 4 Assign: = of type int [line: 64]					   <
.   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 64]		   <
.   .   .   .   .   Child: 1 Op: + of type int [line: 64]					   <
.   .   .   .   .   .   Child: 0 Id: b of type int [mem: Local loc: -6 size: 1] [line: 64]	   <
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 64]					   <
Sibling: 4 Func: div returns type void [mem: Global loc: 0 size: -4] [line: 68]			   <
.   Child: 0 Parm: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 68]		   <
.   Sibling: 1 Parm: size of type int [mem: Parameter loc: -3 size: 1] [line: 68]		   <
.   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 69]					   <
.   .   Child: 0 Var: i of type int [mem: Local loc: -4 size: 1] [line: 70]			   <
.   .   Child: 1 Assign: = of type int [line: 72]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 72]			   <
.   .   .   Child: 1 Const 0 of type int [line: 72]						   <
.   .   Sibling: 1 While [line: 73]								   <
.   .   .   Child: 0 Op: < of type bool [line: 73]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 73]		   <
.   .   .   .   Child: 1 Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 73]	   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -5] [line: 73]				   <
.   .   .   .   Child: 1 Assign: = of type int [line: 74]					   <
.   .   .   .   .   Child: 0 Op: [ of type int [line: 74]					   <
.   .   .   .   .   .   Child: 0 Id: f of array of type int [mem: Parameter loc: -2 size: 1] [li   <
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 74]	   <
.   .   .   .   .   Child: 1 Op: / of type int [line: 74]					   <
.   .   .   .   .   .   Child: 0 Op: [ of type int [line: 74]					   <
.   .   .   .   .   .   .   Child: 0 Id: f of array of type int [mem: Parameter loc: -2 size: 1]   <
.   .   .   .   .   .   .   Child: 1 Id: i of type int [mem: Local loc: -4 size: 1] [line: 74]	   <
.   .   .   .   .   .   Child: 1 Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 74   <
.   .   .   .   Sibling: 1 Assign: ++ of type int [line: 75]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -4 size: 1] [line: 75]		   <
Sibling: 5 Func: main returns type int [mem: Global loc: 0 size: -2] [line: 79]			   <
.   Child: 1 Compound [mem: None loc: 0 size: -262] [line: 80]					   <
.   .   Child: 0 Var: f of array of type int [mem: Local loc: -3 size: 257] [line: 81]		   <
.   .   Sibling: 1 Var: size of type int [mem: Local loc: -259 size: 1] [line: 83]		   <
.   .   Sibling: 2 Var: numbits of type int [mem: Local loc: -260 size: 1] [line: 84]		   <
.   .   Sibling: 3 Var: half of type int [mem: Local loc: -261 size: 1] [line: 85]		   <
.   .   Child: 1 While [line: 87]								   <
.   .   .   Child: 0 Const true of type bool [line: 87]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -262] [line: 87]				   <
.   .   .   .   Child: 1 If [line: 88]								   <
.   .   .   .   .   Child: 0 Op: == of type bool [line: 88]					   <
.   .   .   .   .   .   Child: 0 Assign: = of type int [line: 88]				   <
.   .   .   .   .   .   .   Child: 0 Id: numbits of type int [mem: Local loc: -260 size: 1] [lin   <
.   .   .   .   .   .   .   Child: 1 Call: getFunc of type int [line: 88]			   <
.   .   .   .   .   .   .   .   Child: 0 Id: f of array of type int [mem: Local loc: -3 size: 25   <
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 88]					   <
.   .   .   .   .   Child: 1 Return [line: 88]							   <
.   .   .   .   .   .   Child: 0 Const 0 of type int [line: 88]					   <
.   .   .   .   Sibling: 1 Assign: = of type int [line: 89]					   <
.   .   .   .   .   Child: 0 Id: size of type int [mem: Local loc: -259 size: 1] [line: 89]	   <
.   .   .   .   .   Child: 1 Call: pow of type int [line: 89]					   <
.   .   .   .   .   .   Child: 0 Const 2 of type int [line: 89]					   <
.   .   .   .   .   .   Sibling: 1 Id: numbits of type int [mem: Local loc: -260 size: 1] [line:   <
.   .   .   .   Sibling: 2 Assign: = of type int [line: 90]					   <
.   .   .   .   .   Child: 0 Id: half of type int [mem: Local loc: -261 size: 1] [line: 90]	   <
.   .   .   .   .   Child: 1 Op: / of type int [line: 90]					   <
.   .   .   .   .   .   Child: 0 Id: size of type int [mem: Local loc: -259 size: 1] [line: 90]	   <
.   .   .   .   .   .   Child: 1 Const 2 of type int [line: 90]					   <
.   .   .   .   Sibling: 3 Call: fwt of type void [line: 92]					   <
.   .   .   .   .   Child: 0 Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 92   <
.   .   .   .   .   Sibling: 1 Const 0 of type int [line: 92]					   <
.   .   .   .   .   Sibling: 2 Id: size of type int [mem: Local loc: -259 size: 1] [line: 92]	   <
.   .   .   .   Sibling: 4 Call: printFunc of type void [line: 93]				   <
.   .   .   .   .   Child: 0 Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 93   <
.   .   .   .   .   Sibling: 1 Id: size of type int [mem: Local loc: -259 size: 1] [line: 93]	   <
.   .   .   .   Sibling: 5 Call: fwt of type void [line: 95]					   <
.   .   .   .   .   Child: 0 Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 95   <
.   .   .   .   .   Sibling: 1 Const 0 of type int [line: 95]					   <
.   .   .   .   .   Sibling: 2 Id: size of type int [mem: Local loc: -259 size: 1] [line: 95]	   <
.   .   .   .   Sibling: 6 Call: div of type void [line: 96]					   <
.   .   .   .   .   Child: 0 Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 96   <
.   .   .   .   .   Sibling: 1 Id: size of type int [mem: Local loc: -259 size: 1] [line: 96]	   <
.   .   .   .   Sibling: 7 Call: printFunc of type void [line: 97]				   <
.   .   .   .   .   Child: 0 Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 97   <
.   .   .   .   .   Sibling: 1 Id: size of type int [mem: Local loc: -259 size: 1] [line: 97]	   <
.   .   Sibling: 1 Return [line: 99]								   <
.   .   .   Child: 0 Const 0 of type int [line: 99]						   <
Offset for end of global space: 0								   <
Number of warnings: 1										   <
Number of errors: 0										   <
------------------------------------								   <
====================================
FILE: while.c-
-rwxrwx--- 1 root vboxsf  144 Apr 30 16:30 while.c-
-rwxrwx--- 1 root vboxsf   52 May  2 10:26 while.expected
-rwxrwx--- 1 root vboxsf 1797 May  4  2021 while.mem
-rwxrwx--- 1 root vboxsf 1834 May  4  2021 while.out
while.out ztmp4778.txt differ: byte 1, line 1
while (Output DIFF)
Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]				   |	Loading file: while.tm
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 2]					   |	10 9 8 7 6 5 4 3 2 1
.   .   Child: 0 Var: i of type int [mem: Local loc: -2 size: 1] [line: 3]			   |	10
.   .   Child: 1 Assign: = of type int [line: 5]						   |	Bye.
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 5]			   <
.   .   .   Child: 1 Const 10 of type int [line: 5]						   <
.   .   Sibling: 1 While [line: 6]								   <
.   .   .   Child: 0 Op: > of type bool [line: 6]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 6]		   <
.   .   .   .   Child: 1 Const 0 of type int [line: 6]						   <
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 6]				   <
.   .   .   .   Child: 1 Call: output of type void [line: 7]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 7]		   <
.   .   .   .   Sibling: 1 Assign: -- of type int [line: 8]					   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 8]		   <
.   .   Sibling: 2 Call: outnl of type void [line: 10]						   <
.   .   Sibling: 3 While [line: 12]								   <
.   .   .   Child: 0 Op: < of type bool [line: 12]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 12]		   <
.   .   .   .   Child: 1 Const 10 of type int [line: 12]					   <
.   .   .   Child: 1 Assign: = of type int [line: 12]						   <
.   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 12]		   <
.   .   .   .   Child: 1 Op: + of type int [line: 12]						   <
.   .   .   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 12]		   <
.   .   .   .   .   Child: 1 Const 1 of type int [line: 12]					   <
.   .   Sibling: 4 Call: output of type void [line: 13]						   <
.   .   .   Child: 0 Id: i of type int [mem: Local loc: -2 size: 1] [line: 13]			   <
Offset for end of global space: 0								   <
Number of warnings: 0										   <
Number of errors: 0										   <
------------------------------------								   <
