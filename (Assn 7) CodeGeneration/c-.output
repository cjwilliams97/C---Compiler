Terminals unused in grammar

    TRUE
    FALSE
    CHSIGN
    SIZEOF


State 1 conflicts: 2 shift/reduce
State 20 conflicts: 1 shift/reduce
State 68 conflicts: 2 reduce/reduce
State 165 conflicts: 2 shift/reduce
State 167 conflicts: 1 shift/reduce
State 231 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decList

    2 decList: decList decl
    3        | decl

    4 decl: varDecl
    5     | funDecl
    6     | error

    7 varDecl: typeSpec varDeclList ';'
    8        | error varDeclList ';'
    9        | typeSpec error ';'

   10 scopedVarDecl: STATIC typeSpec varDeclList ';'
   11              | typeSpec varDeclList ';'

   12 varDeclList: varDeclList ',' varDeclInit
   13            | varDeclList ',' error
   14            | varDeclInit
   15            | error

   16 varDeclInit: varDeclId
   17            | varDeclId ':' simpleExp
   18            | error ':' simpleExp
   19            | varDeclId ':' error

   20 varDeclId: ID
   21          | ID '[' NUMCONST ']'
   22          | ID '[' error
   23          | error ']'

   24 typeSpec: INT
   25         | BOOL
   26         | CHAR

   27 funDecl: typeSpec ID '(' parms ')' stmt
   28        | ID '(' parms ')' stmt
   29        | typeSpec error
   30        | typeSpec ID '(' error
   31        | typeSpec ID '(' parms ')' error
   32        | ID '(' error
   33        | ID '(' parms ')' error

   34 parms: parmList
   35      | %empty

   36 parmList: parmList ';' parmTypeList
   37         | parmTypeList
   38         | parmList ';' error
   39         | error

   40 parmTypeList: typeSpec parmIdList
   41             | typeSpec error

   42 parmIdList: parmIdList ',' parmId
   43           | parmId
   44           | parmIdList ',' error
   45           | error

   46 parmId: ID
   47       | ID '[' ']'

   48 stmt: selectStmt

   49 expStmt: exp ';'
   50        | ';'
   51        | error ';'

   52 compoundStmt: '{' localDecls stmtList '}'

   53 stmtList: stmtList stmt
   54         | %empty

   55 otherStmt: compoundStmt
   56          | expStmt
   57          | returnStmt
   58          | breakStmt

   59 localDecls: localDecls scopedVarDecl
   60           | %empty

   61 selectStmt: matched
   62           | unmatched

   63 matched: IF simpleExp THEN matched ELSE matched
   64        | otherStmt
   65        | WHILE simpleExp DO matched
   66        | FOR ID '=' iterRange DO matched
   67        | IF error
   68        | IF error ELSE matched
   69        | IF error THEN matched ELSE matched
   70        | WHILE error DO matched
   71        | WHILE error
   72        | FOR ID '=' error DO matched
   73        | FOR error

   74 unmatched: IF simpleExp THEN matched
   75          | IF simpleExp THEN unmatched
   76          | IF simpleExp THEN matched ELSE unmatched
   77          | WHILE simpleExp DO unmatched
   78          | FOR ID '=' iterRange DO unmatched
   79          | IF error THEN stmt
   80          | IF error THEN matched ELSE unmatched

   81 iterRange: simpleExp TO simpleExp
   82          | simpleExp TO simpleExp BY simpleExp
   83          | error BY error
   84          | simpleExp TO error
   85          | simpleExp TO simpleExp BY error

   86 returnStmt: RETURN ';'
   87           | RETURN exp ';'
   88           | RETURN error ';'

   89 breakStmt: BREAK ';'

   90 exp: mutable '=' exp
   91    | mutable ADDASS exp
   92    | mutable SUBASS exp
   93    | mutable MULASS exp
   94    | mutable DIVASS exp
   95    | mutable INC
   96    | mutable DEC
   97    | simpleExp
   98    | error INC
   99    | error DEC
  100    | mutable '=' error
  101    | mutable ADDASS error
  102    | mutable SUBASS error
  103    | mutable MULASS error
  104    | mutable DIVASS error
  105    | error '=' exp
  106    | error ADDASS exp
  107    | error SUBASS exp
  108    | error MULASS exp
  109    | error DIVASS exp

  110 simpleExp: simpleExp OR andExp
  111          | simpleExp OR error
  112          | andExp

  113 andExp: andExp AND unaryRelExp
  114       | unaryRelExp
  115       | andExp AND error

  116 unaryRelExp: NOT unaryRelExp
  117            | relExp
  118            | NOT error

  119 relExp: minmaxExp relop minmaxExp
  120       | minmaxExp
  121       | minmaxExp relop error

  122 relop: LEQ
  123      | '<'
  124      | '>'
  125      | GEQ
  126      | EQ
  127      | NEQ

  128 minmaxExp: minmaxExp minmaxop sumExp
  129          | sumExp

  130 minmaxop: MAX
  131         | MIN

  132 sumExp: sumExp sumop mulExp
  133       | mulExp
  134       | sumExp sumop error

  135 sumop: '+'
  136      | '-'

  137 mulExp: mulExp mulop unaryExp
  138       | unaryExp
  139       | mulExp mulop error

  140 mulop: '*'
  141      | '/'
  142      | '%'

  143 unaryExp: unaryop unaryExp
  144         | factor
  145         | unaryop error

  146 unaryop: '-'
  147        | '*'
  148        | '?'

  149 factor: immutable
  150       | mutable

  151 mutable: ID
  152        | ID '[' exp ']'

  153 immutable: '(' exp ')'
  154          | call
  155          | constant
  156          | '(' error

  157 call: ID '(' args ')'
  158     | error '('

  159 args: argList
  160     | %empty

  161 argList: argList ',' exp
  162        | exp
  163        | argList ',' error

  164 constant: NUMCONST
  165         | CHARCONST
  166         | STRINGCONST
  167         | BOOLCONST


Terminals, with rules where they appear

    $end (0) 0
    '%' <tokenData> (37) 142
    '(' <tokenData> (40) 27 28 30 31 32 33 153 156 157 158
    ')' <tokenData> (41) 27 28 31 33 153 157
    '*' <tokenData> (42) 140 147
    '+' <tokenData> (43) 135
    ',' <tokenData> (44) 12 13 42 44 161 163
    '-' <tokenData> (45) 136 146
    '/' <tokenData> (47) 141
    ':' <tokenData> (58) 17 18 19
    ';' <tokenData> (59) 7 8 9 10 11 36 38 49 50 51 86 87 88 89
    '<' <tokenData> (60) 123
    '=' <tokenData> (61) 66 72 78 90 100 105
    '>' <tokenData> (62) 124
    '?' <tokenData> (63) 148
    '[' <tokenData> (91) 21 22 47 152
    ']' <tokenData> (93) 21 23 47 152
    '{' <tokenData> (123) 52
    '}' <tokenData> (125) 52
    error (256) 6 8 9 13 15 18 19 22 23 29 30 31 32 33 38 39 41 44 45 51 67 68 69 70 71 72 73 79 80 83 84 85 88 98 99 100 101 102 103 104 105 106 107 108 109 111 115 118 121 134 139 145 156 158 163
    STATIC <tokenData> (258) 10
    INT <tokenData> (259) 24
    BOOL <tokenData> (260) 25
    CHAR <tokenData> (261) 26
    IF <tokenData> (262) 63 67 68 69 74 75 76 79 80
    THEN <tokenData> (263) 63 69 74 75 76 79 80
    ELSE <tokenData> (264) 63 68 69 76 80
    WHILE <tokenData> (265) 65 70 71 77
    DO <tokenData> (266) 65 66 70 72 77 78
    FOR <tokenData> (267) 66 72 73 78
    TO <tokenData> (268) 81 82 84 85
    BY <tokenData> (269) 82 83 85
    RETURN <tokenData> (270) 86 87 88
    BREAK <tokenData> (271) 89
    OR <tokenData> (272) 110 111
    AND <tokenData> (273) 113 115
    NOT <tokenData> (274) 116 118
    GEQ <tokenData> (275) 125
    LEQ <tokenData> (276) 122
    EQ <tokenData> (277) 126
    NEQ <tokenData> (278) 127
    MAX <tokenData> (279) 130
    MIN <tokenData> (280) 131
    ADDASS <tokenData> (281) 91 101 106
    SUBASS <tokenData> (282) 92 102 107
    MULASS <tokenData> (283) 93 103 108
    DIVASS <tokenData> (284) 94 104 109
    INC <tokenData> (285) 95 98
    DEC <tokenData> (286) 96 99
    CHARCONST <tokenData> (287) 165
    ID <tokenData> (288) 20 21 22 27 28 30 31 32 33 46 47 66 72 78 151 152 157
    NUMCONST <tokenData> (289) 21 164
    STRINGCONST <tokenData> (290) 166
    BOOLCONST <tokenData> (291) 167
    TRUE <tokenData> (292)
    FALSE <tokenData> (293)
    CHSIGN <tokenData> (294)
    SIZEOF <tokenData> (295)


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    program (60)
        on left: 1
        on right: 0
    decList <treeNode> (61)
        on left: 2 3
        on right: 1 2
    decl <treeNode> (62)
        on left: 4 5 6
        on right: 2 3
    varDecl <treeNode> (63)
        on left: 7 8 9
        on right: 4
    scopedVarDecl <treeNode> (64)
        on left: 10 11
        on right: 59
    varDeclList <treeNode> (65)
        on left: 12 13 14 15
        on right: 7 8 10 11 12 13
    varDeclInit <treeNode> (66)
        on left: 16 17 18 19
        on right: 12 14
    varDeclId <treeNode> (67)
        on left: 20 21 22 23
        on right: 16 17 19
    typeSpec <type> (68)
        on left: 24 25 26
        on right: 7 9 10 11 27 29 30 31 40 41
    funDecl <treeNode> (69)
        on left: 27 28 29 30 31 32 33
        on right: 5
    parms <treeNode> (70)
        on left: 34 35
        on right: 27 28 31 33
    parmList <treeNode> (71)
        on left: 36 37 38 39
        on right: 34 36 38
    parmTypeList <treeNode> (72)
        on left: 40 41
        on right: 36 37
    parmIdList <treeNode> (73)
        on left: 42 43 44 45
        on right: 40 42 44
    parmId <treeNode> (74)
        on left: 46 47
        on right: 42 43
    stmt <treeNode> (75)
        on left: 48
        on right: 27 28 53 79
    expStmt <treeNode> (76)
        on left: 49 50 51
        on right: 56
    compoundStmt <treeNode> (77)
        on left: 52
        on right: 55
    stmtList <treeNode> (78)
        on left: 53 54
        on right: 52 53
    otherStmt <treeNode> (79)
        on left: 55 56 57 58
        on right: 64
    localDecls <treeNode> (80)
        on left: 59 60
        on right: 52 59
    selectStmt <treeNode> (81)
        on left: 61 62
        on right: 48
    matched <treeNode> (82)
        on left: 63 64 65 66 67 68 69 70 71 72 73
        on right: 61 63 65 66 68 69 70 72 74 76 80
    unmatched <treeNode> (83)
        on left: 74 75 76 77 78 79 80
        on right: 62 75 76 77 78 80
    iterRange <treeNode> (84)
        on left: 81 82 83 84 85
        on right: 66 78
    returnStmt <treeNode> (85)
        on left: 86 87 88
        on right: 57
    breakStmt <treeNode> (86)
        on left: 89
        on right: 58
    exp <treeNode> (87)
        on left: 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109
        on right: 49 87 90 91 92 93 94 105 106 107 108 109 152 153 161 162
    simpleExp <treeNode> (88)
        on left: 110 111 112
        on right: 17 18 63 65 74 75 76 77 81 82 84 85 97 110 111
    andExp <treeNode> (89)
        on left: 113 114 115
        on right: 110 112 113 115
    unaryRelExp <treeNode> (90)
        on left: 116 117 118
        on right: 113 114 116
    relExp <treeNode> (91)
        on left: 119 120 121
        on right: 117
    relop <tokenData> (92)
        on left: 122 123 124 125 126 127
        on right: 119 121
    minmaxExp <treeNode> (93)
        on left: 128 129
        on right: 119 120 121 128
    minmaxop <tokenData> (94)
        on left: 130 131
        on right: 128
    sumExp <treeNode> (95)
        on left: 132 133 134
        on right: 128 129 132 134
    sumop <tokenData> (96)
        on left: 135 136
        on right: 132 134
    mulExp <treeNode> (97)
        on left: 137 138 139
        on right: 132 133 137 139
    mulop <tokenData> (98)
        on left: 140 141 142
        on right: 137 139
    unaryExp <treeNode> (99)
        on left: 143 144 145
        on right: 137 138 143
    unaryop <tokenData> (100)
        on left: 146 147 148
        on right: 143 145
    factor <treeNode> (101)
        on left: 149 150
        on right: 144
    mutable <treeNode> (102)
        on left: 151 152
        on right: 90 91 92 93 94 95 96 100 101 102 103 104 150
    immutable <treeNode> (103)
        on left: 153 154 155 156
        on right: 149
    call <treeNode> (104)
        on left: 157 158
        on right: 154
    args <treeNode> (105)
        on left: 159 160
        on right: 157
    argList <treeNode> (106)
        on left: 161 162 163
        on right: 159 161 163
    constant <treeNode> (107)
        on left: 164 165 166 167
        on right: 155


State 0

    0 $accept: . program $end

    error  shift, and go to state 1
    INT    shift, and go to state 2
    BOOL   shift, and go to state 3
    CHAR   shift, and go to state 4
    ID     shift, and go to state 5

    program   go to state 6
    decList   go to state 7
    decl      go to state 8
    varDecl   go to state 9
    typeSpec  go to state 10
    funDecl   go to state 11


State 1

    6 decl: error .
    8 varDecl: error . varDeclList ';'

    error  shift, and go to state 12
    ID     shift, and go to state 13

    $end   reduce using rule 6 (decl)
    error  [reduce using rule 6 (decl)]
    INT    reduce using rule 6 (decl)
    BOOL   reduce using rule 6 (decl)
    CHAR   reduce using rule 6 (decl)
    ID     [reduce using rule 6 (decl)]

    varDeclList  go to state 14
    varDeclInit  go to state 15
    varDeclId    go to state 16


State 2

   24 typeSpec: INT .

    $default  reduce using rule 24 (typeSpec)


State 3

   25 typeSpec: BOOL .

    $default  reduce using rule 25 (typeSpec)


State 4

   26 typeSpec: CHAR .

    $default  reduce using rule 26 (typeSpec)


State 5

   28 funDecl: ID . '(' parms ')' stmt
   32        | ID . '(' error
   33        | ID . '(' parms ')' error

    '('  shift, and go to state 17


State 6

    0 $accept: program . $end

    $end  shift, and go to state 18


State 7

    1 program: decList .
    2 decList: decList . decl

    error  shift, and go to state 1
    INT    shift, and go to state 2
    BOOL   shift, and go to state 3
    CHAR   shift, and go to state 4
    ID     shift, and go to state 5

    $end  reduce using rule 1 (program)

    decl      go to state 19
    varDecl   go to state 9
    typeSpec  go to state 10
    funDecl   go to state 11


State 8

    3 decList: decl .

    $default  reduce using rule 3 (decList)


State 9

    4 decl: varDecl .

    $default  reduce using rule 4 (decl)


State 10

    7 varDecl: typeSpec . varDeclList ';'
    9        | typeSpec . error ';'
   27 funDecl: typeSpec . ID '(' parms ')' stmt
   29        | typeSpec . error
   30        | typeSpec . ID '(' error
   31        | typeSpec . ID '(' parms ')' error

    error  shift, and go to state 20
    ID     shift, and go to state 21

    varDeclList  go to state 22
    varDeclInit  go to state 15
    varDeclId    go to state 16


State 11

    5 decl: funDecl .

    $default  reduce using rule 5 (decl)


State 12

   15 varDeclList: error .
   18 varDeclInit: error . ':' simpleExp
   23 varDeclId: error . ']'

    ']'  shift, and go to state 23
    ':'  shift, and go to state 24

    $default  reduce using rule 15 (varDeclList)


State 13

   20 varDeclId: ID .
   21          | ID . '[' NUMCONST ']'
   22          | ID . '[' error

    '['  shift, and go to state 25

    $default  reduce using rule 20 (varDeclId)


State 14

    8 varDecl: error varDeclList . ';'
   12 varDeclList: varDeclList . ',' varDeclInit
   13            | varDeclList . ',' error

    ';'  shift, and go to state 26
    ','  shift, and go to state 27


State 15

   14 varDeclList: varDeclInit .

    $default  reduce using rule 14 (varDeclList)


State 16

   16 varDeclInit: varDeclId .
   17            | varDeclId . ':' simpleExp
   19            | varDeclId . ':' error

    ':'  shift, and go to state 28

    $default  reduce using rule 16 (varDeclInit)


State 17

   28 funDecl: ID '(' . parms ')' stmt
   32        | ID '(' . error
   33        | ID '(' . parms ')' error

    error  shift, and go to state 29
    INT    shift, and go to state 2
    BOOL   shift, and go to state 3
    CHAR   shift, and go to state 4

    ')'  reduce using rule 35 (parms)

    typeSpec      go to state 30
    parms         go to state 31
    parmList      go to state 32
    parmTypeList  go to state 33


State 18

    0 $accept: program $end .

    $default  accept


State 19

    2 decList: decList decl .

    $default  reduce using rule 2 (decList)


State 20

    9 varDecl: typeSpec error . ';'
   15 varDeclList: error .
   18 varDeclInit: error . ':' simpleExp
   23 varDeclId: error . ']'
   29 funDecl: typeSpec error .

    ']'  shift, and go to state 23
    ';'  shift, and go to state 34
    ':'  shift, and go to state 24

    ';'       [reduce using rule 15 (varDeclList)]
    ','       reduce using rule 15 (varDeclList)
    $default  reduce using rule 29 (funDecl)


State 21

   20 varDeclId: ID .
   21          | ID . '[' NUMCONST ']'
   22          | ID . '[' error
   27 funDecl: typeSpec ID . '(' parms ')' stmt
   30        | typeSpec ID . '(' error
   31        | typeSpec ID . '(' parms ')' error

    '('  shift, and go to state 35
    '['  shift, and go to state 25

    $default  reduce using rule 20 (varDeclId)


State 22

    7 varDecl: typeSpec varDeclList . ';'
   12 varDeclList: varDeclList . ',' varDeclInit
   13            | varDeclList . ',' error

    ';'  shift, and go to state 36
    ','  shift, and go to state 27


State 23

   23 varDeclId: error ']' .

    $default  reduce using rule 23 (varDeclId)


State 24

   18 varDeclInit: error ':' . simpleExp

    error        shift, and go to state 37
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    simpleExp    go to state 48
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 25

   21 varDeclId: ID '[' . NUMCONST ']'
   22          | ID '[' . error

    error     shift, and go to state 62
    NUMCONST  shift, and go to state 63


State 26

    8 varDecl: error varDeclList ';' .

    $default  reduce using rule 8 (varDecl)


State 27

   12 varDeclList: varDeclList ',' . varDeclInit
   13            | varDeclList ',' . error

    error  shift, and go to state 64
    ID     shift, and go to state 13

    varDeclInit  go to state 65
    varDeclId    go to state 16


State 28

   17 varDeclInit: varDeclId ':' . simpleExp
   19            | varDeclId ':' . error

    error        shift, and go to state 66
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    simpleExp    go to state 67
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 29

   32 funDecl: ID '(' error .
   39 parmList: error .

    ')'       reduce using rule 39 (parmList)
    ';'       reduce using rule 39 (parmList)
    $default  reduce using rule 32 (funDecl)


State 30

   40 parmTypeList: typeSpec . parmIdList
   41             | typeSpec . error

    error  shift, and go to state 68
    ID     shift, and go to state 69

    parmIdList  go to state 70
    parmId      go to state 71


State 31

   28 funDecl: ID '(' parms . ')' stmt
   33        | ID '(' parms . ')' error

    ')'  shift, and go to state 72


State 32

   34 parms: parmList .
   36 parmList: parmList . ';' parmTypeList
   38         | parmList . ';' error

    ';'  shift, and go to state 73

    $default  reduce using rule 34 (parms)


State 33

   37 parmList: parmTypeList .

    $default  reduce using rule 37 (parmList)


State 34

    9 varDecl: typeSpec error ';' .

    $default  reduce using rule 9 (varDecl)


State 35

   27 funDecl: typeSpec ID '(' . parms ')' stmt
   30        | typeSpec ID '(' . error
   31        | typeSpec ID '(' . parms ')' error

    error  shift, and go to state 74
    INT    shift, and go to state 2
    BOOL   shift, and go to state 3
    CHAR   shift, and go to state 4

    ')'  reduce using rule 35 (parms)

    typeSpec      go to state 30
    parms         go to state 75
    parmList      go to state 32
    parmTypeList  go to state 33


State 36

    7 varDecl: typeSpec varDeclList ';' .

    $default  reduce using rule 7 (varDecl)


State 37

  158 call: error . '('

    '('  shift, and go to state 76


State 38

  116 unaryRelExp: NOT . unaryRelExp
  118            | NOT . error

    error        shift, and go to state 77
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    unaryRelExp  go to state 78
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 39

  165 constant: CHARCONST .

    $default  reduce using rule 165 (constant)


State 40

  151 mutable: ID .
  152        | ID . '[' exp ']'
  157 call: ID . '(' args ')'

    '('  shift, and go to state 79
    '['  shift, and go to state 80

    $default  reduce using rule 151 (mutable)


State 41

  164 constant: NUMCONST .

    $default  reduce using rule 164 (constant)


State 42

  166 constant: STRINGCONST .

    $default  reduce using rule 166 (constant)


State 43

  167 constant: BOOLCONST .

    $default  reduce using rule 167 (constant)


State 44

  146 unaryop: '-' .

    $default  reduce using rule 146 (unaryop)


State 45

  147 unaryop: '*' .

    $default  reduce using rule 147 (unaryop)


State 46

  153 immutable: '(' . exp ')'
  156          | '(' . error

    error        shift, and go to state 81
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 82
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 47

  148 unaryop: '?' .

    $default  reduce using rule 148 (unaryop)


State 48

   18 varDeclInit: error ':' simpleExp .
  110 simpleExp: simpleExp . OR andExp
  111          | simpleExp . OR error

    OR  shift, and go to state 85

    $default  reduce using rule 18 (varDeclInit)


State 49

  112 simpleExp: andExp .
  113 andExp: andExp . AND unaryRelExp
  115       | andExp . AND error

    AND  shift, and go to state 86

    $default  reduce using rule 112 (simpleExp)


State 50

  114 andExp: unaryRelExp .

    $default  reduce using rule 114 (andExp)


State 51

  117 unaryRelExp: relExp .

    $default  reduce using rule 117 (unaryRelExp)


State 52

  119 relExp: minmaxExp . relop minmaxExp
  120       | minmaxExp .
  121       | minmaxExp . relop error
  128 minmaxExp: minmaxExp . minmaxop sumExp

    GEQ  shift, and go to state 87
    LEQ  shift, and go to state 88
    EQ   shift, and go to state 89
    NEQ  shift, and go to state 90
    MAX  shift, and go to state 91
    MIN  shift, and go to state 92
    '>'  shift, and go to state 93
    '<'  shift, and go to state 94

    $default  reduce using rule 120 (relExp)

    relop     go to state 95
    minmaxop  go to state 96


State 53

  129 minmaxExp: sumExp .
  132 sumExp: sumExp . sumop mulExp
  134       | sumExp . sumop error

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98

    $default  reduce using rule 129 (minmaxExp)

    sumop  go to state 99


State 54

  133 sumExp: mulExp .
  137 mulExp: mulExp . mulop unaryExp
  139       | mulExp . mulop error

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    '%'  shift, and go to state 102

    $default  reduce using rule 133 (sumExp)

    mulop  go to state 103


State 55

  138 mulExp: unaryExp .

    $default  reduce using rule 138 (mulExp)


State 56

  143 unaryExp: unaryop . unaryExp
  145         | unaryop . error

    error        shift, and go to state 104
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    unaryExp   go to state 105
    unaryop    go to state 56
    factor     go to state 57
    mutable    go to state 58
    immutable  go to state 59
    call       go to state 60
    constant   go to state 61


State 57

  144 unaryExp: factor .

    $default  reduce using rule 144 (unaryExp)


State 58

  150 factor: mutable .

    $default  reduce using rule 150 (factor)


State 59

  149 factor: immutable .

    $default  reduce using rule 149 (factor)


State 60

  154 immutable: call .

    $default  reduce using rule 154 (immutable)


State 61

  155 immutable: constant .

    $default  reduce using rule 155 (immutable)


State 62

   22 varDeclId: ID '[' error .

    $default  reduce using rule 22 (varDeclId)


State 63

   21 varDeclId: ID '[' NUMCONST . ']'

    ']'  shift, and go to state 106


State 64

   13 varDeclList: varDeclList ',' error .
   18 varDeclInit: error . ':' simpleExp
   23 varDeclId: error . ']'

    ']'  shift, and go to state 23
    ':'  shift, and go to state 24

    $default  reduce using rule 13 (varDeclList)


State 65

   12 varDeclList: varDeclList ',' varDeclInit .

    $default  reduce using rule 12 (varDeclList)


State 66

   19 varDeclInit: varDeclId ':' error .
  158 call: error . '('

    '('  shift, and go to state 76

    $default  reduce using rule 19 (varDeclInit)


State 67

   17 varDeclInit: varDeclId ':' simpleExp .
  110 simpleExp: simpleExp . OR andExp
  111          | simpleExp . OR error

    OR  shift, and go to state 85

    $default  reduce using rule 17 (varDeclInit)


State 68

   41 parmTypeList: typeSpec error .
   45 parmIdList: error .

    ')'       reduce using rule 41 (parmTypeList)
    ')'       [reduce using rule 45 (parmIdList)]
    ';'       reduce using rule 41 (parmTypeList)
    ';'       [reduce using rule 45 (parmIdList)]
    ','       reduce using rule 45 (parmIdList)
    $default  reduce using rule 41 (parmTypeList)


State 69

   46 parmId: ID .
   47       | ID . '[' ']'

    '['  shift, and go to state 107

    $default  reduce using rule 46 (parmId)


State 70

   40 parmTypeList: typeSpec parmIdList .
   42 parmIdList: parmIdList . ',' parmId
   44           | parmIdList . ',' error

    ','  shift, and go to state 108

    $default  reduce using rule 40 (parmTypeList)


State 71

   43 parmIdList: parmId .

    $default  reduce using rule 43 (parmIdList)


State 72

   28 funDecl: ID '(' parms ')' . stmt
   33        | ID '(' parms ')' . error

    error        shift, and go to state 109
    IF           shift, and go to state 110
    WHILE        shift, and go to state 111
    FOR          shift, and go to state 112
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    stmt          go to state 117
    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    selectStmt    go to state 121
    matched       go to state 122
    unmatched     go to state 123
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 73

   36 parmList: parmList ';' . parmTypeList
   38         | parmList ';' . error

    error  shift, and go to state 127
    INT    shift, and go to state 2
    BOOL   shift, and go to state 3
    CHAR   shift, and go to state 4

    typeSpec      go to state 30
    parmTypeList  go to state 128


State 74

   30 funDecl: typeSpec ID '(' error .
   39 parmList: error .

    ')'       reduce using rule 39 (parmList)
    ';'       reduce using rule 39 (parmList)
    $default  reduce using rule 30 (funDecl)


State 75

   27 funDecl: typeSpec ID '(' parms . ')' stmt
   31        | typeSpec ID '(' parms . ')' error

    ')'  shift, and go to state 129


State 76

  158 call: error '(' .

    $default  reduce using rule 158 (call)


State 77

  118 unaryRelExp: NOT error .
  158 call: error . '('

    '('  shift, and go to state 76

    $default  reduce using rule 118 (unaryRelExp)


State 78

  116 unaryRelExp: NOT unaryRelExp .

    $default  reduce using rule 116 (unaryRelExp)


State 79

  157 call: ID '(' . args ')'

    error        shift, and go to state 130
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    ')'  reduce using rule 160 (args)

    exp          go to state 131
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    args         go to state 132
    argList      go to state 133
    constant     go to state 61


State 80

  152 mutable: ID '[' . exp ']'

    error        shift, and go to state 130
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 134
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 81

   98 exp: error . INC
   99    | error . DEC
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  156 immutable: '(' error .
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    '='     shift, and go to state 141

    $default  reduce using rule 156 (immutable)


State 82

  153 immutable: '(' exp . ')'

    ')'  shift, and go to state 142


State 83

   97 exp: simpleExp .
  110 simpleExp: simpleExp . OR andExp
  111          | simpleExp . OR error

    OR  shift, and go to state 85

    $default  reduce using rule 97 (exp)


State 84

   90 exp: mutable . '=' exp
   91    | mutable . ADDASS exp
   92    | mutable . SUBASS exp
   93    | mutable . MULASS exp
   94    | mutable . DIVASS exp
   95    | mutable . INC
   96    | mutable . DEC
  100    | mutable . '=' error
  101    | mutable . ADDASS error
  102    | mutable . SUBASS error
  103    | mutable . MULASS error
  104    | mutable . DIVASS error
  150 factor: mutable .

    ADDASS  shift, and go to state 143
    SUBASS  shift, and go to state 144
    MULASS  shift, and go to state 145
    DIVASS  shift, and go to state 146
    INC     shift, and go to state 147
    DEC     shift, and go to state 148
    '='     shift, and go to state 149

    $default  reduce using rule 150 (factor)


State 85

  110 simpleExp: simpleExp OR . andExp
  111          | simpleExp OR . error

    error        shift, and go to state 150
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    andExp       go to state 151
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 86

  113 andExp: andExp AND . unaryRelExp
  115       | andExp AND . error

    error        shift, and go to state 152
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    unaryRelExp  go to state 153
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 87

  125 relop: GEQ .

    $default  reduce using rule 125 (relop)


State 88

  122 relop: LEQ .

    $default  reduce using rule 122 (relop)


State 89

  126 relop: EQ .

    $default  reduce using rule 126 (relop)


State 90

  127 relop: NEQ .

    $default  reduce using rule 127 (relop)


State 91

  130 minmaxop: MAX .

    $default  reduce using rule 130 (minmaxop)


State 92

  131 minmaxop: MIN .

    $default  reduce using rule 131 (minmaxop)


State 93

  124 relop: '>' .

    $default  reduce using rule 124 (relop)


State 94

  123 relop: '<' .

    $default  reduce using rule 123 (relop)


State 95

  119 relExp: minmaxExp relop . minmaxExp
  121       | minmaxExp relop . error

    error        shift, and go to state 154
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    minmaxExp  go to state 155
    sumExp     go to state 53
    mulExp     go to state 54
    unaryExp   go to state 55
    unaryop    go to state 56
    factor     go to state 57
    mutable    go to state 58
    immutable  go to state 59
    call       go to state 60
    constant   go to state 61


State 96

  128 minmaxExp: minmaxExp minmaxop . sumExp

    error        shift, and go to state 37
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    sumExp     go to state 156
    mulExp     go to state 54
    unaryExp   go to state 55
    unaryop    go to state 56
    factor     go to state 57
    mutable    go to state 58
    immutable  go to state 59
    call       go to state 60
    constant   go to state 61


State 97

  135 sumop: '+' .

    $default  reduce using rule 135 (sumop)


State 98

  136 sumop: '-' .

    $default  reduce using rule 136 (sumop)


State 99

  132 sumExp: sumExp sumop . mulExp
  134       | sumExp sumop . error

    error        shift, and go to state 157
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    mulExp     go to state 158
    unaryExp   go to state 55
    unaryop    go to state 56
    factor     go to state 57
    mutable    go to state 58
    immutable  go to state 59
    call       go to state 60
    constant   go to state 61


State 100

  140 mulop: '*' .

    $default  reduce using rule 140 (mulop)


State 101

  141 mulop: '/' .

    $default  reduce using rule 141 (mulop)


State 102

  142 mulop: '%' .

    $default  reduce using rule 142 (mulop)


State 103

  137 mulExp: mulExp mulop . unaryExp
  139       | mulExp mulop . error

    error        shift, and go to state 159
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    unaryExp   go to state 160
    unaryop    go to state 56
    factor     go to state 57
    mutable    go to state 58
    immutable  go to state 59
    call       go to state 60
    constant   go to state 61


State 104

  145 unaryExp: unaryop error .
  158 call: error . '('

    '('  shift, and go to state 76

    $default  reduce using rule 145 (unaryExp)


State 105

  143 unaryExp: unaryop unaryExp .

    $default  reduce using rule 143 (unaryExp)


State 106

   21 varDeclId: ID '[' NUMCONST ']' .

    $default  reduce using rule 21 (varDeclId)


State 107

   47 parmId: ID '[' . ']'

    ']'  shift, and go to state 161


State 108

   42 parmIdList: parmIdList ',' . parmId
   44           | parmIdList ',' . error

    error  shift, and go to state 162
    ID     shift, and go to state 69

    parmId  go to state 163


State 109

   33 funDecl: ID '(' parms ')' error .
   51 expStmt: error . ';'
   98 exp: error . INC
   99    | error . DEC
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    ';'     shift, and go to state 164
    '='     shift, and go to state 141

    $default  reduce using rule 33 (funDecl)


State 110

   63 matched: IF . simpleExp THEN matched ELSE matched
   67        | IF . error
   68        | IF . error ELSE matched
   69        | IF . error THEN matched ELSE matched
   74 unmatched: IF . simpleExp THEN matched
   75          | IF . simpleExp THEN unmatched
   76          | IF . simpleExp THEN matched ELSE unmatched
   79          | IF . error THEN stmt
   80          | IF . error THEN matched ELSE unmatched

    error        shift, and go to state 165
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    simpleExp    go to state 166
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 111

   65 matched: WHILE . simpleExp DO matched
   70        | WHILE . error DO matched
   71        | WHILE . error
   77 unmatched: WHILE . simpleExp DO unmatched

    error        shift, and go to state 167
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    simpleExp    go to state 168
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 112

   66 matched: FOR . ID '=' iterRange DO matched
   72        | FOR . ID '=' error DO matched
   73        | FOR . error
   78 unmatched: FOR . ID '=' iterRange DO unmatched

    error  shift, and go to state 169
    ID     shift, and go to state 170


State 113

   86 returnStmt: RETURN . ';'
   87           | RETURN . exp ';'
   88           | RETURN . error ';'

    error        shift, and go to state 171
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    ';'          shift, and go to state 172
    '?'          shift, and go to state 47

    exp          go to state 173
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 114

   89 breakStmt: BREAK . ';'

    ';'  shift, and go to state 174


State 115

   52 compoundStmt: '{' . localDecls stmtList '}'

    $default  reduce using rule 60 (localDecls)

    localDecls  go to state 175


State 116

   50 expStmt: ';' .

    $default  reduce using rule 50 (expStmt)


State 117

   28 funDecl: ID '(' parms ')' stmt .

    $default  reduce using rule 28 (funDecl)


State 118

   56 otherStmt: expStmt .

    $default  reduce using rule 56 (otherStmt)


State 119

   55 otherStmt: compoundStmt .

    $default  reduce using rule 55 (otherStmt)


State 120

   64 matched: otherStmt .

    $default  reduce using rule 64 (matched)


State 121

   48 stmt: selectStmt .

    $default  reduce using rule 48 (stmt)


State 122

   61 selectStmt: matched .

    $default  reduce using rule 61 (selectStmt)


State 123

   62 selectStmt: unmatched .

    $default  reduce using rule 62 (selectStmt)


State 124

   57 otherStmt: returnStmt .

    $default  reduce using rule 57 (otherStmt)


State 125

   58 otherStmt: breakStmt .

    $default  reduce using rule 58 (otherStmt)


State 126

   49 expStmt: exp . ';'

    ';'  shift, and go to state 176


State 127

   38 parmList: parmList ';' error .

    $default  reduce using rule 38 (parmList)


State 128

   36 parmList: parmList ';' parmTypeList .

    $default  reduce using rule 36 (parmList)


State 129

   27 funDecl: typeSpec ID '(' parms ')' . stmt
   31        | typeSpec ID '(' parms ')' . error

    error        shift, and go to state 177
    IF           shift, and go to state 110
    WHILE        shift, and go to state 111
    FOR          shift, and go to state 112
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    stmt          go to state 178
    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    selectStmt    go to state 121
    matched       go to state 122
    unmatched     go to state 123
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 130

   98 exp: error . INC
   99    | error . DEC
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    '='     shift, and go to state 141


State 131

  162 argList: exp .

    $default  reduce using rule 162 (argList)


State 132

  157 call: ID '(' args . ')'

    ')'  shift, and go to state 179


State 133

  159 args: argList .
  161 argList: argList . ',' exp
  163        | argList . ',' error

    ','  shift, and go to state 180

    $default  reduce using rule 159 (args)


State 134

  152 mutable: ID '[' exp . ']'

    ']'  shift, and go to state 181


State 135

  106 exp: error ADDASS . exp

    error        shift, and go to state 130
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 182
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 136

  107 exp: error SUBASS . exp

    error        shift, and go to state 130
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 183
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 137

  108 exp: error MULASS . exp

    error        shift, and go to state 130
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 184
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 138

  109 exp: error DIVASS . exp

    error        shift, and go to state 130
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 185
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 139

   98 exp: error INC .

    $default  reduce using rule 98 (exp)


State 140

   99 exp: error DEC .

    $default  reduce using rule 99 (exp)


State 141

  105 exp: error '=' . exp

    error        shift, and go to state 130
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 186
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 142

  153 immutable: '(' exp ')' .

    $default  reduce using rule 153 (immutable)


State 143

   91 exp: mutable ADDASS . exp
  101    | mutable ADDASS . error

    error        shift, and go to state 187
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 188
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 144

   92 exp: mutable SUBASS . exp
  102    | mutable SUBASS . error

    error        shift, and go to state 189
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 190
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 145

   93 exp: mutable MULASS . exp
  103    | mutable MULASS . error

    error        shift, and go to state 191
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 192
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 146

   94 exp: mutable DIVASS . exp
  104    | mutable DIVASS . error

    error        shift, and go to state 193
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 194
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 147

   95 exp: mutable INC .

    $default  reduce using rule 95 (exp)


State 148

   96 exp: mutable DEC .

    $default  reduce using rule 96 (exp)


State 149

   90 exp: mutable '=' . exp
  100    | mutable '=' . error

    error        shift, and go to state 195
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 196
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 150

  111 simpleExp: simpleExp OR error .
  158 call: error . '('

    '('  shift, and go to state 76

    $default  reduce using rule 111 (simpleExp)


State 151

  110 simpleExp: simpleExp OR andExp .
  113 andExp: andExp . AND unaryRelExp
  115       | andExp . AND error

    AND  shift, and go to state 86

    $default  reduce using rule 110 (simpleExp)


State 152

  115 andExp: andExp AND error .
  158 call: error . '('

    '('  shift, and go to state 76

    $default  reduce using rule 115 (andExp)


State 153

  113 andExp: andExp AND unaryRelExp .

    $default  reduce using rule 113 (andExp)


State 154

  121 relExp: minmaxExp relop error .
  158 call: error . '('

    '('  shift, and go to state 76

    $default  reduce using rule 121 (relExp)


State 155

  119 relExp: minmaxExp relop minmaxExp .
  128 minmaxExp: minmaxExp . minmaxop sumExp

    MAX  shift, and go to state 91
    MIN  shift, and go to state 92

    $default  reduce using rule 119 (relExp)

    minmaxop  go to state 96


State 156

  128 minmaxExp: minmaxExp minmaxop sumExp .
  132 sumExp: sumExp . sumop mulExp
  134       | sumExp . sumop error

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98

    $default  reduce using rule 128 (minmaxExp)

    sumop  go to state 99


State 157

  134 sumExp: sumExp sumop error .
  158 call: error . '('

    '('  shift, and go to state 76

    $default  reduce using rule 134 (sumExp)


State 158

  132 sumExp: sumExp sumop mulExp .
  137 mulExp: mulExp . mulop unaryExp
  139       | mulExp . mulop error

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    '%'  shift, and go to state 102

    $default  reduce using rule 132 (sumExp)

    mulop  go to state 103


State 159

  139 mulExp: mulExp mulop error .
  158 call: error . '('

    '('  shift, and go to state 76

    $default  reduce using rule 139 (mulExp)


State 160

  137 mulExp: mulExp mulop unaryExp .

    $default  reduce using rule 137 (mulExp)


State 161

   47 parmId: ID '[' ']' .

    $default  reduce using rule 47 (parmId)


State 162

   44 parmIdList: parmIdList ',' error .

    $default  reduce using rule 44 (parmIdList)


State 163

   42 parmIdList: parmIdList ',' parmId .

    $default  reduce using rule 42 (parmIdList)


State 164

   51 expStmt: error ';' .

    $default  reduce using rule 51 (expStmt)


State 165

   67 matched: IF error .
   68        | IF error . ELSE matched
   69        | IF error . THEN matched ELSE matched
   79 unmatched: IF error . THEN stmt
   80          | IF error . THEN matched ELSE unmatched
  158 call: error . '('

    THEN  shift, and go to state 197
    ELSE  shift, and go to state 198
    '('   shift, and go to state 76

    ELSE      [reduce using rule 67 (matched)]
    '('       [reduce using rule 67 (matched)]
    $default  reduce using rule 67 (matched)


State 166

   63 matched: IF simpleExp . THEN matched ELSE matched
   74 unmatched: IF simpleExp . THEN matched
   75          | IF simpleExp . THEN unmatched
   76          | IF simpleExp . THEN matched ELSE unmatched
  110 simpleExp: simpleExp . OR andExp
  111          | simpleExp . OR error

    THEN  shift, and go to state 199
    OR    shift, and go to state 85


State 167

   70 matched: WHILE error . DO matched
   71        | WHILE error .
  158 call: error . '('

    DO   shift, and go to state 200
    '('  shift, and go to state 76

    '('       [reduce using rule 71 (matched)]
    $default  reduce using rule 71 (matched)


State 168

   65 matched: WHILE simpleExp . DO matched
   77 unmatched: WHILE simpleExp . DO unmatched
  110 simpleExp: simpleExp . OR andExp
  111          | simpleExp . OR error

    DO  shift, and go to state 201
    OR  shift, and go to state 85


State 169

   73 matched: FOR error .

    $default  reduce using rule 73 (matched)


State 170

   66 matched: FOR ID . '=' iterRange DO matched
   72        | FOR ID . '=' error DO matched
   78 unmatched: FOR ID . '=' iterRange DO unmatched

    '='  shift, and go to state 202


State 171

   88 returnStmt: RETURN error . ';'
   98 exp: error . INC
   99    | error . DEC
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    ';'     shift, and go to state 203
    '='     shift, and go to state 141


State 172

   86 returnStmt: RETURN ';' .

    $default  reduce using rule 86 (returnStmt)


State 173

   87 returnStmt: RETURN exp . ';'

    ';'  shift, and go to state 204


State 174

   89 breakStmt: BREAK ';' .

    $default  reduce using rule 89 (breakStmt)


State 175

   52 compoundStmt: '{' localDecls . stmtList '}'
   59 localDecls: localDecls . scopedVarDecl

    STATIC  shift, and go to state 205
    INT     shift, and go to state 2
    BOOL    shift, and go to state 3
    CHAR    shift, and go to state 4

    $default  reduce using rule 54 (stmtList)

    scopedVarDecl  go to state 206
    typeSpec       go to state 207
    stmtList       go to state 208


State 176

   49 expStmt: exp ';' .

    $default  reduce using rule 49 (expStmt)


State 177

   31 funDecl: typeSpec ID '(' parms ')' error .
   51 expStmt: error . ';'
   98 exp: error . INC
   99    | error . DEC
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    ';'     shift, and go to state 164
    '='     shift, and go to state 141

    $default  reduce using rule 31 (funDecl)


State 178

   27 funDecl: typeSpec ID '(' parms ')' stmt .

    $default  reduce using rule 27 (funDecl)


State 179

  157 call: ID '(' args ')' .

    $default  reduce using rule 157 (call)


State 180

  161 argList: argList ',' . exp
  163        | argList ',' . error

    error        shift, and go to state 209
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    exp          go to state 210
    simpleExp    go to state 83
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 84
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 181

  152 mutable: ID '[' exp ']' .

    $default  reduce using rule 152 (mutable)


State 182

  106 exp: error ADDASS exp .

    $default  reduce using rule 106 (exp)


State 183

  107 exp: error SUBASS exp .

    $default  reduce using rule 107 (exp)


State 184

  108 exp: error MULASS exp .

    $default  reduce using rule 108 (exp)


State 185

  109 exp: error DIVASS exp .

    $default  reduce using rule 109 (exp)


State 186

  105 exp: error '=' exp .

    $default  reduce using rule 105 (exp)


State 187

   98 exp: error . INC
   99    | error . DEC
  101    | mutable ADDASS error .
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    '='     shift, and go to state 141

    $default  reduce using rule 101 (exp)


State 188

   91 exp: mutable ADDASS exp .

    $default  reduce using rule 91 (exp)


State 189

   98 exp: error . INC
   99    | error . DEC
  102    | mutable SUBASS error .
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    '='     shift, and go to state 141

    $default  reduce using rule 102 (exp)


State 190

   92 exp: mutable SUBASS exp .

    $default  reduce using rule 92 (exp)


State 191

   98 exp: error . INC
   99    | error . DEC
  103    | mutable MULASS error .
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    '='     shift, and go to state 141

    $default  reduce using rule 103 (exp)


State 192

   93 exp: mutable MULASS exp .

    $default  reduce using rule 93 (exp)


State 193

   98 exp: error . INC
   99    | error . DEC
  104    | mutable DIVASS error .
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    '='     shift, and go to state 141

    $default  reduce using rule 104 (exp)


State 194

   94 exp: mutable DIVASS exp .

    $default  reduce using rule 94 (exp)


State 195

   98 exp: error . INC
   99    | error . DEC
  100    | mutable '=' error .
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    '='     shift, and go to state 141

    $default  reduce using rule 100 (exp)


State 196

   90 exp: mutable '=' exp .

    $default  reduce using rule 90 (exp)


State 197

   69 matched: IF error THEN . matched ELSE matched
   79 unmatched: IF error THEN . stmt
   80          | IF error THEN . matched ELSE unmatched

    error        shift, and go to state 211
    IF           shift, and go to state 110
    WHILE        shift, and go to state 111
    FOR          shift, and go to state 112
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    stmt          go to state 212
    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    selectStmt    go to state 121
    matched       go to state 213
    unmatched     go to state 123
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 198

   68 matched: IF error ELSE . matched

    error        shift, and go to state 211
    IF           shift, and go to state 214
    WHILE        shift, and go to state 215
    FOR          shift, and go to state 216
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 217
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 199

   63 matched: IF simpleExp THEN . matched ELSE matched
   74 unmatched: IF simpleExp THEN . matched
   75          | IF simpleExp THEN . unmatched
   76          | IF simpleExp THEN . matched ELSE unmatched

    error        shift, and go to state 211
    IF           shift, and go to state 110
    WHILE        shift, and go to state 111
    FOR          shift, and go to state 112
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 218
    unmatched     go to state 219
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 200

   70 matched: WHILE error DO . matched

    error        shift, and go to state 211
    IF           shift, and go to state 214
    WHILE        shift, and go to state 215
    FOR          shift, and go to state 216
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 220
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 201

   65 matched: WHILE simpleExp DO . matched
   77 unmatched: WHILE simpleExp DO . unmatched

    error        shift, and go to state 211
    IF           shift, and go to state 110
    WHILE        shift, and go to state 111
    FOR          shift, and go to state 112
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 221
    unmatched     go to state 222
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 202

   66 matched: FOR ID '=' . iterRange DO matched
   72        | FOR ID '=' . error DO matched
   78 unmatched: FOR ID '=' . iterRange DO unmatched

    error        shift, and go to state 223
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    iterRange    go to state 224
    simpleExp    go to state 225
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 203

   88 returnStmt: RETURN error ';' .

    $default  reduce using rule 88 (returnStmt)


State 204

   87 returnStmt: RETURN exp ';' .

    $default  reduce using rule 87 (returnStmt)


State 205

   10 scopedVarDecl: STATIC . typeSpec varDeclList ';'

    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    typeSpec  go to state 226


State 206

   59 localDecls: localDecls scopedVarDecl .

    $default  reduce using rule 59 (localDecls)


State 207

   11 scopedVarDecl: typeSpec . varDeclList ';'

    error  shift, and go to state 12
    ID     shift, and go to state 13

    varDeclList  go to state 227
    varDeclInit  go to state 15
    varDeclId    go to state 16


State 208

   52 compoundStmt: '{' localDecls stmtList . '}'
   53 stmtList: stmtList . stmt

    error        shift, and go to state 211
    IF           shift, and go to state 110
    WHILE        shift, and go to state 111
    FOR          shift, and go to state 112
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '}'          shift, and go to state 228
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    stmt          go to state 229
    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    selectStmt    go to state 121
    matched       go to state 122
    unmatched     go to state 123
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 209

   98 exp: error . INC
   99    | error . DEC
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('
  163 argList: argList ',' error .

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    '='     shift, and go to state 141

    $default  reduce using rule 163 (argList)


State 210

  161 argList: argList ',' exp .

    $default  reduce using rule 161 (argList)


State 211

   51 expStmt: error . ';'
   98 exp: error . INC
   99    | error . DEC
  105    | error . '=' exp
  106    | error . ADDASS exp
  107    | error . SUBASS exp
  108    | error . MULASS exp
  109    | error . DIVASS exp
  158 call: error . '('

    ADDASS  shift, and go to state 135
    SUBASS  shift, and go to state 136
    MULASS  shift, and go to state 137
    DIVASS  shift, and go to state 138
    INC     shift, and go to state 139
    DEC     shift, and go to state 140
    '('     shift, and go to state 76
    ';'     shift, and go to state 164
    '='     shift, and go to state 141


State 212

   79 unmatched: IF error THEN stmt .

    $default  reduce using rule 79 (unmatched)


State 213

   61 selectStmt: matched .
   69 matched: IF error THEN matched . ELSE matched
   80 unmatched: IF error THEN matched . ELSE unmatched

    ELSE  shift, and go to state 230

    $default  reduce using rule 61 (selectStmt)


State 214

   63 matched: IF . simpleExp THEN matched ELSE matched
   67        | IF . error
   68        | IF . error ELSE matched
   69        | IF . error THEN matched ELSE matched

    error        shift, and go to state 231
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    simpleExp    go to state 232
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 215

   65 matched: WHILE . simpleExp DO matched
   70        | WHILE . error DO matched
   71        | WHILE . error

    error        shift, and go to state 167
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    simpleExp    go to state 233
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 216

   66 matched: FOR . ID '=' iterRange DO matched
   72        | FOR . ID '=' error DO matched
   73        | FOR . error

    error  shift, and go to state 169
    ID     shift, and go to state 234


State 217

   68 matched: IF error ELSE matched .

    $default  reduce using rule 68 (matched)


State 218

   63 matched: IF simpleExp THEN matched . ELSE matched
   74 unmatched: IF simpleExp THEN matched .
   76          | IF simpleExp THEN matched . ELSE unmatched

    ELSE  shift, and go to state 235

    $default  reduce using rule 74 (unmatched)


State 219

   75 unmatched: IF simpleExp THEN unmatched .

    $default  reduce using rule 75 (unmatched)


State 220

   70 matched: WHILE error DO matched .

    $default  reduce using rule 70 (matched)


State 221

   65 matched: WHILE simpleExp DO matched .

    $default  reduce using rule 65 (matched)


State 222

   77 unmatched: WHILE simpleExp DO unmatched .

    $default  reduce using rule 77 (unmatched)


State 223

   72 matched: FOR ID '=' error . DO matched
   83 iterRange: error . BY error
  158 call: error . '('

    DO   shift, and go to state 236
    BY   shift, and go to state 237
    '('  shift, and go to state 76


State 224

   66 matched: FOR ID '=' iterRange . DO matched
   78 unmatched: FOR ID '=' iterRange . DO unmatched

    DO  shift, and go to state 238


State 225

   81 iterRange: simpleExp . TO simpleExp
   82          | simpleExp . TO simpleExp BY simpleExp
   84          | simpleExp . TO error
   85          | simpleExp . TO simpleExp BY error
  110 simpleExp: simpleExp . OR andExp
  111          | simpleExp . OR error

    TO  shift, and go to state 239
    OR  shift, and go to state 85


State 226

   10 scopedVarDecl: STATIC typeSpec . varDeclList ';'

    error  shift, and go to state 12
    ID     shift, and go to state 13

    varDeclList  go to state 240
    varDeclInit  go to state 15
    varDeclId    go to state 16


State 227

   11 scopedVarDecl: typeSpec varDeclList . ';'
   12 varDeclList: varDeclList . ',' varDeclInit
   13            | varDeclList . ',' error

    ';'  shift, and go to state 241
    ','  shift, and go to state 27


State 228

   52 compoundStmt: '{' localDecls stmtList '}' .

    $default  reduce using rule 52 (compoundStmt)


State 229

   53 stmtList: stmtList stmt .

    $default  reduce using rule 53 (stmtList)


State 230

   69 matched: IF error THEN matched ELSE . matched
   80 unmatched: IF error THEN matched ELSE . unmatched

    error        shift, and go to state 211
    IF           shift, and go to state 110
    WHILE        shift, and go to state 111
    FOR          shift, and go to state 112
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 242
    unmatched     go to state 243
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 231

   67 matched: IF error .
   68        | IF error . ELSE matched
   69        | IF error . THEN matched ELSE matched
  158 call: error . '('

    THEN  shift, and go to state 244
    ELSE  shift, and go to state 198
    '('   shift, and go to state 76

    ELSE      [reduce using rule 67 (matched)]
    '('       [reduce using rule 67 (matched)]
    $default  reduce using rule 67 (matched)


State 232

   63 matched: IF simpleExp . THEN matched ELSE matched
  110 simpleExp: simpleExp . OR andExp
  111          | simpleExp . OR error

    THEN  shift, and go to state 245
    OR    shift, and go to state 85


State 233

   65 matched: WHILE simpleExp . DO matched
  110 simpleExp: simpleExp . OR andExp
  111          | simpleExp . OR error

    DO  shift, and go to state 246
    OR  shift, and go to state 85


State 234

   66 matched: FOR ID . '=' iterRange DO matched
   72        | FOR ID . '=' error DO matched

    '='  shift, and go to state 247


State 235

   63 matched: IF simpleExp THEN matched ELSE . matched
   76 unmatched: IF simpleExp THEN matched ELSE . unmatched

    error        shift, and go to state 211
    IF           shift, and go to state 110
    WHILE        shift, and go to state 111
    FOR          shift, and go to state 112
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 248
    unmatched     go to state 249
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 236

   72 matched: FOR ID '=' error DO . matched

    error        shift, and go to state 211
    IF           shift, and go to state 214
    WHILE        shift, and go to state 215
    FOR          shift, and go to state 216
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 250
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 237

   83 iterRange: error BY . error

    error  shift, and go to state 251


State 238

   66 matched: FOR ID '=' iterRange DO . matched
   78 unmatched: FOR ID '=' iterRange DO . unmatched

    error        shift, and go to state 211
    IF           shift, and go to state 110
    WHILE        shift, and go to state 111
    FOR          shift, and go to state 112
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 252
    unmatched     go to state 253
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 239

   81 iterRange: simpleExp TO . simpleExp
   82          | simpleExp TO . simpleExp BY simpleExp
   84          | simpleExp TO . error
   85          | simpleExp TO . simpleExp BY error

    error        shift, and go to state 254
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    simpleExp    go to state 255
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 240

   10 scopedVarDecl: STATIC typeSpec varDeclList . ';'
   12 varDeclList: varDeclList . ',' varDeclInit
   13            | varDeclList . ',' error

    ';'  shift, and go to state 256
    ','  shift, and go to state 27


State 241

   11 scopedVarDecl: typeSpec varDeclList ';' .

    $default  reduce using rule 11 (scopedVarDecl)


State 242

   69 matched: IF error THEN matched ELSE matched .

    $default  reduce using rule 69 (matched)


State 243

   80 unmatched: IF error THEN matched ELSE unmatched .

    $default  reduce using rule 80 (unmatched)


State 244

   69 matched: IF error THEN . matched ELSE matched

    error        shift, and go to state 211
    IF           shift, and go to state 214
    WHILE        shift, and go to state 215
    FOR          shift, and go to state 216
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 257
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 245

   63 matched: IF simpleExp THEN . matched ELSE matched

    error        shift, and go to state 211
    IF           shift, and go to state 214
    WHILE        shift, and go to state 215
    FOR          shift, and go to state 216
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 258
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 246

   65 matched: WHILE simpleExp DO . matched

    error        shift, and go to state 211
    IF           shift, and go to state 214
    WHILE        shift, and go to state 215
    FOR          shift, and go to state 216
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 221
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 247

   66 matched: FOR ID '=' . iterRange DO matched
   72        | FOR ID '=' . error DO matched

    error        shift, and go to state 223
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    iterRange    go to state 259
    simpleExp    go to state 225
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 248

   63 matched: IF simpleExp THEN matched ELSE matched .

    $default  reduce using rule 63 (matched)


State 249

   76 unmatched: IF simpleExp THEN matched ELSE unmatched .

    $default  reduce using rule 76 (unmatched)


State 250

   72 matched: FOR ID '=' error DO matched .

    $default  reduce using rule 72 (matched)


State 251

   83 iterRange: error BY error .

    $default  reduce using rule 83 (iterRange)


State 252

   66 matched: FOR ID '=' iterRange DO matched .

    $default  reduce using rule 66 (matched)


State 253

   78 unmatched: FOR ID '=' iterRange DO unmatched .

    $default  reduce using rule 78 (unmatched)


State 254

   84 iterRange: simpleExp TO error .
  158 call: error . '('

    '('  shift, and go to state 76

    $default  reduce using rule 84 (iterRange)


State 255

   81 iterRange: simpleExp TO simpleExp .
   82          | simpleExp TO simpleExp . BY simpleExp
   85          | simpleExp TO simpleExp . BY error
  110 simpleExp: simpleExp . OR andExp
  111          | simpleExp . OR error

    BY  shift, and go to state 260
    OR  shift, and go to state 85

    $default  reduce using rule 81 (iterRange)


State 256

   10 scopedVarDecl: STATIC typeSpec varDeclList ';' .

    $default  reduce using rule 10 (scopedVarDecl)


State 257

   69 matched: IF error THEN matched . ELSE matched

    ELSE  shift, and go to state 261


State 258

   63 matched: IF simpleExp THEN matched . ELSE matched

    ELSE  shift, and go to state 262


State 259

   66 matched: FOR ID '=' iterRange . DO matched

    DO  shift, and go to state 263


State 260

   82 iterRange: simpleExp TO simpleExp BY . simpleExp
   85          | simpleExp TO simpleExp BY . error

    error        shift, and go to state 264
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '('          shift, and go to state 46
    '?'          shift, and go to state 47

    simpleExp    go to state 265
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    minmaxExp    go to state 52
    sumExp       go to state 53
    mulExp       go to state 54
    unaryExp     go to state 55
    unaryop      go to state 56
    factor       go to state 57
    mutable      go to state 58
    immutable    go to state 59
    call         go to state 60
    constant     go to state 61


State 261

   69 matched: IF error THEN matched ELSE . matched

    error        shift, and go to state 211
    IF           shift, and go to state 214
    WHILE        shift, and go to state 215
    FOR          shift, and go to state 216
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 242
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 262

   63 matched: IF simpleExp THEN matched ELSE . matched

    error        shift, and go to state 211
    IF           shift, and go to state 214
    WHILE        shift, and go to state 215
    FOR          shift, and go to state 216
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 248
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 263

   66 matched: FOR ID '=' iterRange DO . matched

    error        shift, and go to state 211
    IF           shift, and go to state 214
    WHILE        shift, and go to state 215
    FOR          shift, and go to state 216
    RETURN       shift, and go to state 113
    BREAK        shift, and go to state 114
    NOT          shift, and go to state 38
    CHARCONST    shift, and go to state 39
    ID           shift, and go to state 40
    NUMCONST     shift, and go to state 41
    STRINGCONST  shift, and go to state 42
    BOOLCONST    shift, and go to state 43
    '-'          shift, and go to state 44
    '*'          shift, and go to state 45
    '{'          shift, and go to state 115
    '('          shift, and go to state 46
    ';'          shift, and go to state 116
    '?'          shift, and go to state 47

    expStmt       go to state 118
    compoundStmt  go to state 119
    otherStmt     go to state 120
    matched       go to state 252
    returnStmt    go to state 124
    breakStmt     go to state 125
    exp           go to state 126
    simpleExp     go to state 83
    andExp        go to state 49
    unaryRelExp   go to state 50
    relExp        go to state 51
    minmaxExp     go to state 52
    sumExp        go to state 53
    mulExp        go to state 54
    unaryExp      go to state 55
    unaryop       go to state 56
    factor        go to state 57
    mutable       go to state 84
    immutable     go to state 59
    call          go to state 60
    constant      go to state 61


State 264

   85 iterRange: simpleExp TO simpleExp BY error .
  158 call: error . '('

    '('  shift, and go to state 76

    $default  reduce using rule 85 (iterRange)


State 265

   82 iterRange: simpleExp TO simpleExp BY simpleExp .
  110 simpleExp: simpleExp . OR andExp
  111          | simpleExp . OR error

    OR  shift, and go to state 85

    $default  reduce using rule 82 (iterRange)
