====================================
FILE: array2.c-
WARNING(24): Variable 'y' may be uninitialized when used here.
Var: w of array of type int [mem: Global loc: -1 size: 34] [line: 2]
Sibling: 1 Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 4]
.   Child: 0 Parm: x  type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   Child: 1 Compound [mem: None loc: 0 size: -27] [line: 4]
.   .   Child: 0 Var: y of array of type int [mem: Local loc: -4 size: 23] [line: 5]
.   .   Sibling: 1 Var: z  type int [mem: Local loc: -26 size: 1] [line: 5]
.   .   Child: 1 Assign: = of type int [line: 7]
.   .   .   Child: 0 Op: [ of type int [line: 7]
.   .   .   .   Child: 0 Id: y of type int [mem: Global loc: 0 size: 0] [line: 7]
.   .   .   .   Child: 1 Const 11 of type int [line: 7]
.   .   .   Child: 1 Op: + of type int [line: 7]
.   .   .   .   Child: 0 Op: * of type int [line: 7]
.   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 7]
.   .   .   .   .   Child: 1 Const 111 of type int [line: 7]
.   .   .   .   Child: 1 Const 222 of type int [line: 7]
.   .   Sibling: 1 Assign: = of type int [line: 8]
.   .   .   Child: 0 Id: z of type int [mem: Global loc: 0 size: 0] [line: 8]
.   .   .   Child: 1 Op: [ of type int [line: 8]
.   .   .   .   Child: 0 Id: y of type int [mem: Global loc: 0 size: 0] [line: 8]
.   .   .   .   Child: 1 Const 11 of type int [line: 8]
.   .   Sibling: 2 Assign: = of type int [line: 9]
.   .   .   Child: 0 Op: [ of type int [line: 9]
.   .   .   .   Child: 0 Id: w of type int [mem: Global loc: 0 size: 0] [line: 9]
.   .   .   .   Child: 1 Const 13 of type int [line: 9]
.   .   .   Child: 1 Op: * of type int [line: 9]
.   .   .   .   Child: 0 Op: * of type int [line: 9]
.   .   .   .   .   Child: 0 Op: * of type int [line: 9]
.   .   .   .   .   .   Child: 0 Op: chsign of type int [line: 9]
.   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 9]
.   .   .   .   .   .   .   .   Child: 0 Id: w of type int [mem: Global loc: 0 size: 0] [line: 9]
.   .   .   .   .   .   .   .   Child: 1 Const 15 of type int [line: 9]
.   .   .   .   .   .   Child: 1 Id: x of type int [mem: Global loc: 0 size: 0] [line: 9]
.   .   .   .   .   Child: 1 Op: [ of type int [line: 9]
.   .   .   .   .   .   Child: 0 Id: y of type int [mem: Global loc: 0 size: 0] [line: 9]
.   .   .   .   .   .   Child: 1 Const 17 of type int [line: 9]
.   .   .   .   Child: 1 Id: z of type int [mem: Global loc: 0 size: 0] [line: 9]
.   .   Sibling: 3 Return [line: 11]
.   .   .   Child: 0 Op: * of type int [line: 11]
.   .   .   .   Child: 0 Id: z of type int [mem: Global loc: 0 size: 0] [line: 11]
.   .   .   .   Child: 1 Op: [ of type int [line: 11]
.   .   .   .   .   Child: 0 Id: y of type int [mem: Global loc: 0 size: 0] [line: 11]
.   .   .   .   .   Child: 1 Const 11 of type int [line: 11]
Sibling: 2 Func: cat returns type void [mem: Global loc: 0 size: -4] [line: 14]
.   Child: 0 Parm: x  array of type int [mem: Parameter loc: -2 size: 1] [line: 14]
.   Sibling: 1 Parm: z  type int [mem: Parameter loc: -3 size: 1] [line: 14]
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 14]
.   .   Child: 1 Assign: = of type int [line: 15]
.   .   .   Child: 0 Op: [ of type int [line: 15]
.   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 15]
.   .   .   .   Child: 1 Const 10 of type int [line: 15]
.   .   .   Child: 1 Const 333 of type int [line: 15]
.   .   Sibling: 1 Assign: = of type int [line: 16]
.   .   .   Child: 0 Op: [ of type int [line: 16]
.   .   .   .   Child: 0 Id: w of type int [mem: Global loc: 0 size: 0] [line: 16]
.   .   .   .   Child: 1 Const 11 of type int [line: 16]
.   .   .   Child: 1 Const 444 of type int [line: 16]
.   .   Sibling: 2 For [mem: None loc: 0 size: -4] [line: 17]
.   .   .   Child: 0 Var: i  type int [mem: Global loc: -34 size: 1] [line: 17]
.   .   .   Child: 1 Range [line: 17]
.   .   .   .   Child: 0 Const 1 of type int [line: 17]
.   .   .   .   Child: 1 Op: sizeof of type int [line: 17]
.   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 17]
.   .   .   Child: 2 Assign: += of type int [line: 18]
.   .   .   .   Child: 0 Op: [ of type int [line: 18]
.   .   .   .   .   Child: 0 Id: w of type int [mem: Global loc: 0 size: 0] [line: 18]
.   .   .   .   .   Child: 1 Op: [ of type int [line: 18]
.   .   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 18]
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Global loc: 0 size: 0] [line: 18]
.   .   .   .   Child: 1 Op: * of type int [line: 18]
.   .   .   .   .   Child: 0 Op: [ of type int [line: 18]
.   .   .   .   .   .   Child: 0 Id: w of type int [mem: Global loc: 0 size: 0] [line: 18]
.   .   .   .   .   .   Child: 1 Op: [ of type int [line: 18]
.   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 18]
.   .   .   .   .   .   .   Child: 1 Op: - of type int [line: 18]
.   .   .   .   .   .   .   .   Child: 0 Id: i of type int [mem: Global loc: 0 size: 0] [line: 18]
.   .   .   .   .   .   .   .   Child: 1 Const 1 of type int [line: 18]
.   .   .   .   .   Child: 1 Id: z of type int [mem: Global loc: 0 size: 0] [line: 18]
Sibling: 3 Func: main returns type void [mem: Global loc: 0 size: -2] [line: 21]
.   Child: 1 Compound [mem: None loc: 0 size: -23] [line: 21]
.   .   Child: 0 Var: y of array of type int [mem: Local loc: -3 size: 21] [line: 22]
.   .   Child: 1 Call: cat of type void [line: 24]
.   .   .   Child: 0 Id: y of type int [mem: Global loc: 0 size: 0] [line: 24]
.   .   .   Sibling: 1 Const 12 of type int [line: 24]
.   .   Sibling: 1 Call: dog of type int [line: 25]
.   .   .   Child: 0 Const 666 of type int [line: 25]
Number of warnings: 1
Number of errors: 0
