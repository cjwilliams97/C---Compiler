====================================
FILE: everythingS21.c-
WARNING(46): Variable 'trousers' may be uninitialized when used here.
WARNING(62): Variable 'Wensleydale' may be uninitialized when used here.
WARNING(58): The variable 'c' seems not to be used.
WARNING(54): The parameter 'cheese' seems not to be used.
WARNING(59): The variable 'i' seems not to be used.
WARNING(54): The parameter 'launch' seems not to be used.
WARNING(54): Expecting to return type bool but function 'penguin' has no return statement.
WARNING(70): The variable 'skein' seems not to be used.
WARNING(82): Variable 'chicken' may be uninitialized when used here.
WARNING(82): Variable 'run' may be uninitialized when used here.
WARNING(85): Variable 'wallace' may be uninitialized when used here.
WARNING(85): Variable 'gromit' may be uninitialized when used here.
WARNING(90): The parameter 'y' seems not to be used.
WARNING(97): The variable 'pastry' seems not to be used.
WARNING(124): Variable 'yarn' may be uninitialized when used here.
WARNING(126): Variable 'preston' may be uninitialized when used here.
WARNING(126): Variable 'shaun' may be uninitialized when used here.
WARNING(115): The variable 'wool' seems not to be used.
WARNING(92): The function 'LadyCampanula' seems not to be used.
WARNING(103): The function 'TheWereRabbit' seems not to be used.
WARNING(90): The function 'Wensleydale' seems not to be used.
WARNING(129): The variable 'aBigLongVariableName6andthx1138' seems not to be used.
WARNING(133): The variable 'ant' seems not to be used.
WARNING(134): The variable 'bat' seems not to be used.
WARNING(135): The variable 'cat' seems not to be used.
WARNING(136): The variable 'dog' seems not to be used.
WARNING(137): The variable 'hog' seems not to be used.
WARNING(130): The variable 'odd' seems not to be used.
WARNING(130): The variable 'of' seems not to be used.
WARNING(54): The function 'penguin' seems not to be used.
WARNING(76): The function 'ramsBottom' seems not to be used.
WARNING(130): The variable 'separation' seems not to be used.
WARNING(131): The variable 'stuff' seems not to be used.
Var: gromit  type int [mem: Global loc: 0 size: 1] [line: 6]
Sibling: 1 Var: mysteriousPenguin  type int [mem: Global loc: -1 size: 1] [line: 6]
Sibling: 2 Func: wallace returns type void [mem: Global loc: 0 size: -4] [line: 9]
.   Child: 0 Parm: wrong  type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   Sibling: 1 Parm: trousers  type int [mem: Parameter loc: -3 size: 1] [line: 9]
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 10]
.   .   Child: 0 Var: close  type bool [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   Child: 0 Const true of type bool [line: 11]
.   .   Sibling: 1 Var: shave  type bool [mem: Local loc: -5 size: 1] [line: 11]
.   .   .   Child: 0 Const false of type bool [line: 11]
.   .   Sibling: 2 Var: cheese  type int [mem: Local loc: -6 size: 1] [line: 12]
.   .   .   Child: 0 Const 17 of type int [line: 12]
.   .   Child: 1 Const 1729 of type int [line: 14]
.   .   Sibling: 1 Id: close of type bool [mem: Global loc: 0 size: 0] [line: 15]
.   .   Sibling: 2 Op: + of type int [line: 16]
.   .   .   Child: 0 Op: * of type int [line: 16]
.   .   .   .   Child: 0 Const 11 of type int [line: 16]
.   .   .   .   Child: 1 Const 22 of type int [line: 16]
.   .   .   Child: 1 Op: * of type int [line: 16]
.   .   .   .   Child: 0 Const 33 of type int [line: 16]
.   .   .   .   Child: 1 Const 44 of type int [line: 16]
.   .   Sibling: 3 Assign: = of type bool [line: 17]
.   .   .   Child: 0 Id: close of type bool [mem: Global loc: 0 size: 0] [line: 17]
.   .   .   Child: 1 Id: shave of type bool [mem: Global loc: 0 size: 0] [line: 17]
.   .   Sibling: 4 Assign: = of type int [line: 18]
.   .   .   Child: 0 Id: wrong of type int [mem: Global loc: 0 size: 0] [line: 18]
.   .   .   Child: 1 Op: % of type int [line: 18]
.   .   .   .   Child: 0 Id: trousers of type int [mem: Global loc: 0 size: 0] [line: 18]
.   .   .   .   Child: 1 Op: / of type int [line: 18]
.   .   .   .   .   Child: 0 Const 666 of type int [line: 18]
.   .   .   .   .   Child: 1 Id: wrong of type int [mem: Global loc: 0 size: 0] [line: 18]
.   .   Sibling: 5 Assign: = of type int [line: 19]
.   .   .   Child: 0 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 19]
.   .   .   Child: 1 Op: + of type int [line: 19]
.   .   .   .   Child: 0 Op: - of type int [line: 19]
.   .   .   .   .   Child: 0 Op: * of type int [line: 19]
.   .   .   .   .   .   Child: 0 Id: wrong of type int [mem: Global loc: 0 size: 0] [line: 19]
.   .   .   .   .   .   Child: 1 Id: trousers of type int [mem: Global loc: 0 size: 0] [line: 19]
.   .   .   .   .   Child: 1 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 19]
.   .   .   .   Child: 1 Op: chsign of type int [line: 19]
.   .   .   .   .   Child: 0 Const 42 of type int [line: 19]
.   .   Sibling: 6 Assign: += of type int [line: 20]
.   .   .   Child: 0 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 20]
.   .   .   Child: 1 Const 27182818 of type int [line: 20]
.   .   Sibling: 7 Assign: -= of type int [line: 21]
.   .   .   Child: 0 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 21]
.   .   .   Child: 1 Op: chsign of type int [line: 21]
.   .   .   .   Child: 0 Const 31415927 of type int [line: 21]
.   .   Sibling: 8 Assign: /= of type int [line: 22]
.   .   .   Child: 0 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 22]
.   .   .   Child: 1 Assign: *= of type int [line: 22]
.   .   .   .   Child: 0 Id: wrong of type int [mem: Global loc: 0 size: 0] [line: 22]
.   .   .   .   Child: 1 Const 42 of type int [line: 22]
.   .   Sibling: 9 Assign: = of type bool [line: 23]
.   .   .   Child: 0 Id: close of type bool [mem: Global loc: 0 size: 0] [line: 23]
.   .   .   Child: 1 Op: and of type bool [line: 23]
.   .   .   .   Child: 0 Op: < of type bool [line: 23]
.   .   .   .   .   Child: 0 Id: wrong of type int [mem: Global loc: 0 size: 0] [line: 23]
.   .   .   .   .   Child: 1 Id: trousers of type int [mem: Global loc: 0 size: 0] [line: 23]
.   .   .   .   Child: 1 Op: <= of type bool [line: 23]
.   .   .   .   .   Child: 0 Id: trousers of type int [mem: Global loc: 0 size: 0] [line: 23]
.   .   .   .   .   Child: 1 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 23]
.   .   Sibling: 10 Assign: = of type bool [line: 24]
.   .   .   Child: 0 Id: shave of type bool [mem: Global loc: 0 size: 0] [line: 24]
.   .   .   Child: 1 Op: and of type bool [line: 24]
.   .   .   .   Child: 0 Op: > of type bool [line: 24]
.   .   .   .   .   Child: 0 Id: wrong of type int [mem: Global loc: 0 size: 0] [line: 24]
.   .   .   .   .   Child: 1 Id: trousers of type int [mem: Global loc: 0 size: 0] [line: 24]
.   .   .   .   Child: 1 Op: >= of type bool [line: 24]
.   .   .   .   .   Child: 0 Id: trousers of type int [mem: Global loc: 0 size: 0] [line: 24]
.   .   .   .   .   Child: 1 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 24]
.   .   Sibling: 11 Compound [mem: None loc: 0 size: -11] [line: 25]
.   .   .   Child: 0 Var: a  type int [mem: Local loc: 0 size: 1] [line: 26]
.   .   .   Sibling: 1 Var: grand  type int [mem: Local loc: -1 size: 1] [line: 26]
.   .   .   .   Child: 0 Op: / of type int [line: 26]
.   .   .   .   .   Child: 0 Const 1 of type int [line: 26]
.   .   .   .   .   Child: 1 Const 2 of type int [line: 26]
.   .   .   Sibling: 2 Var: day  type int [mem: Local loc: -2 size: 1] [line: 26]
.   .   .   .   Child: 0 Op: * of type int [line: 26]
.   .   .   .   .   Child: 0 Const 3 of type int [line: 26]
.   .   .   .   .   Child: 1 Const 4 of type int [line: 26]
.   .   .   Sibling: 3 Var: out  type int [mem: Local loc: -3 size: 1] [line: 26]
.   .   .   .   Child: 0 Op: chsign of type int [line: 26]
.   .   .   .   .   Child: 0 Const 9 of type int [line: 26]
.   .   .   Child: 1 Assign: = of type int [line: 27]
.   .   .   .   Child: 0 Id: a of type int [mem: Global loc: 0 size: 0] [line: 27]
.   .   .   .   Child: 1 Assign: += of type int [line: 27]
.   .   .   .   .   Child: 0 Id: grand of type int [mem: Global loc: 0 size: 0] [line: 27]
.   .   .   .   .   Child: 1 Assign: -= of type int [line: 27]
.   .   .   .   .   .   Child: 0 Id: day of type int [mem: Global loc: 0 size: 0] [line: 27]
.   .   .   .   .   .   Child: 1 Id: out of type int [mem: Global loc: 0 size: 0] [line: 27]
.   .   Sibling: 12 Assign: = of type bool [line: 29]
.   .   .   Child: 0 Id: close of type bool [mem: Global loc: 0 size: 0] [line: 29]
.   .   .   Child: 1 Op: and of type bool [line: 29]
.   .   .   .   Child: 0 Op: < of type bool [line: 29]
.   .   .   .   .   Child: 0 Op: + of type int [line: 29]
.   .   .   .   .   .   Child: 0 Op: * of type int [line: 29]
.   .   .   .   .   .   .   Child: 0 Op: chsign of type int [line: 29]
.   .   .   .   .   .   .   .   Child: 0 Const 1 of type int [line: 29]
.   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 29]
.   .   .   .   .   .   Child: 1 Const 3 of type int [line: 29]
.   .   .   .   .   Child: 1 Op: * of type int [line: 29]
.   .   .   .   .   .   Child: 0 Const 4 of type int [line: 29]
.   .   .   .   .   .   Child: 1 Const 5 of type int [line: 29]
.   .   .   .   Child: 1 Op: > of type bool [line: 29]
.   .   .   .   .   Child: 0 Op: + of type int [line: 29]
.   .   .   .   .   .   Child: 0 Const 6 of type int [line: 29]
.   .   .   .   .   .   Child: 1 Const 7 of type int [line: 29]
.   .   .   .   .   Child: 1 Op: chsign of type int [line: 29]
.   .   .   .   .   .   Child: 0 Const 3 of type int [line: 29]
.   .   Sibling: 13 Assign: = of type bool [line: 30]
.   .   .   Child: 0 Id: shave of type bool [mem: Global loc: 0 size: 0] [line: 30]
.   .   .   Child: 1 Op: or of type bool [line: 30]
.   .   .   .   Child: 0 Const true of type bool [line: 30]
.   .   .   .   Child: 1 Op: and of type bool [line: 30]
.   .   .   .   .   Child: 0 Op: < of type bool [line: 30]
.   .   .   .   .   .   Child: 0 Op: chsign of type int [line: 30]
.   .   .   .   .   .   .   Child: 0 Op: * of type int [line: 30]
.   .   .   .   .   .   .   .   Child: 0 Const 1 of type int [line: 30]
.   .   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 30]
.   .   .   .   .   .   .   .   .   Child: 0 Const 2 of type int [line: 30]
.   .   .   .   .   .   .   .   .   Child: 1 Const 3 of type int [line: 30]
.   .   .   .   .   .   Child: 1 Op: * of type int [line: 30]
.   .   .   .   .   .   .   Child: 0 Const 4 of type int [line: 30]
.   .   .   .   .   .   .   Child: 1 Const 5 of type int [line: 30]
.   .   .   .   .   Child: 1 Op: > of type bool [line: 30]
.   .   .   .   .   .   Child: 0 Op: + of type int [line: 30]
.   .   .   .   .   .   .   Child: 0 Const 6 of type int [line: 30]
.   .   .   .   .   .   .   Child: 1 Const 7 of type int [line: 30]
.   .   .   .   .   .   Child: 1 Op: chsign of type int [line: 30]
.   .   .   .   .   .   .   Child: 0 Const 3 of type int [line: 30]
.   .   Sibling: 14 If [line: 31]
.   .   .   Child: 0 Op: != of type bool [line: 31]
.   .   .   .   Child: 0 Id: shave of type bool [mem: Global loc: 0 size: 0] [line: 31]
.   .   .   .   Child: 1 Id: close of type bool [mem: Global loc: 0 size: 0] [line: 31]
.   .   .   Child: 1 Assign: = of type bool [line: 31]
.   .   .   .   Child: 0 Id: shave of type bool [mem: Global loc: 0 size: 0] [line: 31]
.   .   .   .   Child: 1 Op: not of type bool [line: 31]
.   .   .   .   .   Child: 0 Id: close of type bool [mem: Global loc: 0 size: 0] [line: 31]
.   .   Sibling: 15 If [line: 32]
.   .   .   Child: 0 Op: not of type bool [line: 32]
.   .   .   .   Child: 0 Op: or of type bool [line: 32]
.   .   .   .   .   Child: 0 Op: == of type bool [line: 32]
.   .   .   .   .   .   Child: 0 Id: shave of type bool [mem: Global loc: 0 size: 0] [line: 32]
.   .   .   .   .   .   Child: 1 Id: close of type bool [mem: Global loc: 0 size: 0] [line: 32]
.   .   .   .   .   Child: 1 Op: not of type bool [line: 32]
.   .   .   .   .   .   Child: 0 Id: close of type bool [mem: Global loc: 0 size: 0] [line: 32]
.   .   .   Child: 1 Assign: = of type bool [line: 32]
.   .   .   .   Child: 0 Id: shave of type bool [mem: Global loc: 0 size: 0] [line: 32]
.   .   .   .   Child: 1 Const true of type bool [line: 32]
.   .   .   Child: 2 Assign: = of type bool [line: 33]
.   .   .   .   Child: 0 Id: close of type bool [mem: Global loc: 0 size: 0] [line: 33]
.   .   .   .   Child: 1 Const false of type bool [line: 33]
.   .   Sibling: 16 Assign: = of type int [line: 34]
.   .   .   Child: 0 Id: mysteriousPenguin of type int [mem: Global loc: 0 size: 0] [line: 34]
.   .   .   Child: 1 Op: chsign of type int [line: 34]
.   .   .   .   Child: 0 Op: - of type int [line: 34]
.   .   .   .   .   Child: 0 Op: chsign of type int [line: 34]
.   .   .   .   .   .   Child: 0 Op: chsign of type int [line: 34]
.   .   .   .   .   .   .   Child: 0 Const 8 of type int [line: 34]
.   .   .   .   .   Child: 1 Op: chsign of type int [line: 34]
.   .   .   .   .   .   Child: 0 Assign: -- of type int [line: 34]
.   .   .   .   .   .   .   Child: 0 Id: cheese of type int [mem: Global loc: 0 size: 0] [line: 34]
.   .   Sibling: 17 While [line: 36]
.   .   .   Child: 0 Id: shave of type bool [mem: Global loc: 0 size: 0] [line: 36]
.   .   .   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 36]
.   .   .   .   Child: 0 Var: were  type int [mem: LocalStatic loc: -2 size: 1] [line: 37]
.   .   .   .   Sibling: 1 Var: rabbit  type int [mem: LocalStatic loc: -3 size: 1] [line: 37]
.   .   .   .   Sibling: 2 Var: sheep of array of type int [mem: LocalStatic loc: -5 size: 11] [line: 38]
.   .   .   .   Child: 1 Assign: = of type int [line: 40]
.   .   .   .   .   Child: 0 Op: [ of type int [line: 40]
.   .   .   .   .   .   Child: 0 Id: sheep of type int [mem: Global loc: 0 size: 0] [line: 40]
.   .   .   .   .   .   Child: 1 Const 2 of type int [line: 40]
.   .   .   .   .   Child: 1 Const 1618 of type int [line: 40]
.   .   .   .   Sibling: 1 If [line: 41]
.   .   .   .   .   Child: 0 Op: < of type bool [line: 41]
.   .   .   .   .   .   Child: 0 Op: [ of type int [line: 41]
.   .   .   .   .   .   .   Child: 0 Id: sheep of type int [mem: Global loc: 0 size: 0] [line: 41]
.   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 41]
.   .   .   .   .   .   Child: 1 Const 496 of type int [line: 41]
.   .   .   .   .   Child: 1 Break [line: 41]
.   .   .   .   Sibling: 2 Call: wallace of type void [line: 42]
.   .   .   .   .   Child: 0 Assign: -- of type int [line: 42]
.   .   .   .   .   .   Child: 0 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 42]
.   .   .   .   .   Sibling: 1 Op: - of type int [line: 42]
.   .   .   .   .   .   Child: 0 Id: were of type int [mem: Global loc: 0 size: 0] [line: 42]
.   .   .   .   .   .   Child: 1 Id: rabbit of type int [mem: Global loc: 0 size: 0] [line: 42]
.   .   .   .   Sibling: 3 Compound [mem: None loc: 0 size: -3] [line: 43]
.   .   .   .   .   Child: 0 Var: the  type int [mem: Local loc: 0 size: 1] [line: 44]
.   .   .   .   .   Sibling: 1 Var: wrong  type int [mem: Local loc: -1 size: 1] [line: 44]
.   .   .   .   .   Sibling: 2 Var: trousers  type int [mem: Local loc: -2 size: 1] [line: 44]
.   .   .   .   .   Child: 1 Assign: = of type int [line: 46]
.   .   .   .   .   .   Child: 0 Id: the of type int [mem: Global loc: 0 size: 0] [line: 46]
.   .   .   .   .   .   Child: 1 Assign: += of type int [line: 46]
.   .   .   .   .   .   .   Child: 0 Id: wrong of type int [mem: Global loc: 0 size: 0] [line: 46]
.   .   .   .   .   .   .   Child: 1 Assign: ++ of type int [line: 46]
.   .   .   .   .   .   .   .   Child: 0 Id: trousers of type int [mem: Global loc: 0 size: 0] [line: 46]
.   .   .   .   .   Sibling: 1 If [line: 47]
.   .   .   .   .   .   Child: 0 Op: == of type bool [line: 47]
.   .   .   .   .   .   .   Child: 0 Id: were of type int [mem: Global loc: 0 size: 0] [line: 47]
.   .   .   .   .   .   .   Child: 1 Id: rabbit of type int [mem: Global loc: 0 size: 0] [line: 47]
.   .   .   .   .   .   Child: 1 Assign: = of type int [line: 47]
.   .   .   .   .   .   .   Child: 0 Id: were of type int [mem: Global loc: 0 size: 0] [line: 47]
.   .   .   .   .   .   .   Child: 1 Assign: -- of type int [line: 47]
.   .   .   .   .   .   .   .   Child: 0 Id: wrong of type int [mem: Global loc: 0 size: 0] [line: 47]
.   .   Sibling: 18 Return [line: 50]
Sibling: 3 Func: penguin returns type bool [mem: Global loc: 0 size: -7] [line: 54]
.   Child: 0 Parm: Feathers  type char [mem: Parameter loc: -2 size: 1] [line: 54]
.   Sibling: 1 Parm: McGraw  array of type char [mem: Parameter loc: -3 size: 1] [line: 54]
.   Sibling: 2 Parm: moon  type bool [mem: Parameter loc: -4 size: 1] [line: 54]
.   Sibling: 3 Parm: cheese  type bool [mem: Parameter loc: -5 size: 1] [line: 54]
.   Sibling: 4 Parm: launch  type int [mem: Parameter loc: -6 size: 1] [line: 54]
.   Child: 1 Compound [mem: None loc: 0 size: -27] [line: 55]
.   .   Child: 0 Var: tottington  type char [mem: LocalStatic loc: -15 size: 1] [line: 56]
.   .   .   Child: 0 Const 'x' of type char [line: 56]
.   .   Sibling: 1 Var: Wensleydale of array of type char [mem: Local loc: -8 size: 18] [line: 57]
.   .   Sibling: 2 Var: c  type char [mem: Local loc: -25 size: 1] [line: 58]
.   .   Sibling: 3 Var: i  type int [mem: Local loc: -26 size: 1] [line: 59]
.   .   Child: 1 Assign: = of type char [line: 61]
.   .   .   Child: 0 Id: tottington of type char [mem: Global loc: 0 size: 0] [line: 61]
.   .   .   Child: 1 Id: Feathers of type char [mem: Global loc: 0 size: 0] [line: 61]
.   .   Sibling: 1 Assign: = of type bool [line: 62]
.   .   .   Child: 0 Id: moon of type bool [mem: Global loc: 0 size: 0] [line: 62]
.   .   .   Child: 1 Op: and of type bool [line: 62]
.   .   .   .   Child: 0 Op: <= of type bool [line: 62]
.   .   .   .   .   Child: 0 Id: McGraw of type char [mem: Global loc: 0 size: 0] [line: 62]
.   .   .   .   .   Child: 1 Id: Wensleydale of type char [mem: Global loc: 0 size: 0] [line: 62]
.   .   .   .   Child: 1 Id: moon of type bool [mem: Global loc: 0 size: 0] [line: 62]
.   .   Sibling: 2 Assign: = of type char [line: 63]
.   .   .   Child: 0 Id: Wensleydale of type char [mem: Global loc: 0 size: 0] [line: 63]
.   .   .   Child: 1 Id: McGraw of type char [mem: Global loc: 0 size: 0] [line: 63]
.   .   Sibling: 3 Assign: = of type char [line: 64]
.   .   .   Child: 0 Op: [ of type char [line: 64]
.   .   .   .   Child: 0 Id: Wensleydale of array of type char [mem: Global loc: 0 size: 0] [line: 64]
.   .   .   .   Child: 1 Op: sizeof of type int [line: 64]
.   .   .   .   .   Child: 0 Id: McGraw of type char [mem: Global loc: 0 size: 0] [line: 64]
.   .   .   Child: 1 Const 'Q' of type char [line: 64]
.   .   Sibling: 4 Assign: = of type char [line: 65]
.   .   .   Child: 0 Op: [ of type char [line: 65]
.   .   .   .   Child: 0 Id: McGraw of array of type char [mem: Global loc: 0 size: 0] [line: 65]
.   .   .   .   Child: 1 Const 3 of type int [line: 65]
.   .   .   Child: 1 Const 'A' of type char [line: 65]
Sibling: 4 Func: Wendolene returns type int [mem: Global loc: 0 size: -6] [line: 68]
.   Child: 0 Parm: wool  type int [mem: Parameter loc: -2 size: 1] [line: 68]
.   Sibling: 1 Parm: shaun  type bool [mem: Parameter loc: -3 size: 1] [line: 68]
.   Sibling: 2 Parm: yarn  array of type int [mem: Parameter loc: -4 size: 1] [line: 68]
.   Sibling: 3 Parm: preston  array of type bool [mem: Parameter loc: -5 size: 1] [line: 68]
.   Child: 1 Compound [mem: None loc: 0 size: -7] [line: 69]
.   .   Child: 0 Var: skein  type int [mem: Local loc: -6 size: 1] [line: 70]
.   .   Child: 1 Assign: = of type bool [line: 71]
.   .   .   Child: 0 Op: [ of type bool [line: 71]
.   .   .   .   Child: 0 Id: preston of type bool [mem: Global loc: 0 size: 0] [line: 71]
.   .   .   .   Child: 1 Const 3 of type int [line: 71]
.   .   .   Child: 1 Op: or of type bool [line: 71]
.   .   .   .   Child: 0 Op: > of type bool [line: 71]
.   .   .   .   .   Child: 0 Op: [ of type int [line: 71]
.   .   .   .   .   .   Child: 0 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 71]
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 71]
.   .   .   .   .   Child: 1 Id: wool of type int [mem: Global loc: 0 size: 0] [line: 71]
.   .   .   .   Child: 1 Op: not of type bool [line: 71]
.   .   .   .   .   Child: 0 Id: shaun of type bool [mem: Global loc: 0 size: 0] [line: 71]
.   .   Sibling: 1 Return [line: 72]
.   .   .   Child: 0 Op: + of type int [line: 72]
.   .   .   .   Child: 0 Op: + of type int [line: 72]
.   .   .   .   .   Child: 0 Op: + of type int [line: 72]
.   .   .   .   .   .   Child: 0 Op: + of type int [line: 72]
.   .   .   .   .   .   .   Child: 0 Id: wool of type int [mem: Global loc: 0 size: 0] [line: 72]
.   .   .   .   .   .   .   Child: 1 Op: [ of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 0 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 72]
.   .   .   .   .   .   .   .   Child: 1 Const 0 of type int [line: 72]
.   .   .   .   .   .   Child: 1 Op: sizeof of type int [line: 72]
.   .   .   .   .   .   .   Child: 0 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 72]
.   .   .   .   .   Child: 1 Op: [ of type int [line: 72]
.   .   .   .   .   .   Child: 0 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 72]
.   .   .   .   .   .   Child: 1 Op: * of type int [line: 72]
.   .   .   .   .   .   .   Child: 0 Const 7 of type int [line: 72]
.   .   .   .   .   .   .   Child: 1 Id: wool of type int [mem: Global loc: 0 size: 0] [line: 72]
.   .   .   .   Child: 1 Op: [ of type int [line: 72]
.   .   .   .   .   Child: 0 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 72]
.   .   .   .   .   Child: 1 Op: - of type int [line: 72]
.   .   .   .   .   .   Child: 0 Op: [ of type int [line: 72]
.   .   .   .   .   .   .   Child: 0 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 72]
.   .   .   .   .   .   .   Child: 1 Op: + of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 0 Const 3 of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 1 Op: * of type int [line: 72]
.   .   .   .   .   .   .   .   .   Child: 0 Id: wool of type int [mem: Global loc: 0 size: 0] [line: 72]
.   .   .   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 72]
.   .   .   .   .   .   Child: 1 Const 4 of type int [line: 72]
Sibling: 5 Func: ramsBottom returns type bool [mem: Global loc: 0 size: -2] [line: 76]
.   Child: 1 Compound [mem: None loc: 0 size: -16] [line: 77]
.   .   Child: 0 Var: chicken of array of type int [mem: Local loc: -3 size: 3] [line: 78]
.   .   Sibling: 1 Var: run of array of type bool [mem: Local loc: -6 size: 4] [line: 79]
.   .   Sibling: 2 Var: wallace of array of type int [mem: Local loc: -10 size: 3] [line: 80]
.   .   Sibling: 3 Var: gromit of array of type int [mem: Local loc: -13 size: 4] [line: 80]
.   .   Child: 1 Op: * of type int [line: 82]
.   .   .   Child: 0 Const 42 of type int [line: 82]
.   .   .   Child: 1 Call: Wendolene of type int [line: 82]
.   .   .   .   Child: 0 Op: + of type int [line: 82]
.   .   .   .   .   Child: 0 Op: + of type int [line: 82]
.   .   .   .   .   .   Child: 0 Const 1 of type int [line: 82]
.   .   .   .   .   .   Child: 1 Const 2 of type int [line: 82]
.   .   .   .   .   Child: 1 Const 3 of type int [line: 82]
.   .   .   .   Sibling: 1 Op: or of type bool [line: 82]
.   .   .   .   .   Child: 0 Op: not of type bool [line: 82]
.   .   .   .   .   .   Child: 0 Const true of type bool [line: 82]
.   .   .   .   .   Child: 1 Op: and of type bool [line: 82]
.   .   .   .   .   .   Child: 0 Const true of type bool [line: 82]
.   .   .   .   .   .   Child: 1 Const false of type bool [line: 82]
.   .   .   .   Sibling: 2 Id: chicken of type int [mem: Global loc: 0 size: 0] [line: 82]
.   .   .   .   Sibling: 3 Id: run of type bool [mem: Global loc: 0 size: 0] [line: 82]
.   .   Sibling: 1 Op: [ of type bool [line: 83]
.   .   .   Child: 0 Id: run of type bool [mem: Global loc: 0 size: 0] [line: 83]
.   .   .   Child: 1 Op: - of type int [line: 83]
.   .   .   .   Child: 0 Op: sizeof of type int [line: 83]
.   .   .   .   .   Child: 0 Id: run of type bool [mem: Global loc: 0 size: 0] [line: 83]
.   .   .   .   Child: 1 Const 1 of type int [line: 83]
.   .   Sibling: 2 Return [line: 85]
.   .   .   Child: 0 Op: not of type bool [line: 85]
.   .   .   .   Child: 0 Op: >= of type bool [line: 85]
.   .   .   .   .   Child: 0 Op: [ of type int [line: 85]
.   .   .   .   .   .   Child: 0 Id: wallace of type int [mem: Global loc: 0 size: 0] [line: 85]
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 85]
.   .   .   .   .   Child: 1 Op: * of type int [line: 85]
.   .   .   .   .   .   Child: 0 Op: chsign of type int [line: 85]
.   .   .   .   .   .   .   Child: 0 Op: [ of type int [line: 85]
.   .   .   .   .   .   .   .   Child: 0 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 85]
.   .   .   .   .   .   .   .   Child: 1 Const 2 of type int [line: 85]
.   .   .   .   .   .   Child: 1 Const 3 of type int [line: 85]
Sibling: 6 Func: cheese returns type int [mem: Global loc: 0 size: -4] [line: 88]
.   Child: 0 Parm: x  type int [mem: Parameter loc: -2 size: 1] [line: 88]
.   Sibling: 1 Parm: y  type int [mem: Parameter loc: -3 size: 1] [line: 88]
.   Child: 1 While [line: 88]
.   .   Child: 0 Op: > of type bool [line: 88]
.   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 88]
.   .   .   Child: 1 Const 0 of type int [line: 88]
.   .   Child: 1 If [line: 88]
.   .   .   Child: 0 Op: > of type bool [line: 88]
.   .   .   .   Child: 0 Id: y of type int [mem: Global loc: 0 size: 0] [line: 88]
.   .   .   .   Child: 1 Const 3 of type int [line: 88]
.   .   .   Child: 1 Assign: -- of type int [line: 88]
.   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 88]
.   .   .   Child: 2 Return [line: 88]
.   .   .   .   Child: 0 Op: % of type int [line: 88]
.   .   .   .   .   Child: 0 Op: * of type int [line: 88]
.   .   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 88]
.   .   .   .   .   .   Child: 1 Id: x of type int [mem: Global loc: 0 size: 0] [line: 88]
.   .   .   .   .   Child: 1 Id: y of type int [mem: Global loc: 0 size: 0] [line: 88]
Sibling: 7 Func: Wensleydale returns type int [mem: Global loc: 0 size: -4] [line: 90]
.   Child: 0 Parm: x  type int [mem: Parameter loc: -2 size: 1] [line: 90]
.   Sibling: 1 Parm: y  type int [mem: Parameter loc: -3 size: 1] [line: 90]
.   Child: 1 Return [line: 90]
.   .   Child: 0 Call: cheese of type int [line: 90]
.   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 90]
.   .   .   Sibling: 1 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 90]
Sibling: 8 Func: LadyCampanula returns type int [mem: Global loc: 0 size: -4] [line: 92]
.   Child: 0 Parm: c  type char [mem: Parameter loc: -2 size: 1] [line: 92]
.   Sibling: 1 Parm: s  array of type char [mem: Parameter loc: -3 size: 1] [line: 92]
.   Child: 1 While [line: 92]
.   .   Child: 0 Const true of type bool [line: 92]
.   .   Child: 1 For [mem: Global loc: 0 size: -4] [line: 92]
.   .   .   Child: 0 Var: i  type int [mem: Global loc: -16 size: 1] [line: 92]
.   .   .   Child: 1 Range [line: 92]
.   .   .   .   Child: 0 Op: - of type int [line: 92]
.   .   .   .   .   Child: 0 Op: sizeof of type int [line: 92]
.   .   .   .   .   .   Child: 0 Id: s of type char [mem: Global loc: 0 size: 0] [line: 92]
.   .   .   .   .   Child: 1 Const 1 of type int [line: 92]
.   .   .   .   Child: 1 Const 0 of type int [line: 92]
.   .   .   .   Child: 2 Op: chsign of type int [line: 92]
.   .   .   .   .   Child: 0 Const 1 of type int [line: 92]
.   .   .   Child: 2 If [line: 92]
.   .   .   .   Child: 0 Op: == of type bool [line: 92]
.   .   .   .   .   Child: 0 Op: [ of type char [line: 92]
.   .   .   .   .   .   Child: 0 Id: s of array of type char [mem: Global loc: 0 size: 0] [line: 92]
.   .   .   .   .   .   Child: 1 Id: i of type int [mem: Global loc: 0 size: 0] [line: 92]
.   .   .   .   .   Child: 1 Id: c of type char [mem: Global loc: 0 size: 0] [line: 92]
.   .   .   .   Child: 1 Return [line: 92]
.   .   .   .   .   Child: 0 Id: i of type int [mem: Global loc: 0 size: 0] [line: 92]
Sibling: 9 Func: MrsTweedy returns type char [mem: Global loc: 0 size: -4] [line: 94]
.   Child: 0 Parm: c  type char [mem: Parameter loc: -2 size: 1] [line: 94]
.   Sibling: 1 Parm: s  array of type char [mem: Parameter loc: -3 size: 1] [line: 94]
.   Child: 1 Compound [mem: None loc: 0 size: -4] [line: 95]
.   .   Child: 1 For [mem: None loc: 0 size: -4] [line: 96]
.   .   .   Child: 0 Var: ginger  type int [mem: Global loc: -17 size: 1] [line: 96]
.   .   .   Child: 1 Range [line: 96]
.   .   .   .   Child: 0 Const 0 of type int [line: 96]
.   .   .   .   Child: 1 Const 10 of type int [line: 96]
.   .   .   Child: 2 Assign: = of type char [line: 96]
.   .   .   .   Child: 0 Op: [ of type char [line: 96]
.   .   .   .   .   Child: 0 Id: s of array of type char [mem: Global loc: 0 size: 0] [line: 96]
.   .   .   .   .   Child: 1 Id: ginger of type int [mem: Global loc: 0 size: 0] [line: 96]
.   .   .   .   Child: 1 Id: c of type char [mem: Global loc: 0 size: 0] [line: 96]
.   .   Sibling: 1 For [mem: Global loc: 0 size: -4] [line: 97]
.   .   .   Child: 0 Var: pastry  type int [mem: Global loc: -18 size: 1] [line: 97]
.   .   .   Child: 1 Range [line: 97]
.   .   .   .   Child: 0 Const 0 of type int [line: 97]
.   .   .   .   Child: 1 Const 2 of type int [line: 97]
.   .   .   .   Child: 2 Const 7 of type int [line: 97]
.   .   .   Child: 2 If [line: 97]
.   .   .   .   Child: 0 Op: == of type bool [line: 97]
.   .   .   .   .   Child: 0 Op: [ of type char [line: 97]
.   .   .   .   .   .   Child: 0 Id: s of array of type char [mem: Global loc: 0 size: 0] [line: 97]
.   .   .   .   .   .   Child: 1 Const 0 of type int [line: 97]
.   .   .   .   .   Child: 1 Op: [ of type char [line: 97]
.   .   .   .   .   .   Child: 0 Id: s of array of type char [mem: Global loc: 0 size: 0] [line: 97]
.   .   .   .   .   .   Child: 1 Const 1 of type int [line: 97]
.   .   .   .   Child: 1 Break [line: 97]
.   .   Sibling: 2 While [line: 98]
.   .   .   Child: 0 Const true of type bool [line: 98]
.   .   .   Child: 1 Break [line: 98]
.   .   Sibling: 3 Return [line: 100]
.   .   .   Child: 0 Const 'x' of type char [line: 100]
Sibling: 10 Func: TheWereRabbit returns type char [mem: Global loc: 0 size: -3] [line: 103]
.   Child: 0 Parm: x  type int [mem: Parameter loc: -2 size: 1] [line: 103]
.   Child: 1 Compound [mem: None loc: 0 size: -3] [line: 104]
.   .   Child: 1 If [line: 105]
.   .   .   Child: 0 Op: == of type bool [line: 105]
.   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 105]
.   .   .   .   Child: 1 Const 0 of type int [line: 105]
.   .   .   Child: 1 Return [line: 105]
.   .   .   .   Child: 0 Const '@' of type char [line: 105]
.   .   .   Child: 2 If [line: 106]
.   .   .   .   Child: 0 Op: == of type bool [line: 106]
.   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 106]
.   .   .   .   .   Child: 1 Const 1 of type int [line: 106]
.   .   .   .   Child: 1 Return [line: 106]
.   .   .   .   .   Child: 0 Const 'a' of type char [line: 106]
.   .   .   .   Child: 2 If [line: 107]
.   .   .   .   .   Child: 0 Op: == of type bool [line: 107]
.   .   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 107]
.   .   .   .   .   .   Child: 1 Const 2 of type int [line: 107]
.   .   .   .   .   Child: 1 Return [line: 107]
.   .   .   .   .   .   Child: 0 Const 'b' of type char [line: 107]
.   .   .   .   .   Child: 2 If [line: 108]
.   .   .   .   .   .   Child: 0 Op: == of type bool [line: 108]
.   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 108]
.   .   .   .   .   .   .   Child: 1 Const 3 of type int [line: 108]
.   .   .   .   .   .   Child: 1 Return [line: 108]
.   .   .   .   .   .   .   Child: 0 Const 'c' of type char [line: 108]
.   .   .   .   .   .   Child: 2 If [line: 109]
.   .   .   .   .   .   .   Child: 0 Op: == of type bool [line: 109]
.   .   .   .   .   .   .   .   Child: 0 Id: x of type int [mem: Global loc: 0 size: 0] [line: 109]
.   .   .   .   .   .   .   .   Child: 1 Const 4 of type int [line: 109]
.   .   .   .   .   .   .   Child: 1 Return [line: 109]
.   .   .   .   .   .   .   .   Child: 0 Const 'd' of type char [line: 109]
.   .   .   .   .   .   .   Child: 2 Return [line: 110]
.   .   .   .   .   .   .   .   Child: 0 Const ' ' of type char [line: 110]
Sibling: 11 Func: main returns type int [mem: Global loc: 0 size: -2] [line: 113]
.   Child: 1 Compound [mem: None loc: 0 size: -154] [line: 114]
.   .   Child: 0 Var: wool  type int [mem: Local loc: -2 size: 1] [line: 115]
.   .   Sibling: 1 Var: yarn of array of type int [mem: Local loc: -4 size: 114] [line: 115]
.   .   Sibling: 2 Var: shaun  type bool [mem: Local loc: -117 size: 1] [line: 116]
.   .   Sibling: 3 Var: preston of array of type bool [mem: Local loc: -119 size: 23] [line: 116]
.   .   Sibling: 4 Var: rocky of array of type char [mem: Local loc: -142 size: 13] [line: 117]
.   .   Child: 1 Call: wallace of type void [line: 119]
.   .   .   Child: 0 Call: cheese of type int [line: 119]
.   .   .   .   Child: 0 Const 62 of type int [line: 119]
.   .   .   .   Sibling: 1 Op: chsign of type int [line: 119]
.   .   .   .   .   Child: 0 Const 311 of type int [line: 119]
.   .   .   Sibling: 1 Id: gromit of type int [mem: Global loc: 0 size: 0] [line: 119]
.   .   Sibling: 1 Assign: = of array of type char [line: 120]
.   .   .   Child: 0 Id: rocky of type char [mem: Global loc: 0 size: 0] [line: 120]
.   .   .   Child: 1 Const  "molybdenum" of array of type char [mem: Global loc: 0 size: 0] [line: 120]
.   .   Sibling: 2 Call: MrsTweedy of type char [line: 122]
.   .   .   Child: 0 Const 'Z' of type char [line: 122]
.   .   .   Sibling: 1 Id: rocky of type char [mem: Global loc: 0 size: 0] [line: 122]
.   .   Sibling: 3 Op: + of type int [line: 124]
.   .   .   Child: 0 Op: [ of type int [line: 124]
.   .   .   .   Child: 0 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 124]
.   .   .   .   Child: 1 Op: ? of type int [line: 124]
.   .   .   .   .   Child: 0 Const 100 of type int [line: 124]
.   .   .   Child: 1 Op: [ of type int [line: 124]
.   .   .   .   Child: 0 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 124]
.   .   .   .   Child: 1 Op: ? of type int [line: 124]
.   .   .   .   .   Child: 0 Op: sizeof of type int [line: 124]
.   .   .   .   .   .   Child: 0 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 124]
.   .   Sibling: 4 Return [line: 126]
.   .   .   Child: 0 Call: Wendolene of type int [line: 126]
.   .   .   .   Child: 0 Op: * of type int [line: 126]
.   .   .   .   .   Child: 0 Op: sizeof of type int [line: 126]
.   .   .   .   .   .   Child: 0 Id: preston of type bool [mem: Global loc: 0 size: 0] [line: 126]
.   .   .   .   .   Child: 1 Op: sizeof of type int [line: 126]
.   .   .   .   .   .   Child: 0 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 126]
.   .   .   .   Sibling: 1 Id: shaun of type bool [mem: Global loc: 0 size: 0] [line: 126]
.   .   .   .   Sibling: 2 Id: yarn of type int [mem: Global loc: 0 size: 0] [line: 126]
.   .   .   .   Sibling: 3 Id: preston of type bool [mem: Global loc: 0 size: 0] [line: 126]
Sibling: 12 Var: aBigLongVariableName6andthx1138  type bool [mem: Global loc: -19 size: 1] [line: 129]
Sibling: 13 Var: odd  type int [mem: Global loc: -20 size: 1] [line: 130]
Sibling: 14 Var: separation  type int [mem: Global loc: -21 size: 1] [line: 130]
Sibling: 15 Var: of  type int [mem: Global loc: -22 size: 1] [line: 130]
Sibling: 16 Var: stuff  type int [mem: Global loc: -23 size: 1] [line: 131]
Sibling: 17 Var: ant of array of type char [mem: Global loc: -36 size: 11] [line: 133]
.   Child: 0 Const  "unwrinkled" of array of type char [mem: Global loc: -25 size: 11] [line: 133]
Sibling: 18 Var: bat  type char [mem: Global loc: -46 size: 1] [line: 134]
.   Child: 0 Const ''' of type char [line: 134]
Sibling: 19 Var: cat  type char [mem: Global loc: -47 size: 1] [line: 135]
.   Child: 0 Const 't' of type char [line: 135]
Sibling: 20 Var: dog  type char [mem: Global loc: -48 size: 1] [line: 136]
.   Child: 0 Const '
' of type char [line: 136]
Sibling: 21 Var: hog  type char [mem: Global loc: -49 size: 1] [line: 137]
.   Child: 0 Const ' ' of type char [line: 137]
Number of warnings: 33
Number of errors: 0
