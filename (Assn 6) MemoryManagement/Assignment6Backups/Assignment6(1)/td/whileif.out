====================================
FILE: whileif.c-
Func: main returns type int [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [mem: None loc: 0 size: -10] [line: 3]
.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Var: y of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   Sibling: 2  Var: z of type int [mem: Local loc: -4 size: 1] [line: 6]
.   .   Sibling: 3  Var: a of type bool [mem: Local loc: -5 size: 1] [line: 7]
.   .   Sibling: 4  Var: b of type bool [mem: Local loc: -6 size: 1] [line: 7]
.   .   Sibling: 5  Var: c of type bool [mem: Local loc: -7 size: 1] [line: 7]
.   .   Sibling: 6  Var: d of type bool [mem: Local loc: -8 size: 1] [line: 7]
.   .   Sibling: 7  Var: e of type bool [mem: Local loc: -9 size: 1] [line: 7]
.   .   Child: 1  Assign: = of type bool [line: 9]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 9]
.   .   .   Child: 1  Const false of type bool [line: 9]
.   .   Sibling: 1  While [line: 10]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 10]
.   .   .   Child: 1  Assign: = of type int [line: 10]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   .   Child: 1  Const 88 of type int [line: 10]
.   .   Sibling: 2  If [line: 11]
.   .   .   Child: 0  Op: > of type bool [line: 11]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 11]
.   .   .   .   Child: 1  Const 2 of type int [line: 11]
.   .   Sibling: 3  Assign: = of type bool [line: 13]
.   .   .   Child: 0  Id: a of type bool [mem: Local loc: -5 size: 1] [line: 13]
.   .   .   Child: 1  Assign: = of type bool [line: 13]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 13]
.   .   .   .   Child: 1  Assign: = of type bool [line: 13]
.   .   .   .   .   Child: 0  Id: c of type bool [mem: Local loc: -7 size: 1] [line: 13]
.   .   .   .   .   Child: 1  Assign: = of type bool [line: 13]
.   .   .   .   .   .   Child: 0  Id: d of type bool [mem: Local loc: -8 size: 1] [line: 13]
.   .   .   .   .   .   Child: 1  Op: > of type bool [line: 13]
.   .   .   .   .   .   .   Child: 0  Const 3 of type int [line: 13]
.   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 13]
.   .   Sibling: 4  If [line: 14]
.   .   .   Child: 0  Const false of type bool [line: 14]
.   .   .   Child: 1  Assign: = of type bool [line: 14]
.   .   .   .   Child: 0  Id: e of type bool [mem: Local loc: -9 size: 1] [line: 14]
.   .   .   .   Child: 1  Const true of type bool [line: 14]
.   .   Sibling: 5  Assign: = of type int [line: 15]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 15]
.   .   .   Child: 1  Const 1184 of type int [line: 15]
.   .   Sibling: 6  Assign: = of type int [line: 16]
.   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   .   Child: 1  Const 1210 of type int [line: 16]
.   .   Sibling: 7  If [line: 18]
.   .   .   Child: 0  Op: > of type bool [line: 18]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   .   Child: 1  Const 1 of type int [line: 18]
.   .   .   Child: 1  Assign: = of type int [line: 18]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 18]
.   .   .   .   Child: 1  Const 1 of type int [line: 18]
.   .   Sibling: 8  If [line: 19]
.   .   .   Child: 0  Op: > of type bool [line: 19]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 19]
.   .   .   .   Child: 1  Const 2 of type int [line: 19]
.   .   .   Child: 1  Assign: = of type int [line: 19]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 19]
.   .   .   .   Child: 1  Const 1 of type int [line: 19]
.   .   .   Child: 2  Assign: = of type int [line: 19]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 19]
.   .   .   .   Child: 1  Const 2 of type int [line: 19]
.   .   Sibling: 9  If [line: 20]
.   .   .   Child: 0  Op: > of type bool [line: 20]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 20]
.   .   .   .   Child: 1  Const 3 of type int [line: 20]
.   .   .   Child: 1  If [line: 20]
.   .   .   .   Child: 0  Op: > of type bool [line: 20]
.   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 20]
.   .   .   .   .   Child: 1  Const 4 of type int [line: 20]
.   .   .   .   Child: 1  Assign: = of type int [line: 20]
.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 20]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 20]
.   .   Sibling: 10  If [line: 21]
.   .   .   Child: 0  Op: > of type bool [line: 21]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 21]
.   .   .   .   Child: 1  Const 5 of type int [line: 21]
.   .   .   Child: 1  If [line: 21]
.   .   .   .   Child: 0  Op: > of type bool [line: 21]
.   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 21]
.   .   .   .   .   Child: 1  Const 6 of type int [line: 21]
.   .   .   .   Child: 1  Assign: = of type int [line: 21]
.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 21]
.   .   .   .   .   Child: 1  Const 4 of type int [line: 21]
.   .   .   .   Child: 2  Assign: = of type int [line: 21]
.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 21]
.   .   .   .   .   Child: 1  Const 5 of type int [line: 21]
.   .   Sibling: 11  If [line: 22]
.   .   .   Child: 0  Op: > of type bool [line: 22]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 22]
.   .   .   .   Child: 1  Const 7 of type int [line: 22]
.   .   .   Child: 1  If [line: 22]
.   .   .   .   Child: 0  Op: > of type bool [line: 22]
.   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 22]
.   .   .   .   .   Child: 1  Const 8 of type int [line: 22]
.   .   .   .   Child: 1  Assign: = of type int [line: 22]
.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 22]
.   .   .   .   .   Child: 1  Const 6 of type int [line: 22]
.   .   .   .   Child: 2  Assign: = of type int [line: 22]
.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 22]
.   .   .   .   .   Child: 1  Const 7 of type int [line: 22]
.   .   .   Child: 2  Assign: = of type int [line: 22]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 22]
.   .   .   .   Child: 1  Const 8 of type int [line: 22]
.   .   Sibling: 12  If [line: 23]
.   .   .   Child: 0  Op: < of type bool [line: 23]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 23]
.   .   .   .   Child: 1  Const 9 of type int [line: 23]
.   .   .   Child: 1  While [line: 23]
.   .   .   .   Child: 0  Op: > of type bool [line: 23]
.   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   Child: 1  Const 10 of type int [line: 23]
.   .   .   .   Child: 1  Const 9 of type int [line: 23]
.   .   Sibling: 13  While [line: 24]
.   .   .   Child: 0  Op: > of type bool [line: 24]
.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 24]
.   .   .   .   Child: 1  Const 10 of type int [line: 24]
.   .   .   Child: 1  If [line: 24]
.   .   .   .   Child: 0  Op: < of type bool [line: 24]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 24]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 24]
.   .   .   .   Child: 1  Const 3 of type int [line: 24]
.   .   Sibling: 14  While [line: 25]
.   .   .   Child: 0  Op: > of type bool [line: 25]
.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 25]
.   .   .   .   Child: 1  Const 10 of type int [line: 25]
.   .   .   Child: 1  If [line: 25]
.   .   .   .   Child: 0  Op: < of type bool [line: 25]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 25]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 25]
.   .   .   .   Child: 1  Const 3 of type int [line: 25]
.   .   .   .   Child: 2  Const 9 of type int [line: 25]
.   .   Sibling: 15  If [line: 26]
.   .   .   Child: 0  Op: < of type bool [line: 26]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 26]
.   .   .   .   Child: 1  Const 9 of type int [line: 26]
.   .   .   Child: 1  While [line: 26]
.   .   .   .   Child: 0  Op: > of type bool [line: 26]
.   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 26]
.   .   .   .   .   Child: 1  Const 10 of type int [line: 26]
.   .   .   .   Child: 1  If [line: 26]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 26]
.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 26]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 26]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 26]
.   .   .   .   .   Child: 2  Const 9 of type int [line: 26]
.   .   Sibling: 16  While [line: 27]
.   .   .   Child: 0  Op: < of type bool [line: 27]
.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 27]
.   .   .   .   Child: 1  Const 11 of type int [line: 27]
.   .   .   Child: 1  If [line: 27]
.   .   .   .   Child: 0  Op: < of type bool [line: 27]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 27]
.   .   .   .   .   Child: 1  Const 12 of type int [line: 27]
.   .   .   .   Child: 1  While [line: 27]
.   .   .   .   .   Child: 0  Op: > of type bool [line: 27]
.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 27]
.   .   .   .   .   .   Child: 1  Const 13 of type int [line: 27]
.   .   .   .   .   Child: 1  Const 10 of type int [line: 27]
.   .   Sibling: 17  If [line: 28]
.   .   .   Child: 0  Op: < of type bool [line: 28]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 28]
.   .   .   .   Child: 1  Const 13 of type int [line: 28]
.   .   .   Child: 1  While [line: 28]
.   .   .   .   Child: 0  Op: > of type bool [line: 28]
.   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 28]
.   .   .   .   .   Child: 1  Const 14 of type int [line: 28]
.   .   .   .   Child: 1  Const 20 of type int [line: 28]
.   .   .   Child: 2  Const 21 of type int [line: 28]
.   .   Sibling: 18  While [line: 29]
.   .   .   Child: 0  Op: > of type bool [line: 29]
.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 29]
.   .   .   .   Child: 1  Const 15 of type int [line: 29]
.   .   .   Child: 1  If [line: 29]
.   .   .   .   Child: 0  Op: < of type bool [line: 29]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 29]
.   .   .   .   .   Child: 1  Const 16 of type int [line: 29]
.   .   .   .   Child: 1  Const 22 of type int [line: 29]
.   .   .   .   Child: 2  Const 23 of type int [line: 29]
.   .   Sibling: 19  While [line: 30]
.   .   .   Child: 0  Op: > of type bool [line: 30]
.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 30]
.   .   .   .   Child: 1  Const 15 of type int [line: 30]
.   .   .   Child: 1  If [line: 30]
.   .   .   .   Child: 0  Op: < of type bool [line: 30]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 30]
.   .   .   .   .   Child: 1  Const 16 of type int [line: 30]
.   .   .   .   Child: 1  While [line: 30]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 30]
.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 30]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 30]
.   .   .   .   .   Child: 1  Const 9 of type int [line: 30]
.   .   .   .   Child: 2  Const 23 of type int [line: 30]
.   .   Sibling: 20  While [line: 31]
.   .   .   Child: 0  Op: > of type bool [line: 31]
.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 31]
.   .   .   .   Child: 1  Const 15 of type int [line: 31]
.   .   .   Child: 1  If [line: 31]
.   .   .   .   Child: 0  Op: < of type bool [line: 31]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 31]
.   .   .   .   .   Child: 1  Const 16 of type int [line: 31]
.   .   .   .   Child: 1  While [line: 31]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 31]
.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 31]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 31]
.   .   .   .   .   Child: 1  Const 9 of type int [line: 31]
.   .   .   .   Child: 2  While [line: 31]
.   .   .   .   .   Child: 0  Op: > of type bool [line: 31]
.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 31]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 31]
.   .   .   .   .   Child: 1  Const 23 of type int [line: 31]
.   .   Sibling: 21  While [line: 32]
.   .   .   Child: 0  Op: > of type bool [line: 32]
.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 32]
.   .   .   .   Child: 1  Const 15 of type int [line: 32]
.   .   .   Child: 1  If [line: 32]
.   .   .   .   Child: 0  Op: < of type bool [line: 32]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 32]
.   .   .   .   .   Child: 1  Const 16 of type int [line: 32]
.   .   .   .   Child: 1  While [line: 32]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 32]
.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 32]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 32]
.   .   .   .   .   Child: 1  If [line: 32]
.   .   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 32]
.   .   .   .   .   .   Child: 1  Const 34 of type int [line: 32]
.   .   .   .   .   .   Child: 2  Const 34 of type int [line: 32]
.   .   .   .   Child: 2  While [line: 32]
.   .   .   .   .   Child: 0  Op: > of type bool [line: 32]
.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 32]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 32]
.   .   .   .   .   Child: 1  Const 23 of type int [line: 32]
.   .   Sibling: 22  While [line: 33]
.   .   .   Child: 0  Op: > of type bool [line: 33]
.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 33]
.   .   .   .   Child: 1  Const 15 of type int [line: 33]
.   .   .   Child: 1  If [line: 33]
.   .   .   .   Child: 0  Op: < of type bool [line: 33]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 33]
.   .   .   .   .   Child: 1  Const 16 of type int [line: 33]
.   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -10] [line: 33]
.   .   .   .   .   Child: 1  While [line: 33]
.   .   .   .   .   .   Child: 0  Op: < of type bool [line: 33]
.   .   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 33]
.   .   .   .   .   .   .   Child: 1  Const 3 of type int [line: 33]
.   .   .   .   .   .   Child: 1  If [line: 33]
.   .   .   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 33]
.   .   .   .   .   .   .   Child: 1  Const 34 of type int [line: 33]
.   .   .   .   Child: 2  While [line: 33]
.   .   .   .   .   Child: 0  Op: > of type bool [line: 33]
.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 33]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 33]
.   .   .   .   .   Child: 1  Const 23 of type int [line: 33]
.   .   Sibling: 23  While [line: 35]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 35]
.   .   .   Child: 1  While [line: 35]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 35]
.   .   .   .   Child: 1  If [line: 35]
.   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 35]
.   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 35]
.   .   .   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 35]
.   .   Sibling: 24  While [line: 36]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 36]
.   .   .   Child: 1  While [line: 36]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 36]
.   .   .   .   Child: 1  If [line: 36]
.   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 36]
.   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 36]
.   .   Sibling: 25  If [line: 36]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 36]
.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 36]
.   .   .   Child: 2  Id: z of type int [mem: Local loc: -4 size: 1] [line: 36]
.   .   Sibling: 26  While [line: 38]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 38]
.   .   .   Child: 1  While [line: 38]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 38]
.   .   .   .   Child: 1  If [line: 38]
.   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 38]
.   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 38]
.   .   Sibling: 27  While [line: 39]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 39]
.   .   .   Child: 1  While [line: 39]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 39]
.   .   .   .   Child: 1  If [line: 39]
.   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 39]
.   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 39]
.   .   Sibling: 28  If [line: 39]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 39]
.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 39]
.   .   Sibling: 29  While [line: 41]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 41]
.   .   .   Child: 1  If [line: 41]
.   .   .   .   Child: 0  Id: c of type bool [mem: Local loc: -7 size: 1] [line: 41]
.   .   .   .   Child: 1  While [line: 41]
.   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 41]
.   .   .   .   .   Child: 1  If [line: 41]
.   .   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 41]
.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 41]
.   .   .   .   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 41]
.   .   Sibling: 30  While [line: 42]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 42]
.   .   .   Child: 1  If [line: 42]
.   .   .   .   Child: 0  Id: c of type bool [mem: Local loc: -7 size: 1] [line: 42]
.   .   .   .   Child: 1  While [line: 42]
.   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 42]
.   .   .   .   .   Child: 1  If [line: 42]
.   .   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 42]
.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 42]
.   .   Sibling: 31  If [line: 42]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 42]
.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 42]
.   .   .   Child: 2  Id: z of type int [mem: Local loc: -4 size: 1] [line: 42]
.   .   Sibling: 32  If [line: 44]
.   .   .   Child: 0  Id: c of type bool [mem: Local loc: -7 size: 1] [line: 44]
.   .   .   Child: 1  While [line: 44]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 44]
.   .   .   .   Child: 1  While [line: 44]
.   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 44]
.   .   .   .   .   Child: 1  If [line: 44]
.   .   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 44]
.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 44]
.   .   .   .   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 44]
.   .   Sibling: 33  If [line: 45]
.   .   .   Child: 0  Id: c of type bool [mem: Local loc: -7 size: 1] [line: 45]
.   .   .   Child: 1  While [line: 45]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 45]
.   .   .   .   Child: 1  While [line: 45]
.   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 45]
.   .   .   .   .   Child: 1  If [line: 45]
.   .   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 45]
.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 45]
.   .   Sibling: 34  If [line: 45]
.   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 45]
.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 45]
.   .   .   Child: 2  Id: z of type int [mem: Local loc: -4 size: 1] [line: 45]
.   .   Sibling: 35  If [line: 47]
.   .   .   Child: 0  Id: c of type bool [mem: Local loc: -7 size: 1] [line: 47]
.   .   .   Child: 1  While [line: 47]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 47]
.   .   .   .   Child: 1  While [line: 47]
.   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 47]
.   .   .   .   .   Child: 1  If [line: 47]
.   .   .   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 47]
.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 47]
.   .   .   .   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 47]
.   .   .   Child: 2  Id: z of type int [mem: Local loc: -4 size: 1] [line: 47]
.   .   Sibling: 36  While [line: 49]
.   .   .   Child: 0  Id: a of type bool [mem: Local loc: -5 size: 1] [line: 49]
.   .   .   Child: 1  While [line: 49]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 49]
.   .   .   .   Child: 1  While [line: 49]
.   .   .   .   .   Child: 0  Id: c of type bool [mem: Local loc: -7 size: 1] [line: 49]
.   .   .   .   .   Child: 1  While [line: 49]
.   .   .   .   .   .   Child: 0  Id: d of type bool [mem: Local loc: -8 size: 1] [line: 49]
.   .   .   .   .   .   Child: 1  Id: e of type bool [mem: Local loc: -9 size: 1] [line: 49]
.   .   Sibling: 37  If [line: 50]
.   .   .   Child: 0  Id: a of type bool [mem: Local loc: -5 size: 1] [line: 50]
.   .   .   Child: 1  If [line: 50]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 50]
.   .   .   .   Child: 1  If [line: 50]
.   .   .   .   .   Child: 0  Id: c of type bool [mem: Local loc: -7 size: 1] [line: 50]
.   .   .   .   .   Child: 1  If [line: 50]
.   .   .   .   .   .   Child: 0  Id: d of type bool [mem: Local loc: -8 size: 1] [line: 50]
.   .   .   .   .   .   Child: 1  Id: e of type bool [mem: Local loc: -9 size: 1] [line: 50]
.   .   Sibling: 38  If [line: 51]
.   .   .   Child: 0  Id: a of type bool [mem: Local loc: -5 size: 1] [line: 51]
.   .   .   Child: 2  If [line: 51]
.   .   .   .   Child: 0  Id: b of type bool [mem: Local loc: -6 size: 1] [line: 51]
.   .   .   .   Child: 2  If [line: 51]
.   .   .   .   .   Child: 0  Id: c of type bool [mem: Local loc: -7 size: 1] [line: 51]
.   .   .   .   .   Child: 2  If [line: 51]
.   .   .   .   .   .   Child: 0  Id: d of type bool [mem: Local loc: -8 size: 1] [line: 51]
.   .   .   .   .   .   Child: 2  Id: e of type bool [mem: Local loc: -9 size: 1] [line: 51]
.   .   Sibling: 39  Return [line: 53]
.   .   .   Child: 0  Op: * of type int [line: 53]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 53]
.   .   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 53]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
